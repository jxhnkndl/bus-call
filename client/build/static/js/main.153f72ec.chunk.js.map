{"version":3,"sources":["utils/API.js","components/LoginBtn/index.js","components/LogoutBtn/index.js","components/MainNav/index.js","utils/transitions.js","components/CardBody/index.js","components/LandingPage/index.js","components/DashboardNav/index.js","components/Daysheet/index.js","components/StageSchedule/index.js","components/Gig/index.js","components/Tour/index.js","utils/emptyFormObj.js","components/GigForm/index.js","utils/formatObj.js","components/Dashboard/index.js","components/MainContent/index.js","components/Footer/index.js","App.js","index.js"],"names":["axios","get","gigData","post","id","delete","put","LoginBtn","loginWithRedirect","useAuth0","Button","className","variant","onClick","LogoutBtn","logout","user","MainNav","isAuthenticated","Navbar","expand","Brand","href","Nav","picture","src","alt","given_name","pageVariants","initial","opacity","scale","in","out","pageTransitions","type","ease","duration","CardBody","props","spacing","flex","children","LandingPage","DashboardNav","Dropdown","Toggle","Menu","Item","onSelect","e","handleView","view","prev","next","Daysheet","amenities","name","icon","value","greenrooms","catering","internet","parking","showers","rider","mapQuery","street","city","state","zip","console","log","date","venue","loading","process","REACT_APP_GOOGLE_API_KEY","presale","capacity","ListGroup","map","amenity","index","nextVenue","nextDate","nextCity","nextState","distance","StageSchedule","schedule","length","block","timeString","event","_id","Gig","motion","div","animate","exit","variants","transition","Tour","gigs","gig","showtime","split","handleDate","handleSelect","toast","error","emptyFormObj","GigForm","useState","formObj","setFormObj","useEffect","selected","gigObj","obj","dayjs","format","stageBlocks","addGig","a","API","res","updateGig","deleteGig","fetchGigs","handleInputChange","target","handleCheck","checked","handleSchedule","dataset","currentBlock","splice","handleSubmit","preventDefault","Array","from","document","querySelectorAll","forEach","input","setTimeout","Form","Group","controlId","Label","Control","placeholder","onChange","Check","label","slice","toUpperCase","data-index","onSubmit","Dashboard","setGigs","setIndex","setView","data","handleNext","handlePrev","findIndex","window","scrollTo","bgImage","main","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","overflow","position","overlay","background","minHeight","minWidth","display","alignItems","MainContent","isLoading","style","AnimatePresence","exitBeforeEnter","Footer","App","autoClose","hideProgressionBar","newestOnTop","closeOnClick","domain","REACT_APP_AUTH0_DOMAIN","clientId","REACT_APP_AUTH0_CLIENT_ID","ReactDOM","render","redirectUri","location","origin","getElementById"],"mappings":"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","file":"static/js/main.153f72ec.chunk.js","sourcesContent":["// Import Axios\nimport axios from 'axios';\n\n// Create and export request methods\nexport default {\n  getGigs: function() {\n    return axios.get(\"/api/gigs\");\n  },\n  addGig: function(gigData) {\n    return axios.post(\"/api/gigs\", gigData);\n  },\n  deleteGig: function(id) {\n    return axios.delete(\"/api/gigs/\" + id);\n  },\n  updateGig: function(id, gigData) {\n    return axios.put(\"/api/gigs/\" + id, gigData);\n  }\n}","// Import dependencies\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { useAuth0 } from '@auth0/auth0-react';\n\n// Create and export LoginButton component\nexport default function LoginBtn() {\n  const { loginWithRedirect } = useAuth0();\n\n  return (\n    <Button\n      className=\"m-2 px-4 py-2\"\n      variant=\"primary\"\n      onClick={() => loginWithRedirect()}\n    >\n      <i className=\"fas fa-sign-in-alt mr-2\"></i>\n      Log In\n    </Button>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { useAuth0 } from '@auth0/auth0-react';\n\n// Create and export LoginButton component\nexport default function LogoutBtn() {\n  const { logout, user } = useAuth0();\n\n  return (\n    <Button className=\"m-2 px-4 py-2\" variant=\"primary\" onClick={() => logout()}>\n      Log Out\n      <i className=\"fas fa-sign-out-alt ml-2\"></i>\n    </Button>\n  );\n}","// Import dependencies\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport LoginBtn from '../LoginBtn';\nimport LogoutBtn from '../LogoutBtn';\nimport './index.scss';\nimport Dropdown from 'react-bootstrap/esm/Dropdown';\n\n// Create and export MainNav component\nexport default function MainNav() {\n  const { isAuthenticated, user, logout } = useAuth0();\n\n  return (\n    <Navbar variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand href=\"/\">Bus Call</Navbar.Brand>\n      <Nav className=\"ml-auto\">\n        {isAuthenticated ? (\n          <div className=\"media\">\n            {user.picture && (\n              <img\n                src={user.picture}\n                className=\"avatar mr-3 rounded-circle d-none d-md-inline-block\"\n                alt=\"Profile image\"\n              />\n            )}\n            {user.given_name && (\n              <div className=\"media-body mr-3 d-none d-md-inline-block\">\n                <p className=\"h6 my-0\">{`Hi ${user.given_name}!`}</p>\n              </div>\n            )}\n            <LogoutBtn />\n          </div>\n        ) : (\n          <LoginBtn />\n        )}\n      </Nav>\n    </Navbar>\n  );\n}\n","// Stages of page transition animation\nexport const pageVariants = {\n  initial: {\n    opacity: 0,\n    scale: 0.8\n  },\n  in: {\n    opacity: 1,\n    scale: 1\n  },\n  out: {\n    opacity: 0,\n    scale: 1.2\n  }\n}\n\n// General page transition animation properties\nexport const pageTransitions = {\n  type: 'tween',\n  ease: 'anticipate',\n  duration: .3\n}","// Import dependencies\nimport React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport './index.scss';\n\n// Create and export reusable card component\nexport default function CardBody(props) {\n  return (\n    <div className={`dash-card ${props.spacing} ${props.flex}`}>\n      {props.children}\n    </div>\n  );\n}","// Import dependencies\nimport React from 'react';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Button from 'react-bootstrap/Button';\nimport CardBody from '../CardBody';\nimport './index.scss';\n\n// Create and export LandingPage component\nexport default function LandingPage() {\n  const { loginWithRedirect } = useAuth0();\n\n  return (\n    <header className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12 col-md-10 mx-auto\">\n          <h1 className=\"headline\">Never miss a beat</h1>\n          <h3 className=\"sub-headline\">\n            <span className=\"d-block d-sm-inline-block mr-sm-2\">\n              You play the gigs.\n            </span>\n            <span className=\"d-block d-sm-inline-block\">\n              We'll handle the details.\n            </span>\n          </h3>\n          <hr />\n          <Button\n            variant=\"primary\"\n            className=\"mt-3 px-4 py-2\"\n            onClick={() => loginWithRedirect()}\n          >\n            <i className=\"fas fa-headphones-alt mr-2\"></i>\n            Get Started\n          </Button>\n        </div>\n      </div>\n    </header>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport CardBody from '../CardBody';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport './index.scss';\n\n// Overwrite CardBody component styles for this component only\nconst styles = {\n  cardBody: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n};\n\n// Create and export cycle control component\nexport default function DashboardNav(props) {\n\n  return (\n    <div className=\"row mb-2 dashboard-nav\">\n      <div className=\"col-12\">\n        <CardBody\n          flex={'d-flex align-items-center justify-content-between'}\n          spacing={'px-4 py-2 m-2 m-md-0'}\n        >\n          <Dropdown className=\"d-inline-block\">\n            <Dropdown.Toggle id=\"dropdown-basic\">Options</Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item onSelect={(e) => props.handleView('gig')}>\n                View Gigs\n              </Dropdown.Item>\n              <Dropdown.Item onSelect={(e) => props.handleView('tour')}>\n                View Tour\n              </Dropdown.Item>\n              <Dropdown.Item onSelect={(e) => props.handleView('add')}>\n                Add Gig\n              </Dropdown.Item>\n              <Dropdown.Item onSelect={(e) => props.handleView('edit')}>\n                Edit Gig\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n          {props.view === 'gig' && (\n            <div>\n              <p className=\"nav-icon mb-0 mr-2\" onClick={props.prev}>\n                <i className=\"fas fa-arrow-circle-left\"></i>\n              </p>\n              <p className=\"nav-icon mb-0 ml-2\" onClick={props.next}>\n                <i className=\"fas fa-arrow-circle-right\"></i>\n              </p>\n            </div>\n          )}\n        </CardBody>\n      </div>\n    </div>\n  );\n}\n","// Import dependencies\nimport React, { useContext } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport dayjs from 'dayjs';\nimport './index.scss';\n\n// Create and export reusable card component\nexport default function Daysheet(props) {\n  // Create amenities array from props for rendering\n  const amenities = [\n    { name: 'Lounge', icon: 'fas fa-couch', value: props.greenrooms },\n    { name: 'Catering', icon: 'fas fa-pizza-slice', value: props.catering },\n    { name: 'Internet', icon: 'fas fa-wifi', value: props.internet },\n    { name: 'Parking', icon: 'fas fa-parking', value: props.parking },\n    { name: 'Showers', icon: 'fas fa-shower', value: props.showers },\n    { name: 'Full Rider', icon: 'fas fa-cocktail', value: props.rider },\n  ];\n\n  const mapQuery = `${props.street} ${props.city}, ${props.state} ${props.zip}`;\n\n  console.log(mapQuery);\n\n  return (\n    <div className=\"info-container\">\n      {/* Date */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1 small-heading\">\n          <i className=\"far fa-calendar mr-2\"></i>\n          Today is\n        </p>\n        <p className=\"h2\">{props.date}</p>\n      </div>\n\n      {/* Location */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1 small-heading\">\n          <i className=\"fas fa-map-marker-alt mr-2\"></i>\n          You are in\n        </p>\n        <p className=\"h2\">{`${props.city}, ${props.state}.`}</p>\n      </div>\n\n      {/* Tonight's show */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1 small-heading\">\n          <i className=\"fas fa-headphones-alt mr-2\"></i>\n          Tonight's show\n        </p>\n        <p className=\"h2\">{props.venue}</p>\n        <p className=\"h5 mb-1\">{props.street}</p>\n        <p className=\"h5 mb-1\">{`${props.city}, ${props.state}. ${props.zip}`}</p>\n        <iframe\n          className=\"map rounded mt-3\"\n          loading=\"lazy\"\n          src={`https://www.google.com/maps/embed/v1/place?key=${process.env.REACT_APP_GOOGLE_API_KEY}\n        &q=${mapQuery}`}\n        ></iframe>\n      </div>\n\n\n      {/* Tickets */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1 small-heading\">\n          <i className=\"fas fa-ticket-alt mr-2\"></i>\n          Presale / Capacity\n        </p>\n        <p className=\"h2\">\n          {props.presale} / {props.capacity}\n        </p>\n      </div>\n\n      {/* Amenities badges */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-3 small-heading\">Amenities</p>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <ListGroup key=\"amenities\" variant=\"flush\">\n              {/* Map over amenities and render only those that evaluate to true */}\n              {amenities.map((amenity, index) => {\n                if (amenity.value) {\n                  return (\n                    <ListGroup.Item\n                      key={`${index}-${amenity.name}`}\n                      className=\"daysheet-item\"\n                    >\n                      <div className=\"row\">\n                        <div className=\"col-3 col-md-2\">\n                          <p className=\"list-item text-center mb-1\">\n                            <i\n                              className={`amenity-icon mr-2 ${amenity.icon}`}\n                            ></i>\n                          </p>\n                        </div>\n                        <div className=\"col-9 col-md-10 daysheet-item\">\n                          <p className=\"list-item mb-1\">{amenity.name}</p>\n                        </div>\n                      </div>\n                    </ListGroup.Item>\n                  );\n                }\n              })}\n            </ListGroup>\n          </div>\n        </div>\n      </div>\n\n      {/* Next Up */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1 small-heading\">\n          <i className=\"fas fa-road mr-2\"></i>\n          Next up\n        </p>\n        <p className=\"h2 mb-1\">{props.nextVenue}</p>\n        <p className=\"h5 mb-1\">{props.nextDate}</p>\n        <p className=\"h5 mb-1\">{`${props.nextCity}, ${props.nextState}.`}</p>\n        <p className=\"h4 mb-1\">{props.distance}</p>\n      </div>\n    </div>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport './index.scss';\n\n// Create and export reusable card component\nexport default function StageSchedule(props) {\n  return (\n    <div className=\"info-container\">\n      <p className=\"dashboard-heading small-heading h5 mb-2\">Day Schedule</p>\n\n      {props.schedule.length ? (\n        <ListGroup key=\"schedule\" variant=\"flush\">\n          {props.schedule.map((block, index) => {\n            return (\n              <ListGroup.Item\n                key={`${index}-${block._id}`}\n                className=\"daysheet-item\"\n              >\n                <div className=\"row\">\n                  <div className=\"col-12 col-lg-12\">\n                    <p className=\"list-label pt-2 mb-1\">{block.timeString}</p>\n                  </div>\n                  <div className=\"col-12 col-lg-12\">\n                    <p className=\"list-item mb-1\">{block.event}</p>\n                  </div>\n                </div>\n              </ListGroup.Item>\n            );\n          })}\n        </ListGroup>\n      ) : (\n        <p className=\"h2\">NOTHING SCHEDULED</p>\n      )}\n    </div>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport CardBody from '../CardBody';\nimport Daysheet from '../Daysheet';\nimport StageSchedule from '../StageSchedule';\nimport './index.scss';\n\n// Create and export dashboard page component\nexport default function Gig(props) {\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <div>\n        <div className=\"row\">\n          <div className=\"col-12 col-md-6 mb-4\">\n            <CardBody spacing={'p-4 p-md-4 m-2 m-md-0'}>\n              <Daysheet\n                date={props.date}\n                city={props.city}\n                state={props.state}\n                venue={props.venue}\n                street={props.street}\n                zip={props.zip}\n                capacity={props.capacity}\n                presale={props.presale}\n                greenrooms={props.greenrooms}\n                catering={props.catering}\n                showers={props.showers}\n                internet={props.internet}\n                nextDate={props.nextDate}\n                nextCity={props.nextCity}\n                nextState={props.nextState}\n                nextVenue={props.nextVenue}\n                distance={props.distance}\n              />\n            </CardBody>\n          </div>\n          <div className=\"col-12 col-md-6 mb-4\">\n            <CardBody spacing={'p-4 p-md-4 m-2 m-md-0'}>\n              <StageSchedule schedule={props.schedule} />\n            </CardBody>\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport { toast } from 'react-toastify';\nimport Button from 'react-bootstrap/Button';\nimport CardBody from '../CardBody';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport './index.scss';\n\n// Create and export dashboard page component\nexport default function Tour(props) {\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <div className=\"info-container\">\n        <div className=\"row\">\n          <div className=\"col-12 mb-4\">\n            <CardBody spacing={'p-4 p-md-4 m-2 m-md-0'}>\n              <div className=\"container-lg p-0\">\n                <h3 className=\"heading\">Full Tour Dates</h3>\n                <p>Click a date to view show details</p>\n\n                {props.gigs.length ? (\n                  <ListGroup key=\"tour\" variant=\"\">\n                    {/* Map over gigs array and create tour routing table */}\n                    {props.gigs.map((gig, index) => {\n                      const timeArr = gig.schedule[3].timeString.split(' ');\n                      const showtime = timeArr[0];\n\n                      return (\n                        <ListGroup.Item\n                          key={`${index}-${gig._id}`}\n                          className=\"tour-date row\"\n                        >\n                          <div className=\"row\">\n                            <div className=\"col-12 col-md-8 mx-auto\">\n                              <p className=\"small-heading pt-2 mb-1\">\n                                <i className=\"fas fa-calendar mr-2\"></i>\n                                {props.handleDate(gig.date)}\n                              </p>\n                              <p className=\"list-item mb-1 d-lg-inline-block\">\n                                {`${gig.venue.city}, ${gig.venue.state}. `}\n                                <span className=\"d-block d-lg-inline-block\">{`@ ${gig.venue.name}`}</span>\n                              </p>\n                            </div>\n                            <div className=\"col-12 col-md-8 mx-auto\">\n                              <p className=\"list-label mb-1\">\n                                {`Doors @ ${gig.schedule[2].timeString}`}\n                                <span className=\"d-none d-md-inline-block mx-2\">{`/`}</span>\n                                <span className=\"d-block d-md-inline-block\">{`Show @ ${showtime} PM`}</span>\n                              </p>\n                            </div>\n                            <div className=\"col-12 col-md-8 mx-auto\">\n                              <p className=\"list-label mb-1\">\n                                {`w/ Cartel, This Providence, Anarbor`}\n                              </p>\n                            </div>\n                            <div className=\"col-12 col-md-8 mx-auto\">\n                              <Button\n                                id={gig._id}\n                                variant=\"primary\"\n                                className=\"my-2 mr-2\"\n                                onClick={(event) => {\n                                  if (props.gigs.length) {\n                                    props.handleSelect(event);\n\n                                  } else {\n                                    toast.error('Oh no! Something went wrong. Try again!');\n                                  }\n                                }}\n                              >\n                                <i className=\"fas fa-info-circle mr-2\"></i>\n                                View Details\n                              </Button>\n                            </div>\n                          </div>\n                        </ListGroup.Item>\n                      );\n                    })}\n                  </ListGroup>\n                ) : (\n                  <p className=\"h2\">NO TOUR DATES TO DISPLAY</p>\n                )}\n              </div>\n            </CardBody>\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n","// Create and export empty form object\nexport const emptyFormObj = {\n  date: '',\n  venue: {\n    name: '',\n    street: '',\n    city: '',\n    state: '',\n    zip: '',\n    capacity: '0',\n    presale: '0',\n  },\n  catering: false,\n  internet: false,\n  showers: false,\n  greenrooms: false,\n  parking: false,\n  rider: false,\n  distance: 'N/A',\n  schedule: [\n    { timeString: '12:00 PM', event: 'Load In' },\n    { timeString: '3:00 PM', event: 'Soundcheck' },\n    { timeString: '6:00 PM', event: 'Doors' },\n    { timeString: '7:00 - 7:30 PM', event: 'Opener' },\n    { timeString: '7:45 - 8:15 PM', event: 'Second' },\n    { timeString: '8:30 - 9:15 PM', event: 'Direct' },\n    { timeString: '9:30 - 10:50 PM', event: 'Headliner' },\n    { timeString: '2:00 AM', event: 'Bus Call' },\n  ]\n}","// Import dependencies\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport { emptyFormObj } from '../../utils/emptyFormObj';\nimport formatObj from '../../utils/formatObj';\nimport { toast } from 'react-toastify';\nimport API from '../../utils/API';\nimport CardBody from '../CardBody';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './index.scss';\n\n// Create and export dashboard page component\nexport default function GigForm(props) {\n  // Init state\n  const [formObj, setFormObj] = useState(emptyFormObj);\n\n  useEffect(() => {\n    if (props.selected) {\n      const gigObj = formatObj(props.selected);\n      console.log(gigObj);\n      setFormObj(gigObj);\n    }\n  }, []);\n\n  // Amenities array\n  const amenities = [\n    'catering',\n    'internet',\n    'showers',\n    'greenrooms',\n    'parking',\n    'rider',\n  ];\n\n  const venueFields = [\n    { name: 'name', col: 12, required: true },\n    { name: 'street', col: 12, required: false },\n    { name: 'city', col: 6, required: true },\n    { name: 'state', col: 6, required: true },\n    { name: 'zip', col: 6, required: false },\n    { name: 'date', col: 6, required: true },\n    { name: 'capacity', col: 6, required: false },\n    { name: 'presale', col: 6, required: false },\n  ];\n\n  const stageBlocks = [\n    { timeString: '', event: 'Load In' },\n    { timeString: '', event: 'Soundcheck' },\n    { timeString: '', event: 'Doors' },\n    { timeString: '', event: 'Opener' },\n    { timeString: '', event: 'Second' },\n    { timeString: '', event: 'Direct' },\n    { timeString: '', event: 'Headliner' },\n    { timeString: '', event: 'Curfew' },\n    { timeString: '', event: 'Bus Call' },\n  ];\n\n  // Add gig to database\n  const addGig = async () => {\n    try {\n      const res = await API.addGig(formObj);\n      toast('Gig added!');\n      console.log(res);\n    } catch (err) {\n      toast.error('Uh oh! Something went wrong. Please try again.');\n      console.log(err);\n    }\n  };\n\n  // Update gig in database\n  const updateGig = async () => {\n    console.log('Updating gig...');\n    const id = props.selected._id;\n    try {\n      const res = await API.updateGig(id, formObj);\n      toast('Gig updated!');\n      console.log(res);\n    } catch (err) {\n      toast.error('Uh oh! Something went wrong. Please try again.');\n      console.log(err);\n    }\n  };\n\n  // Delete gig from database and fetch updated gigs data from API\n  const deleteGig = async () => {\n    console.log('Deleting gig...');\n    const id = props.selected._id;\n    try {\n      const res = await API.deleteGig(id);\n      props.fetchGigs();\n      toast('Gig deleted!');\n    } catch (err) {\n      toast.error('Uh oh! Something went wrong. Please try again.');\n      console.log(err);\n    }\n  };\n\n  // Handle input changes\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    const venue = formObj.venue;\n\n    // If input is date, set field directly\n    if (name === 'date') {\n      setFormObj({\n        ...formObj,\n        [name]: value,\n      });\n\n      return;\n    }\n\n    // Otherwise, set field inside venue object\n    setFormObj({\n      ...formObj,\n      venue: {\n        ...venue,\n        [name]: value,\n      },\n    });\n  };\n\n  // Handle updating state from checkboxes\n  const handleCheck = (event) => {\n    const { name, checked } = event.target;\n    setFormObj({\n      ...formObj,\n      [name]: checked,\n    });\n  };\n\n  // Handle updating state's nested schedule array\n  const handleSchedule = (event) => {\n    // Capture event parameters\n    const { name, value } = event.target;\n    const { index } = event.target.dataset;\n\n    // Extract matching object from schedule in state\n    const schedule = [...formObj.schedule];\n    const currentBlock = schedule[index];\n\n    // Update the block's and put it back in the schedule\n    currentBlock.timeString = value;\n    schedule.splice(index, 1, currentBlock);\n\n    // Reset state\n    setFormObj({\n      ...formObj,\n      schedule: schedule,\n    });\n  };\n\n  // Handle resetting all input fields in UI on submit\n  const handleReset = () => {\n    Array.from(document.querySelectorAll('input')).forEach(\n      (input) => (input.value = '')\n    );\n    \n    // Reset form object state back to the empty gig object structure\n    setFormObj(emptyFormObj);\n  };\n\n  // Create a formatted input label from its name\n  const createLabel = (name) => {\n    return name.slice(0, 1).toUpperCase() + name.slice(1);\n  };\n\n  // Post form data to API\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Only submit these properties have values\n    if (formObj.date) {\n      console.log(formObj);\n\n      // Send the new or updated gig to the API\n      if (props.view === 'edit') {\n        updateGig();\n      } else if (props.view === 'add') {\n        addGig();\n      }\n\n      // Reset form fields\n      handleReset();\n\n      // Delay fetching gigs from API for long enough to ensure\n      // that the newly added gig has been created and can be\n      // returned to the client\n      setTimeout(() => {\n        props.fetchGigs();\n      }, 250);\n    }\n  };\n\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <section>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <CardBody spacing={'p-4 p-md-4 m-2 m-md-0'}>\n              <p className=\"h2 heading\">Add/Edit Gig</p>\n\n              <Form>\n                <div className=\"row\">\n                  {/* Venue Name */}\n                  <div className=\"col-12 col-md-6\">\n                    <Form.Group controlId=\"venueInputGroup\">\n                      <Form.Label>Venue Name *</Form.Label>\n                      <Form.Control\n                        name=\"name\"\n                        type=\"text\"\n                        placeholder=\"Enter Venue Name\"\n                        value={formObj.venue.name}\n                        onChange={handleInputChange}\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* Address */}\n                  <div className=\"col-12 col-md-6\">\n                    <Form.Group controlId=\"streetInputGroup\">\n                      <Form.Label>Street Address</Form.Label>\n                      <Form.Control\n                        name=\"street\"\n                        type=\"text\"\n                        placeholder=\"Enter Street Address\"\n                        value={formObj.venue.street}\n                        onChange={handleInputChange}\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* City */}\n                  <div className=\"col-6\">\n                    <Form.Group controlId=\"cityInputGroup\">\n                      <Form.Label>City *</Form.Label>\n                      <Form.Control\n                        name=\"city\"\n                        type=\"text\"\n                        placeholder=\"Enter City\"\n                        value={formObj.venue.city}\n                        onChange={handleInputChange}\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* State */}\n                  <div className=\"col-6\">\n                    <Form.Group controlId=\"stateInputGroup\">\n                      <Form.Label>State *</Form.Label>\n                      <Form.Control\n                        name=\"state\"\n                        type=\"text\"\n                        placeholder=\"Enter State\"\n                        value={formObj.venue.state}\n                        onChange={handleInputChange}\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* Zip */}\n                  <div className=\"col-6 col-md-3\">\n                    <Form.Group controlId=\"zipInputGroup\">\n                      <Form.Label>Zip</Form.Label>\n                      <Form.Control\n                        name=\"zip\"\n                        type=\"text\"\n                        placeholder=\"Enter Zip\"\n                        value={formObj.venue.zip}\n                        onChange={handleInputChange}\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* Date */}\n                  <div className=\"col-6 col-md-3\">\n                    <Form.Group controlId=\"dateInputGroup\">\n                      <Form.Label>Date *</Form.Label>\n                      <Form.Control\n                        name=\"date\"\n                        type=\"date\"\n                        placeholder=\"Enter Date\"\n                        value={formObj.date}\n                        onChange={handleInputChange}\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* Capacity */}\n                  <div className=\"col-6 col-md-3\">\n                    <Form.Group controlId=\"capacityInputGroup\">\n                      <Form.Label>Capacity</Form.Label>\n                      <Form.Control\n                        name=\"capacity\"\n                        type=\"text\"\n                        placeholder=\"Enter Capacity\"\n                        value={formObj.venue.capacity}\n                        onChange={handleInputChange}\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* Presale */}\n                  <div className=\"col-6 col-md-3\">\n                    <Form.Group controlId=\"presaleInputGroup\">\n                      <Form.Label>Presale</Form.Label>\n                      <Form.Control\n                        name=\"presale\"\n                        type=\"text\"\n                        placeholder=\"Enter Presale\"\n                        value={formObj.venue.presale}\n                        onChange={handleInputChange}\n                      />\n                    </Form.Group>\n                  </div>\n\n                  <div className=\"col-12\">\n                    <p className=\"small-heading\">\n                      Amenities (Select all that apply):\n                    </p>\n                  </div>\n\n                  {/* Creates checkboxes for each element in the amenities array */}\n                  {amenities.map((amenity, index) => {\n                    return (\n                      <div key={`checkbox-${index}`} className=\"col-6 col-md-4\">\n                        <Form.Check\n                          type=\"checkbox\"\n                          name={amenity}\n                          label={`${createLabel(amenity)}`}\n                          checked={formObj[amenity]}\n                          onChange={handleCheck}\n                        />\n                      </div>\n                    );\n                  })}\n\n                  <div className=\"col-12 pt-3\">\n                    <p className=\"small-heading mb-0\">Update Stage Schedule</p>\n                    <p>\n                      You can either use the default times we've provided or\n                      update them with your own.\n                    </p>\n                  </div>\n\n                  {/* Create inputs for adding times to stage schedule events */}\n                  {formObj.schedule.map((block, index) => {\n                    return (\n                      <div\n                        key={`block-${block.event}`}\n                        className=\"col-6 col-md-3\"\n                      >\n                        <Form.Group>\n                          <Form.Label>{block.event}</Form.Label>\n                          <Form.Control\n                            data-index={index}\n                            name={block.event}\n                            type=\"text\"\n                            placeholder={`Enter ${block.event} start time`}\n                            value={block.timeString}\n                            onChange={handleSchedule}\n                            onSubmit={() =>\n                              setFormObj({\n                                ...formObj,\n                                schedule: stageBlocks,\n                              })\n                            }\n                          />\n                        </Form.Group>\n                      </div>\n                    );\n                  })}\n                </div>\n\n                {/* Submit */}\n                <div className=\"row pt-3\">\n                  <div className=\"col-12\">\n                    {/* Add gig */}\n                    {props.view === 'add' && (\n                      <Button\n                        type=\"submit\"\n                        variant=\"primary\"\n                        className=\"py-2 px-3 mr-2\"\n                        onClick={handleSubmit}\n                      >\n                        <i className=\"fas fa-plus mr-2\"></i>\n                        Add Gig\n                      </Button>\n                    )}\n\n                    {/* Update gig */}\n                    {props.view === 'edit' && (\n                      <div>\n                        <Button\n                          type=\"submit\"\n                          variant=\"primary\"\n                          className=\"py-2 px-3\"\n                          onClick={handleSubmit}\n                        >\n                          <i className=\"fas fa-edit mr-2\"></i>\n                          Update Gig\n                        </Button>\n                        <Button\n                          variant=\"danger\"\n                          className=\"py-2 px-3 mr-2\"\n                          onClick={deleteGig}\n                        >\n                          <i className=\"fas fa-trash-alt mr-2\"></i>\n                          Delete Gig\n                        </Button>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </Form>\n            </CardBody>\n          </div>\n        </div>\n      </section>\n    </motion.div>\n  );\n}\n","// Import dependencies\nimport dayjs from 'dayjs';\nimport { emptyFormObj } from './emptyFormObj';\n\nexport default function formatObj(obj) {\n  return {\n    date: dayjs(obj.date).format('YYYY-MM-DD'),\n    venue: {\n      name: obj.venue.name,\n      street: obj.venue.street,\n      city: obj.venue.city,\n      state: obj.venue.state,\n      zip: obj.venue.zip,\n      capacity: obj.venue.capacity,\n      presale: obj.venue.presale\n    },\n    catering: obj.catering,\n    greenrooms: obj.greenrooms,\n    internet: obj.internet,\n    parking: obj.parking,\n    showers: obj.showers,\n    rider: obj.rider,\n    schedule: [\n      { timeString: obj.schedule[0].timeString, event: \"Load In\" },\n      { timeString: obj.schedule[1].timeString, event: \"Sound Check\" },\n      { timeString: obj.schedule[2].timeString, event: \"Doors\" },\n      { timeString: obj.schedule[3].timeString, event: \"Opener\" },\n      { timeString: obj.schedule[4].timeString, event: \"Second\" },\n      { timeString: obj.schedule[5].timeString, event: \"Direct\" },\n      { timeString: obj.schedule[6].timeString, event: \"Headliner\" },\n      { timeString: obj.schedule[7].timeString, event: \"Bus Call\" },\n    ]\n  }\n}","// Import dependencies\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport { toast } from 'react-toastify';\nimport Button from 'react-bootstrap/Button';\nimport CardBody from '../CardBody';\nimport DashboardNav from '../DashboardNav';\nimport Gig from '../Gig';\nimport Tour from '../Tour';\nimport GigForm from '../GigForm';\nimport API from '../../utils/API';\nimport dayjs from 'dayjs';\nimport './index.scss';\n\nimport formatObj from '../../utils/formatObj';\n\n// Create and export dashboard page component\nexport default function Dashboard() {\n  // Set initial state\n  const [gigs, setGigs] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [view, setView] = useState('tour');\n\n  // Fetch gigs from API when component mounts and whenever the view state changes\n  useEffect(() => {\n    fetchGigs();\n  }, []);\n\n  // Fetch gigs from DB\n  const fetchGigs = async () => {\n    console.log('Fetching gigs...');\n    try {\n      const res = await API.getGigs();\n      setGigs(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Delete gig from database and fetch updated gigs data from API\n  const handleDelete = async (id) => {\n    console.log('Deleting gig...');\n    try {\n      const res = await API.deleteGig(id);\n      fetchGigs();\n      toast('Gig deleted!');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Handle formatting date for display\n  const handleDate = (date) => {\n    return dayjs(date).format('ddd. MMMM D, YYYY');\n  };\n\n  // Handle finding and rendering matching show details from click event in tour view\n  const handleSelect = (event) => {\n    event.preventDefault();\n\n    // Figure out which gig the user wants to see\n    const { id } = event.target;\n    const index = gigs.findIndex((gig) => gig._id === id);\n\n    // If the specified gig can't be found, notify the user\n    // and log the error\n    if (index === -1) {\n      toast.error('Something went wrong! Please try again.');\n      console.log(event.target);\n      return;\n    } else {\n      console.log('Accessing gig...');\n\n      // Update index state to render selected show\n      setIndex(index);\n\n      // Update view state to switch back to gig view\n      setView('gig');\n      window.scrollTo(0, 0);\n    }\n  };\n\n  // Click handler for cycling to next gig\n  const handleNext = () => {\n    if (index === gigs.length - 1) {\n      setIndex(0);\n    } else {\n      console.log(gigs);\n      setIndex(index + 1);\n    }\n  };\n\n  // Click handler for cycling to previous gig\n  const handlePrev = () => {\n    if (index === 0) {\n      setIndex(gigs.length - 1);\n    } else {\n      setIndex(index - 1);\n    }\n  };\n\n  // Click handler for change dashboard's view state\n  const handleView = (view) => {\n    setView(view);\n  };\n\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <section className=\"p-2 px-md-4 px-lg-5\">\n        {gigs.length ? (\n          <div>\n            {/* Dashboard navigation controls */}\n            <DashboardNav\n              prev={handlePrev}\n              next={handleNext}\n              gigs={gigs}\n              view={view}\n              handleView={handleView}\n            />\n\n            {/* Daysheet and stage schedule view */}\n            {view === 'gig' && (\n              <Gig\n                date={handleDate(gigs[index].date)}\n                city={gigs[index].venue.city}\n                state={gigs[index].venue.state}\n                venue={gigs[index].venue.name}\n                street={gigs[index].venue.street}\n                zip={gigs[index].venue.zip}\n                capacity={gigs[index].venue.capacity}\n                presale={gigs[index].venue.presale}\n                greenrooms={gigs[index].greenrooms}\n                catering={gigs[index].catering}\n                showers={gigs[index].showers}\n                internet={gigs[index].internet}\n                nextDate={\n                  gigs[index + 1] ? handleDate(gigs[index + 1].date) : 'N/A'\n                }\n                nextCity={gigs[index + 1] ? gigs[index + 1].venue.city : 'N/A'}\n                nextState={\n                  gigs[index + 1] ? gigs[index + 1].venue.state : 'N/A'\n                }\n                nextVenue={gigs[index + 1] ? gigs[index + 1].venue.name : 'N/A'}\n                distance={'315 miles'}\n                schedule={gigs[index].schedule}\n                prev={handlePrev}\n                next={handleNext}\n              />\n            )}\n\n            {/* Tour view for viewing full tour routing */}\n            {view === 'tour' && (\n              <Tour\n                gigs={gigs}\n                handleDate={handleDate}\n                handleSelect={handleSelect}\n                // handleDelete={handleDelete}\n              />\n            )}\n\n            {/* Form view for adding and editing gigs */}\n            {view === 'add' && (\n              <GigForm\n                view={view}\n                handleView={handleView}\n                fetchGigs={fetchGigs}\n                gigs={gigs}\n              />\n            )}\n\n            {/* Form view for adding and editing gigs */}\n            {view === 'edit' && (\n              <GigForm\n                view={view}\n                handleView={handleView}\n                selected={gigs[index]}\n                fetchGigs={fetchGigs}\n                gigs={gigs}\n              />\n            )}\n          </div>\n        ) : (\n          <p className=\"h2\">LOADING</p>\n        )}\n      </section>\n    </motion.div>\n  );\n}\n","// Import packages\nimport React from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport LandingPage from '../LandingPage';\nimport Dashboard from '../Dashboard';\n\nconst bgImage = {\n  main: {\n    backgroundImage: `url(${process.env.PUBLIC_URL + '/imgs/stage.jpg'})`,\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    overflow: 'hidden',\n    position: 'relative'\n  },\n  overlay: {\n    background: 'linear-gradient(0deg, rgba(33,33,33,1) 20%, rgba(118,118,118,0.3883928571428571) 100%)',\n    position: 'absolute',\n    minHeight: '100%',\n    minWidth: '100vw',\n    display: 'flex',\n    alignItems: 'center'\n  }\n};\n\nexport default function MainContent() {\n  const { isLoading, isAuthenticated } = useAuth0();\n\n  if (!isAuthenticated && !isLoading) {\n    return (\n      <main style={bgImage.main}>\n        <div style={bgImage.overlay}>\n          <AnimatePresence exitBeforeEnter>\n            <LandingPage />\n          </AnimatePresence>\n        </div>\n      </main>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <main style={{ overflow: 'hidden' }}>\n        <AnimatePresence exitBeforeEnter>\n          <h3 className=\"text-center\">Loading dashboard...</h3>\n        </AnimatePresence>\n      </main>\n    );\n  }\n\n  if (isAuthenticated) {\n    return (\n      <main style={{ overflow: 'hidden' }}>\n        <AnimatePresence exitBeforeEnter>\n          <Dashboard />\n        </AnimatePresence>\n      </main>\n    );\n  }\n}\n","// Import dependencies\nimport React from 'react';\nimport './index.scss';\n\n// Create and export Footer component\nexport default function Footer() {\n  return (\n    <footer>\n      <p>Powered by jxhnkndl</p>\n    </footer>\n  );\n}","// Import packages\nimport React, { useState, useEffect } from 'react';\nimport { Switch, Route, NavLink } from 'react-router-dom';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { ToastContainer } from 'react-toastify';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport API from '../src/utils/API';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport MainNav from './components/MainNav';\nimport MainContent from './components/MainContent';\nimport LandingPage from './components/LandingPage';\nimport Dashboard from './components/Dashboard';\nimport Footer from './components/Footer';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.scss';\n\n// Create and export App component\nexport default function App() {\n  // Log authentication status during development\n  const { isAuthenticated, isLoading } = useAuth0();\n  console.log(isAuthenticated);\n\n  return (\n    <div className=\"app-container\">\n      <MainNav />\n      <MainContent />\n      <Footer />\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressionBar={false}\n        newestOnTop\n        closeOnClick\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, useLocation } from 'react-router-dom';\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport './index.scss';\nimport App from './App';\n\n// Config Auth0\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n\n// Render the React app\nReactDOM.render(\n  <Auth0Provider\n    domain={domain}\n    clientId={clientId}\n    redirectUri={window.location.origin}\n  >\n    <Router>\n      <App />\n    </Router>\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
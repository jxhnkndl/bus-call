{"version":3,"sources":["utils/API.js","components/ProtectedRoute/index.js","components/LoginBtn/index.js","components/LogoutBtn/index.js","components/MainNav/index.js","utils/transitions.js","components/CardBody/index.js","components/LandingPage/index.js","components/DashboardNav/index.js","components/Daysheet/index.js","components/StageSchedule/index.js","components/DayView/index.js","utils/emptyFormObj.js","components/FormView/index.js","components/Dashboard/index.js","components/Footer/index.js","App.js","index.js"],"names":["axios","get","gigData","post","ProtectedRoute","Component","component","props","isAuthenticated","useAuth0","render","to","pathname","state","from","location","LoginBtn","loginWithRedirect","Button","className","variant","onClick","LogoutBtn","logout","MainNav","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","exact","pageVariants","initial","opacity","scale","in","out","pageTransitions","type","ease","duration","CardBody","spacing","flex","children","LandingPage","DashboardNav","console","log","Dropdown","Menu","Item","onSelect","e","handleView","prev","next","Daysheet","amenities","name","icon","value","greenrooms","catering","internet","parking","showers","rider","date","city","venue","street","zip","presale","capacity","map","amenity","index","Badge","nextVenue","nextDate","nextCity","nextState","distance","StageSchedule","schedule","length","ListGroup","block","timeString","event","_id","DayView","motion","div","animate","exit","variants","transition","emptyFormObj","GigForm","useState","formObj","setFormObj","stageBlocks","addGig","a","API","res","handleInputChange","target","handleCheck","checked","handleSchedule","dataset","currentBlock","splice","createLabel","slice","toUpperCase","Form","col","field","Group","controlId","Label","Control","placeholder","onChange","Check","label","data-index","onSubmit","preventDefault","fetchGigs","toast","Array","document","querySelectorAll","forEach","input","Dashboard","gigs","setGigs","setIndex","view","setView","useEffect","data","handleDate","dayjs","format","handleNext","handlePrev","Footer","App","style","overflow","AnimatePresence","exitBeforeEnter","path","position","autoClose","hideProgressionBar","newestOnTop","closeOnClick","domain","process","REACT_APP_AUTH0_DOMAIN","clientId","REACT_APP_AUTH0_CLIENT_ID","ReactDOM","redirectUri","window","origin","getElementById"],"mappings":"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","file":"static/js/main.217e271c.chunk.js","sourcesContent":["// Import Axios\nimport axios from 'axios';\n\n// Create and export request methods\nexport default {\n  getGigs: function() {\n    return axios.get(\"/api/gigs\");\n  },\n  addGig: function(gigData) {\n    return axios.post(\"/api/gigs\", gigData);\n  }\n}","// Import dependencies\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useAuth0 } from '@auth0/auth0-react';\n\n// Create and export Protected Route component\nexport default function ProtectedRoute({ component: Component, ...props }) {\n  const { isAuthenticated } = useAuth0();\n\n  return (\n    <Route\n      {...props}\n      render={(props) => {\n        if (isAuthenticated) {\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect to={{ pathname: '/', state: { from: props.location } }} />\n          );\n        }\n      }}\n    />\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { useAuth0 } from '@auth0/auth0-react';\n\n// Create and export LoginButton component\nexport default function LoginBtn() {\n  const { loginWithRedirect } = useAuth0();\n\n  return (\n    <Button className=\"m-2 px-4 py-2\" variant=\"primary\" onClick={() => loginWithRedirect()}>\n      Log In\n    </Button>\n  );\n}","// Import dependencies\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { useAuth0 } from '@auth0/auth0-react';\n\n// Create and export LoginButton component\nexport default function LogoutBtn() {\n  const { logout } = useAuth0();\n\n  return (\n    <Button className=\"m-2 px-4 py-2\" variant=\"primary\" onClick={() => logout()}>\n      Log Out\n      <i className=\"fas fa-sign-out-alt ml-2\"></i>\n    </Button>\n  );\n}","// Import dependencies\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport LoginBtn from '../LoginBtn';\nimport LogoutBtn from '../LogoutBtn';\nimport './index.scss';\n\n// Create and export MainNav component\nexport default function MainNav() {\n  const { isAuthenticated } = useAuth0();\n\n  return (\n    <Navbar variant=\"dark\" expand=\"lg\" className=\"mb-4\">\n      <Navbar.Brand href=\"/\">Bus Call</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"nav-drawer\" />\n      <Navbar.Collapse id=\"nav-drawer\">\n        <Nav className=\"mr-auto\">\n          <NavLink className=\"nav-link\" exact to=\"/dashboard\">\n            Dashboard\n          </NavLink>\n        </Nav>\n        <Nav>{isAuthenticated ? <LogoutBtn /> : <LoginBtn />}</Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n","// Stages of page transition animation\nexport const pageVariants = {\n  initial: {\n    opacity: 0,\n    scale: 0.8\n  },\n  in: {\n    opacity: 1,\n    scale: 1\n  },\n  out: {\n    opacity: 0,\n    scale: 1.2\n  }\n}\n\n// General page transition animation properties\nexport const pageTransitions = {\n  type: 'tween',\n  ease: 'anticipate',\n  duration: .3\n}","// Import dependencies\nimport React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport './index.scss';\n\n// Create and export reusable card component\nexport default function CardBody(props) {\n  return (\n    <div className={`dash-card ${props.spacing} ${props.flex}`}>\n      {props.children}\n    </div>\n  );\n}","// Import dependencies\nimport React from 'react';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport CardBody from '../CardBody';\nimport './index.scss';\n\n\n// Create and export LandingPage component\nexport default function LandingPage() {\n  return (\n    <section className=\"container text-center\">\n      <h1>BUS CALL LANDING PAGE</h1>\n    </section>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport CardBody from '../CardBody';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport './index.scss';\n\n// Overwrite CardBody component styles for this component only\nconst styles = {\n  cardBody: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n};\n\n// Create and export cycle control component\nexport default function DashboardNav(props) {\n  console.log(props);\n\n  return (\n    <div className=\"row mb-2 dashboard-nav\">\n      <div className=\"col-12\">\n        <CardBody\n          flex={'d-flex align-items-center justify-content-between'}\n          spacing={'px-4 py-2 m-2 m-md-0'}\n        >\n          <Dropdown className=\"d-inline-block\">\n            <Dropdown.Toggle id=\"dropdown-basic\">View By</Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item onSelect={(e) => props.handleView('day')}>Daysheets</Dropdown.Item>\n              <Dropdown.Item onSelect={(e) => props.handleView('day')}>Routing</Dropdown.Item>\n              <Dropdown.Item onSelect={(e) => props.handleView('form')}>Add/Edit Gig</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n          <div>\n            <p className=\"nav-icon mb-0 mr-2\" onClick={props.prev}>\n              <i className=\"fas fa-arrow-circle-left\"></i>\n            </p>\n            <p className=\"nav-icon mb-0 ml-2\" onClick={props.next}>\n              <i className=\"fas fa-arrow-circle-right\"></i>\n            </p>\n          </div>\n        </CardBody>\n      </div>\n    </div>\n  );\n}\n","// Import dependencies\nimport React, { useContext } from 'react';\nimport dayjs from 'dayjs';\nimport Badge from 'react-bootstrap/Badge';\nimport './index.scss';\n\n// Create and export reusable card component\nexport default function Daysheet(props) {\n  // Create amenities array from props for rendering\n  const amenities = [\n    { name: 'Green Rooms', icon: 'fas fa-couch', value: props.greenrooms },\n    { name: 'Catering', icon: 'fas fa-pizza-slice', value: props.catering },\n    { name: 'Internet', icon: 'fas fa-wifi', value: props.internet },\n    { name: 'Parking', icon: 'fas fa-parking', value: props.parking },\n    { name: 'Showers', icon: 'fas fa-shower', value: props.showers },\n    { name: 'Full Rider', icon: 'fas fa-cocktail', value: props.rider },\n  ];\n\n  return (\n    <div className=\"info-container\">\n\n      {/* Date */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1 small-heading\">Today is</p>\n        <p className=\"h2\">{props.date}</p>\n      </div>\n\n      {/* Location */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1 small-heading\">You are in</p>\n        <p className=\"h2\">{`${props.city}, ${props.state}.`}</p>\n      </div>\n\n      {/* Tonight's show */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1 small-heading\">Tonight's show</p>\n        <p className=\"h2\">{props.venue}</p>\n        <p className=\"h5 mb-1\">{props.street}</p>\n        <p className=\"h5 mb-1\">{`${props.city}, ${props.state}. ${props.zip}`}</p>\n      </div>\n\n      {/* Tickets */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1 small-heading\">Presale / Capacity</p>\n        <p className=\"h2\">{props.presale} / {props.capacity}</p>\n      </div>\n\n      {/* Amenities badges */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-3 small-heading\">Amenities</p>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            {/* Map over amenities and render only those that evaluate to true */}\n            {amenities.map((amenity, index) => {\n              if (amenity.value) {\n                return (\n                  <Badge\n                    key={`${index}-${amenity.name}`}\n                    className=\"col-12 col-lg-6 px-4 py-2\"\n                  >\n                    <div className=\"row amenity-badge py-4 rounded\">\n                      <div className=\"col-3\">\n                        <i className={`amenity-icon mx-3 ${amenity.icon}`}></i>\n                      </div>\n                      <div className=\"col-6\">\n                        <p className=\"mb-0\">{amenity.name}</p>\n                      </div>\n                    </div>\n                  </Badge>\n                );\n              }\n            })}\n          </div>\n        </div>\n      </div>\n\n      {/* Next Up */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1 small-heading\">Next up</p>\n        <p className=\"h2 mb-1\">{props.nextVenue}</p>\n        <p className=\"h5 mb-1\">{props.nextDate}</p>\n        <p className=\"h5 mb-1\">{`${props.nextCity}, ${props.nextState}.`}</p>\n        <p className=\"h4 mb-1\">{props.distance}</p>\n      </div>\n\n    </div>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport './index.scss';\n\n// Create and export reusable card component\nexport default function StageSchedule(props) {\n  return (\n    <div className=\"info-container\">\n      <p className=\"dashboard-heading small-heading h5 mb-2\">Day Schedule</p>\n\n      {props.schedule.length ? (\n        <ListGroup key=\"schedule\" variant=\"flush\">\n          {props.schedule.map((block, index) => {\n            return (\n              <ListGroup.Item\n                key={`${index}-${block._id}`}\n                className=\"daysheet-item\"\n              >\n                <div className=\"row\">\n                  <div className=\"col-12 col-lg-12 daysheet-time\">\n                    <p className=\"block-time pt-2 mb-1\">{block.timeString}</p>\n                  </div>\n                  <div className=\"col-12 col-lg-12 daysheet-item\">\n                    <p className=\"block-event mb-1\">{block.event}</p>\n                  </div>\n                </div>\n              </ListGroup.Item>\n            );\n          })}\n        </ListGroup>\n      ) : (\n        <p className=\"h2\">NOTHING SCHEDULED</p>\n      )}\n    </div>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport CardBody from '../CardBody';\nimport CycleControl from '../DashboardNav';\nimport Daysheet from '../Daysheet';\nimport StageSchedule from '../StageSchedule';\nimport './index.scss';\n\n// Create and export dashboard page component\nexport default function DayView(props) {\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <div>\n        <div className=\"row\">\n          <div className=\"col-12 col-md-6 mb-4\">\n            <CardBody spacing={'p-4 p-md-4 m-2 m-md-0'}>\n              <Daysheet\n                date={props.date}\n                city={props.city}\n                state={props.state}\n                venue={props.venue}\n                street={props.street}\n                zip={props.zip}\n                capacity={props.capacity}\n                presale={props.presale}\n                greenrooms={props.greenrooms}\n                catering={props.catering}\n                showers={props.showers}\n                internet={props.internet}\n                nextDate={props.nextDate}\n                nextCity={props.nextCity}\n                nextState={props.nextState}\n                nextVenue={props.nextVenue}\n                distance={props.distance}\n              />\n            </CardBody>\n          </div>\n          <div className=\"col-12 col-md-6 mb-4\">\n            <CardBody spacing={'p-4 p-md-4 m-2 m-md-0'}>\n              <StageSchedule schedule={props.schedule} />\n            </CardBody>\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n","// Create and export empty form object\nexport const emptyFormObj = {\n  date: '',\n  venue: {\n    name: '',\n    street: '',\n    city: '',\n    state: '',\n    zip: '',\n    capacity: '0',\n    presale: '0',\n  },\n  catering: false,\n  internet: false,\n  showers: false,\n  greenrooms: false,\n  parking: false,\n  rider: false,\n  distance: 'N/A',\n  schedule: [\n    { timeString: '', event: 'Load In' },\n    { timeString: '', event: 'Soundcheck' },\n    { timeString: '', event: 'Doors' },\n    { timeString: '', event: 'Opener' },\n    { timeString: '', event: 'Second' },\n    { timeString: '', event: 'Direct' },\n    { timeString: '', event: 'Headliner' },\n    { timeString: '', event: 'Curfew' },\n    { timeString: '', event: 'Bus Call' },\n  ]\n}\n\n","// Import dependencies\nimport React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport { emptyFormObj } from '../../utils/emptyFormObj';\nimport { toast } from 'react-toastify';\nimport API from '../../utils/API';\nimport CardBody from '../CardBody';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './index.scss';\n\n// Create and export dashboard page component\nexport default function GigForm(props) {\n  // Init state\n  const [formObj, setFormObj] = useState(emptyFormObj);\n\n  // Amenities array\n  const amenities = [\n    'catering',\n    'internet',\n    'showers',\n    'greenrooms',\n    'parking',\n    'rider',\n  ];\n\n  const venueFields = [\n    { name: 'name', col: 12 },\n    { name: 'street', col: 12 },\n    { name: 'city', col: 6 },\n    { name: 'state', col: 6 },\n    { name: 'zip', col: 6 },\n    { name: 'date', col: 6 },\n    { name: 'capacity', col: 6 },\n    { name: 'presale', col: 6 },\n  ];\n\n  const stageBlocks = [\n    { timeString: '', event: 'Load In' },\n    { timeString: '', event: 'Soundcheck' },\n    { timeString: '', event: 'Doors' },\n    { timeString: '', event: 'Opener' },\n    { timeString: '', event: 'Second' },\n    { timeString: '', event: 'Direct' },\n    { timeString: '', event: 'Headliner' },\n    { timeString: '', event: 'Curfew' },\n    { timeString: '', event: 'Bus Call' },\n  ];\n\n  const addGig = async () => {\n    try {\n      const res = await API.addGig(formObj);\n      console.log(res);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Handle input changes\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    const venue = formObj.venue;\n\n    // If input is date, set field directly\n    if (name === 'date') {\n      setFormObj({\n        ...formObj,\n        [name]: value,\n      });\n\n      return;\n    }\n\n    // Otherwise, set field inside venue object\n    setFormObj({\n      ...formObj,\n      venue: {\n        ...venue,\n        [name]: value,\n      },\n    });\n  };\n\n  // Handle updating state from checkboxes\n  const handleCheck = (event) => {\n    const { name, checked } = event.target;\n    setFormObj({\n      ...formObj,\n      [name]: checked,\n    });\n  };\n\n  // Handle updating state's nested schedule array\n  const handleSchedule = (event) => {\n    // Capture event parameters\n    const { name, value } = event.target;\n    const { index } = event.target.dataset;\n\n    // Extract matching object from schedule in state\n    const schedule = [...formObj.schedule];\n    const currentBlock = schedule[index];\n\n    // Update the block's and put it back in the schedule\n    currentBlock.timeString = value;\n    schedule.splice(index, 1, currentBlock);\n\n    // Reset state\n    setFormObj({\n      ...formObj,\n      schedule: schedule,\n    });\n  };\n\n  // Handle resetting all input fields in UI on submit\n  const handleReset = () => {\n    Array.from(document.querySelectorAll('input')).forEach(\n      (input) => (input.value = '')\n    );\n\n    setFormObj(emptyFormObj);\n  };\n\n  // Create a formatted input label from its name\n  const createLabel = (name) => {\n    return name.slice(0, 1).toUpperCase() + name.slice(1);\n  };\n\n  // Post form data to API\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (formObj.date) {\n      console.log(formObj);\n      props.fetchGigs();\n      addGig();\n      toast('Gig created!');\n      handleReset();\n    }\n  };\n\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <section>\n        <div className=\"row\">\n          <div className=\"col-12 col-md-10 col-lg-8 mx-auto\">\n            <CardBody spacing={'p-4 p-md-4 m-2 m-md-0'}>\n              <Form>\n                <div className=\"row\">\n                  {/* Creates all fields for adding venue data to form object */}\n                  {venueFields.map((field, index) => {\n                    return (\n                      <div\n                        key={`inputField-${index}`}\n                        className={`col-${field.col}`}\n                      >\n                        <Form.Group controlId={`${field.name}InputGroup`}>\n                          <Form.Label>\n                            {index === 0\n                              ? `Venue Name:`\n                              : `${createLabel(field.name)}`}\n                          </Form.Label>\n                          <Form.Control\n                            name={field.name}\n                            type={field.name === 'date' ? 'date' : 'text'}\n                            placeholder={\n                              field.name === 'date'\n                                ? 'mm/dd/yyyy'\n                                : `Enter ${createLabel(field.name)}`\n                            }\n                            value={formObj[field.name]}\n                            onChange={handleInputChange}\n                          />\n                        </Form.Group>\n                      </div>\n                    );\n                  })}\n\n                  <div className=\"col-12\">\n                    <p>Amenities (Select all that apply):</p>\n                  </div>\n\n                  {/* Creates checkboxes for each element in the amenities array */}\n                  {amenities.map((amenity, index) => {\n                    return (\n                      <div key={`checkbox-${index}`} className=\"col-6 col-md-4\">\n                        <Form.Check\n                          type=\"checkbox\"\n                          name={amenity}\n                          label={`${createLabel(amenity)}:`}\n                          checked={formObj[amenity]}\n                          onChange={handleCheck}\n                        />\n                      </div>\n                    );\n                  })}\n\n                  <div className=\"col-12 pt-3\">\n                    <p>Insert time strings for each block:</p>\n                  </div>\n\n                  {/* Create inputs for adding times to stage schedule events */}\n                  {stageBlocks.map((block, index) => {\n                    return (\n                      <div key={`block-${block.event}`} className=\"col-12\">\n                        <Form.Group>\n                          <Form.Label>{block.event}</Form.Label>\n                          <Form.Control\n                            data-index={index}\n                            name={block.event}\n                            type=\"text\"\n                            placeholder={`Enter ${block.event} start time`}\n                            value={formObj.schedule.timeString}\n                            onChange={handleSchedule}\n                            onSubmit={() =>\n                              setFormObj({\n                                ...formObj,\n                                schedule: stageBlocks,\n                              })\n                            }\n                          />\n                        </Form.Group>\n                      </div>\n                    );\n                  })}\n                </div>\n\n                {/* Submit */}\n                <div className=\"row pt-3\">\n                  <div className=\"col-12\">\n                    <Button\n                      type=\"submit\"\n                      variant=\"primary\"\n                      className=\"py-2 px-3\"\n                      onClick={handleSubmit}\n                    >\n                      Add Gig\n                    </Button>\n                  </div>\n                </div>\n              </Form>\n            </CardBody>\n          </div>\n        </div>\n      </section>\n    </motion.div>\n  );\n}\n","// Import dependencies\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport Button from 'react-bootstrap/Button';\nimport CardBody from '../CardBody';\nimport DashboardNav from '../DashboardNav';\nimport DayView from '../DayView';\nimport FormView from '../FormView';\nimport API from '../../utils/API';\nimport dayjs from 'dayjs';\nimport './index.scss';\n\n// Create and export dashboard page component\nexport default function Dashboard() {\n  // Set initial state\n  const [gigs, setGigs] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [view, setView] = useState('day');\n\n  // Fetch gigs from API when component mounts and whenever the view state changes\n  useEffect(() => {\n    fetchGigs();\n  }, [view]);\n\n  // Fetch gigs from DB\n  const fetchGigs = async () => {\n    console.log('fetching gigs...');\n    try {\n      const res = await API.getGigs();\n      setGigs(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Handle formatting date for display\n  const handleDate = (date) => {\n    return dayjs(date).format('ddd. MMMM D, YYYY');\n  };\n\n  // Click handler for cycling to next gig\n  const handleNext = () => {\n    if (index === gigs.length - 1) {\n      setIndex(0);\n    } else {\n      console.log(gigs);\n      setIndex(index + 1);\n    }\n  };\n\n  // Click handler for cycling to previous gig\n  const handlePrev = () => {\n    if (index === 0) {\n      setIndex(gigs.length - 1);\n    } else {\n      setIndex(index - 1);\n    }\n  };\n\n  // Click handler for change dashboard's view state\n  const handleView = (view) => {\n    setView(view);\n  };\n\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <section className=\"p-2 px-md-4 px-lg-5\">\n        {gigs.length ? (\n          <div>\n            {/* Dashboard navigation controls */}\n            <DashboardNav\n              prev={handlePrev}\n              next={handleNext}\n              handleView={handleView}\n            />\n\n            {/* Daysheet and stage schedule view */}\n            {view === 'day' && (\n              <DayView\n                date={handleDate(gigs[index].date)}\n                city={gigs[index].venue.city}\n                state={gigs[index].venue.state}\n                venue={gigs[index].venue.name}\n                street={gigs[index].venue.street}\n                zip={gigs[index].venue.zip}\n                capacity={gigs[index].venue.capacity}\n                presale={gigs[index].venue.presale}\n                greenrooms={gigs[index].greenrooms}\n                catering={gigs[index].catering}\n                showers={gigs[index].showers}\n                internet={gigs[index].internet}\n                nextDate={\n                  gigs[index + 1] ? handleDate(gigs[index + 1].date) : 'N/A'\n                }\n                nextCity={gigs[index + 1] ? gigs[index + 1].venue.city : 'N/A'}\n                nextState={\n                  gigs[index + 1] ? gigs[index + 1].venue.state : 'N/A'\n                }\n                nextVenue={gigs[index + 1] ? gigs[index + 1].venue.name : 'N/A'}\n                distance={'315 miles'}\n                schedule={gigs[index].schedule}\n                prev={handlePrev}\n                next={handleNext}\n              />\n            )}\n\n            {/* Form view for adding and editing gigs */}\n            {view === 'form' && <FormView fetchGigs={fetchGigs} gigs={gigs} />}\n          </div>\n        ) : (\n          <p className=\"h2\">LOADING</p>\n        )}\n      </section>\n    </motion.div>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport './index.scss';\n\n// Create and export Footer component\nexport default function Footer() {\n  return (\n    <footer>\n      <p>Powered by jxhnkndl</p>\n    </footer>\n  );\n}","// Import packages\nimport React, { useState, useEffect } from 'react';\nimport { Switch, Route, NavLink, useLocation } from 'react-router-dom';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { ToastContainer } from 'react-toastify';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport API from '../src/utils/API';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport MainNav from './components/MainNav';\nimport LandingPage from './components/LandingPage';\nimport Dashboard from './components/Dashboard';\nimport Footer from './components/Footer';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.scss';\n\n// Create and export App component\nexport default function App() {\n\n  // Log authentication status during development\n  const { isAuthenticated } = useAuth0();\n  console.log(isAuthenticated);\n\n  return (\n    <div className=\"app-container\">\n      <MainNav />\n      <main style={{ overflow: 'hidden' }} className=\"\">\n        <AnimatePresence exitBeforeEnter>\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            {/* <Route exact path=\"/dashboard\" component={Dashboard} /> */}\n            <ProtectedRoute exact path=\"/dashboard\" component={Dashboard} />\n          </Switch>\n        </AnimatePresence>\n      </main>\n      <Footer />\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressionBar={false}\n        newestOnTop\n        closeOnClick\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport './index.scss';\nimport App from './App';\n\n// Config Auth0\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n\n// Render the React app\nReactDOM.render(\n  <Auth0Provider\n    domain={domain}\n    clientId={clientId}\n    redirectUri={window.location.origin}\n  >\n    <Router>\n      <App />\n    </Router>\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["utils/transitions.js","utils/API.js","utils/emptyFormObj.js","components/CardBody/index.js","components/ConfirmModal/index.js","utils/formatObj.js","components/ClosingForm/index.js","components/DashboardNav/index.js","components/Daysheet/index.js","components/ClosingNumbers/index.js","components/StageSchedule/index.js","components/Gig/index.js","components/GigForm/index.js","components/Tour/index.js","components/Dashboard/index.js","components/Footer/index.js","components/LandingPage/index.js","components/LoginBtn/index.js","components/LogoutBtn/index.js","components/MainNav/index.js","components/MainContent/index.js","App.js","index.js"],"names":["pageVariants","initial","opacity","scale","in","out","pageTransitions","type","ease","duration","axios","get","gigData","post","id","delete","put","emptyFormObj","date","closed","venue","name","street","city","state","zip","capacity","promoter","email","catering","internet","showers","lounge","parking","rider","distance","schedule","timeString","event","closingNumbers","presale","doors","comps","guarantee","bonus","merch","gross","comped","split","scans","CardBody","props","className","spacing","flex","children","ConfirmModal","Modal","show","onHide","handleCancel","Header","closeButton","Title","Body","message","Footer","Button","variant","confirm","color","onClick","handleConfirm","cancel","formatObj","obj","view","isClosed","dayjs","Date","add","format","ClosingForm","useState","formObj","setFormObj","useEffect","selected","gigObj","console","log","updateGig","a","_id","API","res","toast","success","error","handleInputChange","target","value","motion","div","animate","exit","variants","transition","Form","Group","controlId","Label","Control","tabIndex","placeholder","onChange","preventDefault","setTimeout","fetchGigs","handleView","DashboardNav","setShow","handleClose","renderTooltip","Tooltip","Dropdown","Toggle","Menu","Item","onSelect","gig","OverlayTrigger","placement","overlay","e","Daysheet","amenities","nextGig","icon","hasNoAmenities","every","amenity","mapQuery","handleDate","loading","src","process","REACT_APP_GOOGLE_API_KEY","href","ListGroup","map","index","ClosingNumbers","totalAttendance","totalTickets","percentCap","num1","num2","rawPercent","toFixed","getPercentage","venueCut","netMerch","merchPerHead","netRevenue","getDecimals","num","StageSchedule","length","block","Gig","GigForm","stageBlocks","addGig","deleteGig","setIndex","handleCheck","checked","handleSchedule","dataset","currentBlock","splice","handleArtist","handleSubmit","Array","from","document","querySelectorAll","forEach","input","Check","label","slice","toUpperCase","data-index","onSubmit","Tour","gigs","showtime","handleSelect","Dashboard","setGigs","setView","data","handleNext","handlePrev","prev","next","findIndex","window","scrollTo","LandingPage","loginWithRedirect","useAuth0","LoginBtn","LogoutBtn","logout","user","returnTo","location","origin","MainNav","isAuthenticated","Navbar","expand","Brand","Nav","picture","alt","given_name","bgImage","main","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","overflow","position","background","minHeight","minWidth","display","alignItems","MainContent","isLoading","style","AnimatePresence","exitBeforeEnter","App","autoClose","hideProgressionBar","newestOnTop","draggablePercent","closeOnClick","domain","REACT_APP_AUTH0_DOMAIN","clientId","REACT_APP_AUTH0_CLIENT_ID","ReactDOM","render","redirectUri","getElementById"],"mappings":"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","file":"static/js/main.24e6205d.chunk.js","sourcesContent":["// Stages of page transition animation\nexport const pageVariants = {\n  initial: {\n    opacity: 0,\n    scale: 0.8\n  },\n  in: {\n    opacity: 1,\n    scale: 1\n  },\n  out: {\n    opacity: 0,\n    scale: 1.2\n  }\n}\n\n// General page transition animation properties\nexport const pageTransitions = {\n  type: 'tween',\n  ease: 'anticipate',\n  duration: .3\n}","// Import Axios\nimport axios from 'axios';\n\n// Create and export API request methods\nexport default {\n  getGigs: function() {\n    return axios.get(\"/api/gigs\");\n  },\n  addGig: function(gigData) {\n    return axios.post(\"/api/gigs\", gigData);\n  },\n  deleteGig: function(id) {\n    return axios.delete(\"/api/gigs/\" + id);\n  },\n  updateGig: function(id, gigData) {\n    return axios.put(\"/api/gigs/\" + id, gigData);\n  }\n}","// Create and export empty form object for initializing state\nexport const emptyFormObj = {\n  date: '',\n  closed: false,\n  venue: {\n    name: '',\n    street: '',\n    city: '',\n    state: '',\n    zip: '',\n    capacity: 0,\n    promoter: '',\n    email: ''\n  },\n  catering: false,\n  internet: false,\n  showers: false,\n  lounge: false,\n  parking: false,\n  rider: false,\n  distance: 'N/A',\n  schedule: [\n    { timeString: '12:00 PM', event: 'Load In' },\n    { timeString: '3:00 PM', event: 'Soundcheck' },\n    { timeString: '6:00 PM', event: 'Doors' },\n    { timeString: '7:00 - 7:30 PM', event: 'Opener' },\n    { timeString: '7:45 - 8:15 PM', event: 'Second' },\n    { timeString: '8:30 - 9:15 PM', event: 'Direct' },\n    { timeString: '9:30 - 10:50 PM', event: 'Headliner' },\n    { timeString: '2:00 AM', event: 'Bus Call' },\n  ],\n  closingNumbers: {\n    presale: 0,\n    doors: 0,\n    comps: 0,\n    guarantee: 0,\n    bonus: 0,\n    merch: {\n      gross: 0,\n      comped: 0,\n      split: 1.00,\n      scans: 0\n    }\n  }\n}","// Import dependencies\nimport React from 'react';\nimport './index.scss';\n\n// Create and export CardBody component\nexport default function CardBody(props) {\n  return (\n    <div className={`dash-card ${props.spacing} ${props.flex}`}>\n      {props.children}\n    </div>\n  );\n}","// Import dependencies\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\n// Create and export ConfirmModal component\nexport default function ConfirmModal(props) {\n  return (\n    <Modal show={props.show} onHide={props.handleCancel}>\n      <Modal.Header closeButton>\n        <Modal.Title>Hey! Virtual tour manager here! 🤖</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {props.message}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant={props.confirm.color} onClick={props.handleConfirm}>\n          {props.confirm.message}\n        </Button>\n        <Button variant={props.cancel.color} onClick={props.handleCancel}>\n          {props.cancel.message}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","// Import dependencies\nimport dayjs from 'dayjs';\nimport { emptyFormObj } from './emptyFormObj';\n\n// Create and export formatting function so that the same form used to add\n// new gigs can be auto-populated with the details of an existing gig returned\n// by the API allowing a user to easily update it\nexport default function formatObj(obj, view) {\n  let isClosed = false;\n\n  // Set gig's closed field to true if a view argument is provided\n  if (view || obj.closed) {\n    isClosed = true;\n  }\n\n  // Format date to account for GMT offset\n  const adjustedDate = dayjs(new Date(obj.date)).add(12, 'hour').format('YYYY-MM-DD');\n\n  return {\n    date: adjustedDate,\n    closed: isClosed,\n    venue: {\n      name: obj.venue.name,\n      street: obj.venue.street,\n      city: obj.venue.city,\n      state: obj.venue.state,\n      zip: obj.venue.zip,\n      capacity: obj.venue.capacity,\n      promoter: obj.venue.promoter,\n      email: obj.venue.email\n    },\n    catering: obj.catering,\n    lounge: obj.lounge,\n    internet: obj.internet,\n    parking: obj.parking,\n    showers: obj.showers,\n    rider: obj.rider,\n    schedule: [\n      { timeString: obj.schedule[0].timeString, event: \"Load In\" },\n      { timeString: obj.schedule[1].timeString, event: \"Sound Check\" },\n      { timeString: obj.schedule[2].timeString, event: \"Doors\" },\n      { timeString: obj.schedule[3].timeString, event: obj.schedule[3].event },\n      { timeString: obj.schedule[4].timeString, event: obj.schedule[4].event },\n      { timeString: obj.schedule[5].timeString, event: obj.schedule[5].event },\n      { timeString: obj.schedule[6].timeString, event: obj.schedule[6].event },\n      { timeString: obj.schedule[7].timeString, event: \"Bus Call\" },\n    ],\n    closingNumbers: {\n      presale: obj.closingNumbers.presale,\n      doors: obj.closingNumbers.doors,\n      comps: obj.closingNumbers.comps,\n      guarantee: obj.closingNumbers.guarantee,\n      bonus: obj.closingNumbers.bonus,\n      merch: {\n        gross: obj.closingNumbers.merch.gross,\n        comped: obj.closingNumbers.merch.comped,\n        split: obj.closingNumbers.merch.split,\n        scans: obj.closingNumbers.merch.scans\n      }\n    }\n  }\n}","// Import dependencies\nimport React, { useState, useEffect } from 'react';\nimport { emptyFormObj } from '../../utils/emptyFormObj';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport { toast } from 'react-toastify';\nimport API from '../../utils/API';\nimport Button from 'react-bootstrap/Button';\nimport CardBody from '../CardBody';\nimport ConfirmModal from '../ConfirmModal';\nimport Form from 'react-bootstrap/Form';\nimport formatObj from '../../utils/formatObj';\nimport './index.scss';\n\n// Create and export ClosingForm component\nexport default function ClosingForm(props) {\n  const [formObj, setFormObj] = useState(emptyFormObj);\n\n  // Configure the form for updating values on the selected gig\n  useEffect(() => {\n    if (props.selected) {\n      const gigObj = formatObj(props.selected, 'report');\n      console.log(gigObj);\n      setFormObj(gigObj);\n    }\n  }, []);\n\n  // Update existing gig in database\n  const updateGig = async () => {\n    console.log('Adding closing numbers to gig...');\n    const id = props.selected._id;\n    try {\n      const res = await API.updateGig(id, formObj);\n      toast.success(`Gig updated! Don't forget extra strings... 🎸`);\n      console.log(res);\n    } catch (err) {\n      toast.error('Uh oh! Something went wrong. Try again! 🧐');\n      console.log(err);\n    }\n  };\n\n  // Handle changes made to properties in closingNumbers\n  // nested object\n  const handleInputChange = (event) => {\n    const closingNumbers = formObj.closingNumbers;\n    const merch = formObj.closingNumbers.merch;\n    const { name, value, type } = event.target;\n\n    // Convert strings to numbers \n    if (name === 'split') {\n      merch.split = value;\n    }\n\n    if (name === 'gross') {\n      merch.gross = value;\n    }\n\n    if (name === 'scans') {\n      merch.scans = value;\n    }\n\n    if (name === 'comped') {\n      merch.comped = value;\n    }\n\n    // Reset form object with input values\n    setFormObj({\n      ...formObj,\n      closingNumbers: {\n        ...closingNumbers,\n        // [name]: value * 1,\n        [name]: value\n      },\n    });\n  };\n\n  // Submit closing numbers to API\n  const handleUpdate = (event) => {\n    event.preventDefault();\n\n    // Post updated data to API\n    updateGig();\n\n    // Update gigs in state and toggle back to gig view\n    setTimeout(() => {\n      props.fetchGigs();\n      props.handleView('gig');\n    }, 250);\n  };\n\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <section>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <CardBody spacing={'p-4 p-md-4 m-2 m-md-0'}>\n              <p className=\"h2 heading\">Add Closing Metrics</p>\n\n              <Form>\n                <div className=\"row\">\n\n                  {/* Attendance  */}\n                  <div className=\"col-12 col-md-4 pt-3\">\n                    <p className=\"small-heading mb-3\">Head Counts</p>\n\n                    <div className=\"row\">\n                      \n                      {/* Presale */}\n                      <div className=\"col-12\">\n                        <Form.Group controlId=\"presaleInputGroup\">\n                          <Form.Label>Presale</Form.Label>\n                          <Form.Control\n                            name=\"presale\"\n                            type=\"number\"\n                            tabIndex=\"1\"\n                            placeholder=\"Enter Presale Count\"\n                            value={formObj.closingNumbers.presale}\n                            onChange={handleInputChange}\n                          />\n                        </Form.Group>\n                      </div>\n\n                      {/* Doors */}\n                      <div className=\"col-12\">\n                        <Form.Group controlId=\"doorsInputGroup\">\n                          <Form.Label>Doors</Form.Label>\n                          <Form.Control\n                            name=\"doors\"\n                            type=\"number\"\n                            tabIndex=\"2\"\n                            placeholder=\"Enter Door Count\"\n                            value={formObj.closingNumbers.doors}\n                            onChange={handleInputChange}\n                          />\n                        </Form.Group>\n                      </div>\n\n                      {/* Comps */}\n                      <div className=\"col-12\">\n                        <Form.Group controlId=\"compsInputGroup\">\n                          <Form.Label>Comps</Form.Label>\n                          <Form.Control\n                            name=\"comps\"\n                            type=\"number\"\n                            tabIndex=\"3\"\n                            placeholder=\"Enter Comp Count\"\n                            value={formObj.closingNumbers.comps}\n                            onChange={handleInputChange}\n                          />\n                        </Form.Group>\n                      </div>\n\n                    </div>\n                  </div>\n\n                  {/* Revenue */}\n                  <div className=\"col-12 col-md-4 pt-3\">\n                    <p className=\"small-heading mb-3\">Revenue Streams</p>\n\n                    <div className=\"row\">\n\n                      {/* Guarantee */}\n                      <div className=\"col-12\">\n                        <Form.Group controlId=\"guaranteeInputGroup\">\n                          <Form.Label>Performance Guarantee</Form.Label>\n                          <Form.Control\n                            name=\"guarantee\"\n                            type=\"number\"\n                            tabIndex=\"4\"\n                            placeholder=\"Enter Guarantee\"\n                            value={formObj.closingNumbers.guarantee}\n                            onChange={handleInputChange}\n                          />\n                        </Form.Group>\n                      </div>\n\n                      {/* Gross Merch */}\n                      <div className=\"col-12\">\n                        <Form.Group controlId=\"grossInputGroup\">\n                          <Form.Label>Gross Merch Revenue</Form.Label>\n                          <Form.Control\n                            name=\"gross\"\n                            type=\"number\"\n                            tabIndex=\"5\"\n                            placeholder=\"Enter Gross Merch Revenue\"\n                            value={formObj.closingNumbers.merch.gross}\n                            onChange={handleInputChange}\n                          />\n                        </Form.Group>\n                      </div>\n\n                      {/* Bonus */}\n                      <div className=\"col-12\">\n                        <Form.Group controlId=\"bonusInputGroup\">\n                          <Form.Label>Performance Bonus</Form.Label>\n                          <Form.Control\n                            name=\"bonus\"\n                            type=\"number\"\n                            tabIndex=\"6\"\n                            placeholder=\"Enter Bonus\"\n                            value={formObj.closingNumbers.bonus}\n                            onChange={handleInputChange}\n                          />\n                        </Form.Group>\n                      </div>\n\n                    </div>\n                  </div>\n\n                  {/* Merchandise */}\n                  <div className=\"col-12 col-md-4 pt-3\">\n                    <p className=\"small-heading mb-3\">Merch</p>\n\n                    <div className=\"row\">\n\n                      {/* Merch Split */}\n                      <div className=\"col-12\">\n                        <Form.Group controlId=\"splitInputGroup\">\n                          <Form.Label>Artist Split</Form.Label>\n                          <Form.Control\n                            name=\"split\"\n                            type=\"number\"\n                            tabIndex=\"7\"\n                            placeholder=\"Enter Artist Split\"\n                            value={formObj.closingNumbers.merch.split}\n                            onChange={handleInputChange}\n                          />\n                        </Form.Group>\n                      </div>\n\n                      {/* Comped Merch */}\n                      <div className=\"col-12\">\n                        <Form.Group controlId=\"compedInputGroup\">\n                          <Form.Label>Comped Merch</Form.Label>\n                          <Form.Control\n                            name=\"comped\"\n                            type=\"number\"\n                            tabIndex=\"8\"\n                            placeholder=\"Enter Total Comped\"\n                            value={formObj.closingNumbers.merch.comped}\n                            onChange={handleInputChange}\n                          />\n                        </Form.Group>\n                      </div>\n\n                      {/* Scans */}\n                      <div className=\"col-12\">\n                        <Form.Group controlId=\"scansInputGroup\">\n                          <Form.Label>Soundscans</Form.Label>\n                          <Form.Control\n                            name=\"scans\"\n                            type=\"number\"\n                            tabIndex=\"9\"\n                            placeholder=\"Enter Total Scans\"\n                            value={formObj.closingNumbers.merch.scans}\n                            onChange={handleInputChange}\n                          />\n                        </Form.Group>\n                      </div>\n                    </div>\n                  </div>\n\n\n                  <div className=\"col-12\">\n                    <Button\n                      type=\"submit\"\n                      variant=\"primary\"\n                      className=\"py-2 px-3 mr-2\"\n                      onClick={handleUpdate}\n                    >\n                      <i className=\"fas fa-edit mr-2\"></i>\n                      Update Gig\n                    </Button>\n                  </div>\n\n\n                </div>\n              </Form>\n            </CardBody>\n          </div>\n        </div>\n      </section>\n    </motion.div>\n  );\n}\n","// Import dependencies\nimport React, { useState } from 'react';\nimport CardBody from '../CardBody';\nimport ConfirmModal from '../ConfirmModal';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport './index.scss';\n\n// Create and export DashboardNav component\nexport default function DashboardNav(props) {\n  const { handleView } = props;\n\n  // Modal visibility state\n  const [show, setShow] = useState(false);\n\n  // Handle toggling confirmation modal's visibility\n  const handleShow = () => setShow(true);\n  const handleClose = () => setShow(false);\n\n  // Render tooltip\n  const renderTooltip = (message) => (\n    <Tooltip id=\"icon-tooltip\">{message}</Tooltip>\n  );\n\n  return (\n    <div className=\"row mb-2 dashboard-nav\">\n      <div className=\"col-12\">\n        <CardBody\n          flex={'d-flex align-items-center justify-content-between'}\n          spacing={'px-4 py-3 m-2 m-md-0'}\n        >\n          {/* Dropdown view options */}\n          <Dropdown className=\"d-inline-block\">\n            <Dropdown.Toggle id=\"dropdown-basic\">Options</Dropdown.Toggle>\n            <Dropdown.Menu>\n              {/* View tour dates */}\n              <Dropdown.Item onSelect={() => handleView('tour')}>\n                View Tour Dates\n              </Dropdown.Item>\n\n              {/* Add new gig */}\n              {props.view === 'tour' && (\n                <Dropdown.Item onSelect={() => handleView('add')}>\n                  Add Gig\n                </Dropdown.Item>\n              )}\n\n              {/* Edit gig details */}\n              {props.view === 'gig' && (\n                <Dropdown.Item onSelect={() => handleView('edit')}>\n                  Edit Gig Details\n                </Dropdown.Item>\n              )}\n\n              {/* Add/Edit closing numbers */}\n              {props.view === 'gig' && (\n                <Dropdown.Item onSelect={() => handleView('report')}>\n                  {props.gig.closed\n                    ? 'Edit Closing Numbers'\n                    : 'Add Closing Numbers'}\n                </Dropdown.Item>\n              )}\n            </Dropdown.Menu>\n          </Dropdown>\n\n          {/* If application is in gig view */}\n          {props.view === 'gig' && (\n            <div>\n              {props.gig.closed && (\n                <OverlayTrigger\n                  placement=\"bottom\"\n                  overlay={renderTooltip('Gig has been completed')}\n                >\n                  <p className=\"nav-icon mb-0 mr-3 text-success\">\n                    <i className=\"fas fa-check\"></i>\n                  </p>\n                </OverlayTrigger>\n              )}\n\n              {/* Nav Icon -> Edit gig details */}\n              <OverlayTrigger\n                placement=\"bottom\"\n                overlay={renderTooltip('Edit gig details')}\n              >\n                <p\n                  className=\"nav-icon mb-0 mr-3\"\n                  onClick={() => handleView('edit')}\n                >\n                  <i className=\"fas fa-edit\"></i>\n                </p>\n              </OverlayTrigger>\n\n              {/* Nav Icon -> Edit Closing Numbers */}\n              <OverlayTrigger\n                placement=\"bottom\"\n                overlay={renderTooltip(\n                  props.gig.closed\n                    ? 'Edit closing numbers'\n                    : 'Add closing numbers'\n                )}\n              >\n                <p\n                  className=\"nav-icon mb-0 mr-3\"\n                  onClick={() => handleView('report')}\n                >\n                  <i className=\"fas fa-chart-pie\"></i>\n                </p>\n              </OverlayTrigger>\n\n              {/* Nav Icon -> View tour dates */}\n              <OverlayTrigger\n                placement=\"bottom\"\n                overlay={renderTooltip('View tour dates')}\n              >\n                <p className=\"nav-icon mb-0\" onClick={() => handleView('tour')}>\n                  <i className=\"fas fa-list\"></i>\n                </p>\n              </OverlayTrigger>\n            </div>\n          )}\n\n          {/* If application is in tour view */}\n          {props.view === 'tour' && (\n            <div>\n              {/* Nav Icon -> Add new gig */}\n              <OverlayTrigger\n                placement=\"bottom\"\n                overlay={renderTooltip('Add New Gig')}\n              >\n                <p className=\"nav-icon mb-0\" onClick={() => handleView('add')}>\n                  <i className=\"fas fa-plus\"></i>\n                </p>\n              </OverlayTrigger>\n            </div>\n          )}\n\n          {/* If application is in any variant of form view */}\n          {(props.view === 'add' ||\n            props.view === 'edit' ||\n            props.view === 'report') && (\n            <div>\n              <p className=\"nav-icon mb-0\" onClick={handleShow}>\n                <i className=\"far fa-window-close\"></i>\n              </p>\n            </div>\n          )}\n        </CardBody>\n      </div>\n\n      {/* Confirmation modal */}\n      <ConfirmModal\n        show={show}\n        message=\"Are you sure you want to discard your changes?\"\n        confirm={{ color: 'danger', message: 'Discard' }}\n        cancel={{ color: 'dark', message: 'Cancel' }}\n        handleConfirm={(e) => {\n          handleClose();\n          props.handleView('tour');\n\n          props.view === 'report' || props.view === 'edit'\n            ? props.handleView('gig')\n            : props.handleView('tour');\n        }}\n        handleCancel={handleClose}\n      />\n    </div>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport dayjs from 'dayjs';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport './index.scss';\n\n// Create and export Daysheet component\nexport default function Daysheet(props) {\n  const { gig, nextGig } = props;\n\n  // Create amenities array from props for rendering\n  const amenities = [\n    { name: 'Lounge', icon: 'fas fa-couch', value: gig.lounge },\n    { name: 'Catering', icon: 'fas fa-pizza-slice', value: gig.catering },\n    { name: 'Internet', icon: 'fas fa-wifi', value: gig.internet },\n    { name: 'Parking', icon: 'fas fa-parking', value: gig.parking },\n    { name: 'Showers', icon: 'fas fa-shower', value: gig.showers },\n    { name: 'Full Rider', icon: 'fas fa-cocktail', value: gig.rider },\n  ];\n\n  // Determine whether to render amenities or not\n  const hasNoAmenities = amenities.every((amenity) => !amenity.value);\n\n  // Create query string for making request to Google Maps API\n  const mapQuery = `${gig.venue.street} ${gig.venue.city}, ${gig.venue.state} ${gig.venue.zip}`;\n\n  return (\n    <div className=\"info-container\">\n      {/* Date */}\n      <div className=\"info-item\">\n        <p className=\"h5 mb-1 small-heading\">\n          <i className=\"far fa-calendar mr-2\"></i>\n          Today\n        </p>\n        <p className=\"info-text-main\">{props.handleDate(gig.date)}</p>\n      </div>\n\n      {/* Location */}\n      <div className=\"info-item\">\n        <p className=\"h5 mb-1 small-heading\">\n          <i className=\"fas fa-map-marker-alt mr-2\"></i>\n          Location\n        </p>\n        <p className=\"info-text-main\">{`${gig.venue.city}, ${gig.venue.state}.`}</p>\n      </div>\n\n      {/* Tonight's show and location */}\n      <div className=\"info-item\">\n        <p className=\"h5 mb-1 small-heading\">\n          <i className=\"fas fa-headphones-alt mr-2\"></i>\n          Venue\n        </p>\n        <p className=\"info-text-main mb-1\">{gig.venue.name}</p>\n        <p className=\"info-text-sub mb-1\">{`Capacity: ${gig.venue.capacity}`}</p>\n        <p className=\"info-text-sub mb-1\">{gig.venue.street}</p>\n        <p className=\"info-text-sub mb-1\">{`${gig.venue.city}, ${gig.venue.state}. ${gig.venue.zip}`}</p>\n        <iframe\n          className=\"map rounded mt-3\"\n          loading=\"lazy\"\n          src={`https://www.google.com/maps/embed/v1/place?key=${process.env.REACT_APP_GOOGLE_API_KEY}\n        &q=${mapQuery}`}\n        ></iframe>\n      </div>\n\n      {/* Promoter + Contact Email */}\n      <div className=\"info-item\">\n        <p className=\"h5 mb-1 small-heading\">\n          <i className=\"far fa-id-card mr-2\"></i>\n          Promoter\n        </p>\n        <p className=\"info-text-main mb-1\">{gig.venue.promoter}</p>\n        <a\n          className=\"info-text-sub info-link mb-1\"\n          href={`mailto:${gig.venue.email}`}\n        >\n          {gig.venue.email}\n        </a>\n      </div>\n\n      {/* Amenity badges */}\n      <div className=\"info-item\">\n        <p className=\"h5 mb-3 small-heading\">\n          <i className=\"fas fa-concierge-bell mr-2\"></i>\n          Amenities\n        </p>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <ListGroup key=\"amenities\" variant=\"flush\">\n              {/* If venue provides no amenities, notify user */}\n              {/* Otherwise, map over amenities and render only those that evaluate to true */}\n              {hasNoAmenities ? (\n                <p className=\"info-text-main mb-1\">No Amenities Guaranteed</p>\n              ) : (\n                <div>\n                  {amenities.map((amenity, index) => {\n                    if (amenity.value) {\n                      return (\n                        <ListGroup.Item\n                          key={`${index}-${amenity.name}`}\n                          className=\"daysheet-item\"\n                        >\n                          <div className=\"row\">\n                            <div className=\"col-3 col-md-2\">\n                              <p className=\"list-item text-center mb-1\">\n                                <i\n                                  className={`amenity-icon mr-2 ${amenity.icon}`}\n                                ></i>\n                              </p>\n                            </div>\n                            <div className=\"col-9 col-md-10 daysheet-item\">\n                              <p className=\"list-item mb-1\">{amenity.name}</p>\n                            </div>\n                          </div>\n                        </ListGroup.Item>\n                      );\n                    }\n                  })}\n                </div>\n              )}\n            </ListGroup>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport dayjs from 'dayjs';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport './index.scss';\n\n// Create and export ClosingNumbers component\nexport default function ClosingNumbers(props) {\n  // Destructure props\n  const { presale, doors, comps, guarantee, bonus } = props.gig.closingNumbers;\n  const { gross, split, scans, comped } = props.gig.closingNumbers.merch;\n  const { capacity } = props.gig.venue;\n\n  // Calculate attendance insights\n  const totalAttendance = presale + doors + comps;\n  const totalTickets = presale + doors;\n  const percentCap = getPercentage(totalTickets, capacity);\n\n  // Add semantic color class based to percent cap figure\n  function paintPercentCap() {\n    if (percentCap >= 80) {\n      return 'bg-success text-dark rounded';\n    } else if (percentCap < 80 && percentCap >= 50) {\n      return 'bg-warning text-dark rounded';\n    } else if (percentCap < 50) {\n      return 'bg-danger rounded';\n    }\n  }\n\n  // Calculate merch insights\n  const venueCut = getVenueCut();\n  const netMerch = gross - venueCut;\n  const merchPerHead = netMerch / totalAttendance;\n\n  // Calculate venue cut of merch revenue\n  function getVenueCut() {\n    let venueSplit = (100 - split) / 100;\n    let venueCut = (gross * venueSplit).toFixed(2);\n    return venueCut;\n  }\n\n  // Add semantic color class to per head figure\n  function paintMerchPerHead() {\n    if (merchPerHead >= 1) {\n      return 'bg-success text-dark rounded';\n    } else if (merchPerHead < 1 && merchPerHead > 0.75) {\n      return 'bg-warning text-dark rounded';\n    } else if (merchPerHead < 0.75) {\n      return 'bg-danger rounded';\n    }\n  }\n\n  // Calculate net revnue\n  const netRevenue = guarantee + netMerch + bonus;\n\n  // Helper -> Set decimal places\n  function getDecimals(num) {\n    return num.toFixed(2);\n  }\n\n  // Helper -> Get percentage\n  function getPercentage(num1, num2) {\n    let rawPercent;\n\n    if (num1 && num2) {\n      rawPercent = (num1 / num2) * 100;\n    } else {\n      rawPercent = num1 * 100;\n    }\n\n    return rawPercent.toFixed(0);\n  }\n\n  return (\n    <div>\n      {/* Attendance Breakdown */}\n      <div className=\"info-item row pb-5\">\n        <div className=\"col-12\">\n          <p className=\"h5 mb-1 small-heading\">\n            <i className=\"fas fa-users mr-2\"></i>\n            Attendance\n          </p>\n        </div>\n\n        {/* Labels */}\n        <div className=\"col-7\">\n          <p className=\"info-text-main mb-0\">Capacity</p>\n          <p className=\"info-text-main mb-0\">Presale</p>\n          <p className=\"info-text-main mb-0\">Doors</p>\n          <p className=\"info-text-main mb-0\">Comps</p>\n        </div>\n\n        {/* Values */}\n        <div className=\"col-5\">\n          <p className=\"info-text-main px-2 mb-0\">{props.gig.venue.capacity}</p>\n          <p className=\"info-text-main px-2 mb-0\">{presale}</p>\n          <p className=\"info-text-main px-2 mb-0\">{doors}</p>\n          <p className=\"info-text-main px-2 mb-0\">{comps}</p>\n          <hr />\n        </div>\n\n        {/* Insights */}\n        <div className=\"col-7\">\n          <p className=\"info-text-main mb-0\">Total Heads</p>\n          <p className=\"info-text-main mb-0\">Total Tickets</p>\n          <p className=\"info-text-main mb-0\">% Cap</p>\n        </div>\n        <div className=\"col-5\">\n          <p className=\"info-text-main px-2 mb-0\">{totalAttendance}</p>\n          <p className=\"info-text-main px-2 mb-0\">{totalTickets}</p>\n          <p\n            className={`info-text-main px-2 mb-0 ${paintPercentCap()}`}\n          >{`${percentCap}%`}</p>\n        </div>\n      </div>\n\n      {/* Merch Revenue */}\n      <div className=\"info-item row pb-5\">\n        <div className=\"col-12\">\n          <p className=\"h5 mb-1 small-heading\">\n            <i className=\"fas fa-record-vinyl mr-2\"></i>\n            Merchandise\n          </p>\n        </div>\n\n        {/* Labels */}\n        <div className=\"col-7\">\n          <p className=\"info-text-main mb-0\">Artist Split</p>\n          <p className=\"info-text-main mb-0\">Gross Sales</p>\n          <p className=\"info-text-main mb-0\">Venue Cut</p>\n        </div>\n\n        {/* Values */}\n        <div className=\"col-5\">\n          <p className=\"info-text-main px-2 mb-0\">{`${split}%`}</p>\n          <p className=\"info-text-main px-2 mb-0\">{`$${getDecimals(gross)}`}</p>\n          <p className=\"info-text-main px-2 mb-0\">{`$${venueCut}`}</p>\n          <hr />\n        </div>\n\n        {/* Insights */}\n        <div className=\"col-7\">\n          <p className=\"info-text-main mb-0\">Net Revenue</p>\n          <p className=\"info-text-main mb-0\">Per Head</p>\n        </div>\n        <div className=\"col-5\">\n          <p className=\"info-text-main px-2 mb-0\">{`$${getDecimals(\n            netMerch\n          )}`}</p>\n          <p\n            className={`info-text-main px-2 mb-0 ${paintMerchPerHead()}`}\n          >{`$${getDecimals(merchPerHead)}`}</p>\n        </div>\n      </div>\n\n      {/* Net Revenue */}\n      <div className=\"info-item row pb-5\">\n        <div className=\"col-12\">\n          <p className=\"h5 mb-1 small-heading\">\n            <i className=\"fas fa-comment-dollar mr-2\"></i>\n            Net Revenue\n          </p>\n        </div>\n\n        {/* Labels */}\n        <div className=\"col-7\">\n          <p className=\"info-text-main mb-0\">Guarantee</p>\n          <p className=\"info-text-main mb-0\">Net Merch</p>\n          <p className=\"info-text-main mb-0\">Bonus</p>\n        </div>\n\n        {/* Values */}\n        <div className=\"col-5\">\n          <p className=\"info-text-main px-2 mb-0\">{`$${getDecimals(\n            guarantee\n          )}`}</p>\n          <p className=\"info-text-main px-2 mb-0\">{`$${getDecimals(\n            netMerch\n          )}`}</p>\n          <p className=\"info-text-main px-2 mb-0\">{`$${getDecimals(bonus)}`}</p>\n          <hr />\n        </div>\n\n        {/* Insights */}\n        <div className=\"col-7\">\n          <p className=\"info-text-main mb-0\">Net Revenue</p>\n        </div>\n        <div className=\"col-5\">\n          <p className=\"info-text-main px-2 mb-0 bg-success text-dark\">{`$${getDecimals(\n            netRevenue\n          )}`}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\n\n// Create and export StageSchedule component\nexport default function StageSchedule(props) {\n  console.log(props.gig);\n\n  return (\n    <div className=\"info-container\">\n\n      {/* If the gig contains a schedule, map over it and render each block */}\n      {props.gig.schedule.length ? (\n        <ListGroup key=\"schedule\" variant=\"flush\">\n          {props.gig.schedule.map((block, index) => {\n            return (\n              <ListGroup.Item\n                key={`${index}-${block._id}`}\n                className=\"daysheet-item\"\n              >\n                <div className=\"row\">\n                  <div className=\"col-12 col-lg-12\">\n                    <p className=\"list-label pt-2 mb-1\">{block.timeString}</p>\n                  </div>\n                  <div className=\"col-12 col-lg-12\">\n                    <p className=\"list-item mb-1\">{block.event}</p>\n                  </div>\n                </div>\n              </ListGroup.Item>\n            );\n          })}\n        </ListGroup>\n      ) : (\n        <p className=\"h2\">NOTHING SCHEDULED</p>\n      )}\n    </div>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport CardBody from '../CardBody';\nimport Daysheet from '../Daysheet';\nimport ClosingNumbers from '../ClosingNumbers';\nimport StageSchedule from '../StageSchedule';\n\n// Create and export Gig component\nexport default function Gig(props) {\n  console.log(props.gig);\n\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <CardBody spacing={`px-5 py-3 mx-2 my-3 m-md-0`}>\n        <div className=\"row\">\n          {/* Left Column - Daysheet */}\n          <div className=\"col-12 col-lg-6 p-2 p-md-4 mb-4\">\n            <h2 className=\"heading\">Day Sheet</h2>\n            <hr />\n            <Daysheet {...props} />\n          </div>\n\n          {/* Right Column - Impact Report OR Stage Schedule */}\n          {props.gig.closed ? (\n            <div className=\"col-12 col-lg-6 p-2 p-md-4 mb-4\">\n              <h2 className=\"heading\">Closing Numbers</h2>\n              <hr />\n              <ClosingNumbers {...props} />\n            </div>\n          ) : (\n            <div className=\"col-12 col-lg-6 p-2 p-md-4 mb-4\">\n              <h2 className=\"heading\">Schedule</h2>\n              <hr />\n              <StageSchedule {...props} />\n            </div>\n          )}\n        </div>\n      </CardBody>\n    </motion.div>\n  );\n}\n","// Import dependencies\nimport React, { useState, useEffect } from 'react';\nimport { emptyFormObj } from '../../utils/emptyFormObj';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport { toast } from 'react-toastify';\nimport API from '../../utils/API';\nimport Button from 'react-bootstrap/Button';\nimport CardBody from '../CardBody';\nimport ConfirmModal from '../ConfirmModal';\nimport Form from 'react-bootstrap/Form';\nimport formatObj from '../../utils/formatObj';\nimport './index.scss';\n\n// Create and export Dashboard component\nexport default function GigForm(props) {\n  const [formObj, setFormObj] = useState(emptyFormObj);\n  const [show, setShow] = useState(false);\n\n  // If in edit mode, configure the form for updating values\n  // on an existing gig rather than creating a new one\n  useEffect(() => {\n    if (props.selected) {\n      const gigObj = formatObj(props.selected);\n      setFormObj(gigObj);\n    }\n  }, []);\n\n  // Amenities array used to create check boxes inputs\n  const amenities = [\n    'catering',\n    'internet',\n    'showers',\n    'lounge',\n    'parking',\n    'rider',\n  ];\n\n  // Clean stage blocks to use when user adds or updates\n  // an artist name or event time string\n  const stageBlocks = [\n    { timeString: '', event: 'Load In' },\n    { timeString: '', event: 'Soundcheck' },\n    { timeString: '', event: 'Doors' },\n    { timeString: '', event: 'Opener' },\n    { timeString: '', event: 'Second' },\n    { timeString: '', event: 'Direct' },\n    { timeString: '', event: 'Headliner' },\n    { timeString: '', event: 'Bus Call' },\n  ];\n\n  // Add new gig to database\n  const addGig = async () => {\n    try {\n      const res = await API.addGig(formObj);\n      toast.success('And the crowd goes wild! 🤘🏼');\n      console.log(res);\n    } catch (err) {\n      toast.error('Uh oh! Something went wrong. Try again! 🧐');\n      console.log(err);\n    }\n  };\n\n  // Update existing gig in database\n  const updateGig = async () => {\n    console.log('Updating gig...');\n    const id = props.selected._id;\n    try {\n      const res = await API.updateGig(id, formObj);\n      toast.success(`Gig updated! Don't forget extra strings... 🎸`);\n      console.log(res);\n    } catch (err) {\n      toast.error('Uh oh! Something went wrong. Try again! 🧐');\n      console.log(err);\n    }\n  };\n\n  // Delete gig from database and fetch updated gigs data from API\n  const deleteGig = async () => {\n    console.log('Deleting gig...');\n    const id = props.selected._id;\n    try {\n      const res = await API.deleteGig(id);\n      handleClose();\n      toast.success(`Too bad! You'll be back before you know it! 🚀`);\n\n      // Fetch updated list of gigs, reset gigs index at 0 to prevent\n      // app from trying to load the deleted gig, and switch back to\n      // tour view\n      setTimeout(() => {\n        props.fetchGigs();\n        props.setIndex(0);\n        props.handleView('tour');\n      }, 250);\n    } catch (err) {\n      toast.error('Uh oh! Something went wrong. Try again! 🧐');\n      console.log(err);\n    }\n  };\n\n  // Handle input changes\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    const venue = formObj.venue;\n\n    // If input is date, set field directly\n    if (name === 'date') {\n      setFormObj({\n        ...formObj,\n        [name]: value,\n      });\n\n      return;\n    }\n\n    // Otherwise, set field inside venue object\n    setFormObj({\n      ...formObj,\n      venue: {\n        ...venue,\n        [name]: value,\n      },\n    });\n  };\n\n  // Handle updating state from checkboxes\n  const handleCheck = (event) => {\n    const { name, checked } = event.target;\n    setFormObj({\n      ...formObj,\n      [name]: checked,\n    });\n  };\n\n  // Handle updating state's nested schedule array\n  const handleSchedule = (event) => {\n    const { name, value } = event.target;\n    const { index } = event.target.dataset;\n\n    // Extract matching object from schedule in state\n    const schedule = [...formObj.schedule];\n    const currentBlock = schedule[index];\n\n    // Update the block's time string and put it back in the schedule\n    currentBlock.timeString = value;\n    schedule.splice(index, 1, currentBlock);\n\n    // Reset state\n    setFormObj({\n      ...formObj,\n      schedule: schedule,\n    });\n  };\n\n  // Handle updating artists assigned to stage schedule blocks 3-6\n  const handleArtist = (event) => {\n    const { name, value } = event.target;\n    const { index } = event.target.dataset;\n\n    // Extract matching object from schedule in state\n    const schedule = [...formObj.schedule];\n    const currentBlock = schedule[index];\n\n    // Update the block's event title and put it back in the schedule\n    currentBlock.event = value;\n    schedule.splice(index, 1, currentBlock);\n\n    // Reset state\n    setFormObj({\n      ...formObj,\n      schedule: schedule,\n    });\n  };\n\n  // Handle resetting all input fields and form object state in UI\n  const handleReset = () => {\n    Array.from(document.querySelectorAll('input')).forEach(\n      (input) => (input.value = '')\n    );\n\n    setFormObj(emptyFormObj);\n  };\n\n  // Create a formatted input label from its name\n  const createLabel = (name) => {\n    return name.slice(0, 1).toUpperCase() + name.slice(1);\n  };\n\n  // Post form data to API\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Check that user provided a venue name\n    if (!formObj.venue.name) {\n      toast.error(`Uh oh! Wrong chord! Check the venue name and try again. 🧐`);\n      return;\n    }\n\n    // Check that user provided a city\n    if (!formObj.venue.city) {\n      toast.error(`Uh oh! Wrong chord! Check the city and try again. 🧐`);\n      return;\n    }\n\n    // Check that user provided a state\n    if (!formObj.venue.state) {\n      toast.error(`Uh oh! Wrong chord! Check the state and try again. 🧐`);\n      return;\n    }\n\n    // Check that user provided a date\n    if (!formObj.date) {\n      toast.error(`Uh oh! Wrong chord! Check the date and try again. 🧐`);\n      return;\n    }\n\n    // Determine whether to send PUT or POST request to API\n    props.view === 'edit' ? updateGig() : addGig();\n\n    // Reset fields\n    handleReset();\n\n    // Delay fetching gigs from API for long enough to ensure\n    // that the newly added gig has been created and can be\n    // returned to the client and reset the view\n    setTimeout(() => {\n      props.fetchGigs();\n      props.view === 'edit'\n        ? props.handleView('gig')\n        : props.handleView('tour');\n    }, 250);\n  };\n\n  // Handle toggling confirmation modal's visibility\n  const handleShow = () => setShow(true);\n  const handleClose = () => setShow(false);\n\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <section>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <CardBody spacing={'p-4 p-md-4 m-2 m-md-0'}>\n              <p className=\"h2 heading\">\n                {props.view === 'add' ? 'Add Gig' : 'Edit Gig'}\n              </p>\n\n              <Form>\n                <div className=\"row\">\n                  {/* Venue Name */}\n                  <div className=\"col-12 col-md-6\">\n                    <Form.Group controlId=\"venueInputGroup\">\n                      <Form.Label>Venue Name *</Form.Label>\n                      <Form.Control\n                        name=\"name\"\n                        type=\"text\"\n                        placeholder=\"Enter Venue Name\"\n                        value={formObj.venue.name}\n                        onChange={handleInputChange}\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* Address */}\n                  <div className=\"col-12 col-md-6\">\n                    <Form.Group controlId=\"streetInputGroup\">\n                      <Form.Label>Street Address</Form.Label>\n                      <Form.Control\n                        name=\"street\"\n                        type=\"text\"\n                        placeholder=\"Enter Street Address\"\n                        value={formObj.venue.street}\n                        onChange={handleInputChange}\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* City */}\n                  <div className=\"col-12 col-md-6\">\n                    <Form.Group controlId=\"cityInputGroup\">\n                      <Form.Label>City *</Form.Label>\n                      <Form.Control\n                        name=\"city\"\n                        type=\"text\"\n                        placeholder=\"Enter City\"\n                        value={formObj.venue.city}\n                        onChange={handleInputChange}\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* State */}\n                  <div className=\"col-6 col-md-3\">\n                    <Form.Group controlId=\"stateInputGroup\">\n                      <Form.Label>State *</Form.Label>\n                      <Form.Control\n                        name=\"state\"\n                        type=\"text\"\n                        placeholder=\"Enter State\"\n                        value={formObj.venue.state}\n                        onChange={handleInputChange}\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* Zip */}\n                  <div className=\"col-6 col-md-3\">\n                    <Form.Group controlId=\"zipInputGroup\">\n                      <Form.Label>Zip</Form.Label>\n                      <Form.Control\n                        name=\"zip\"\n                        type=\"text\"\n                        placeholder=\"Enter Zip\"\n                        value={formObj.venue.zip}\n                        onChange={handleInputChange}\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* Promoter */}\n                  <div className=\"col-12 col-md-6 col-lg-3\">\n                    <Form.Group controlId=\"promoterInputGroup\">\n                      <Form.Label>Promoter</Form.Label>\n                      <Form.Control\n                        name=\"promoter\"\n                        type=\"text\"\n                        placeholder=\"Enter Promoter\"\n                        value={formObj.venue.promoter}\n                        onChange={handleInputChange}\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* Email */}\n                  <div className=\"col-12 col-md-6 col-lg-3\">\n                    <Form.Group controlId=\"emailInputGroup\">\n                      <Form.Label>Contact Email</Form.Label>\n                      <Form.Control\n                        name=\"email\"\n                        type=\"email\"\n                        placeholder=\"Enter Email\"\n                        value={formObj.venue.email}\n                        onChange={handleInputChange}\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* Capacity */}\n                  <div className=\"col-12 col-md-6 col-lg-3\">\n                    <Form.Group controlId=\"capacityInputGroup\">\n                      <Form.Label>Capacity</Form.Label>\n                      <Form.Control\n                        name=\"capacity\"\n                        type=\"text\"\n                        placeholder=\"Enter Capacity\"\n                        value={formObj.venue.capacity}\n                        onChange={handleInputChange}\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* Date */}\n                  <div className=\"col-12 col-md-6 col-lg-3\">\n                    <Form.Group controlId=\"dateInputGroup\">\n                      <Form.Label>Date *</Form.Label>\n                      <Form.Control\n                        name=\"date\"\n                        type=\"date\"\n                        placeholder=\"Enter Date\"\n                        value={formObj.date}\n                        onChange={handleInputChange}\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* Amenity check boxes */}\n                  <div className=\"col-12\">\n                    <p className=\"small-heading\">\n                      Amenities (Select all that apply):\n                    </p>\n                  </div>\n\n                  {/* Creates checkboxes for each element in the amenities array */}\n                  {amenities.map((amenity, index) => {\n                    return (\n                      <div key={`checkbox-${index}`} className=\"col-6 col-md-4\">\n                        <Form.Check\n                          type=\"checkbox\"\n                          name={amenity}\n                          label={`${createLabel(amenity)}`}\n                          checked={formObj[amenity]}\n                          onChange={handleCheck}\n                        />\n                      </div>\n                    );\n                  })}\n\n                  {/* Artist inputs tied to stage schedule bocks 3, 4, 5, and 6 */}\n                  <div className=\"col-12 pt-3\">\n                    <p className=\"small-heading mb-0\">Artists</p>\n                    <p>\n                      Add artists or use default slot titles. You can always\n                      come back and update these later.\n                    </p>\n                  </div>\n\n                  {/* Headliner */}\n                  <div className=\"col-12 col-md-6 col-lg-3\">\n                    <Form.Group>\n                      <Form.Label>Headliner</Form.Label>\n                      <Form.Control\n                        name=\"headliner\"\n                        data-index={6}\n                        type=\"text\"\n                        placeholder=\"Enter Headliner\"\n                        value={formObj.schedule[6].event}\n                        onChange={handleArtist}\n                        onSubmit={() =>\n                          setFormObj({\n                            ...formObj,\n                            schedule: stageBlocks,\n                          })\n                        }\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* Direct */}\n                  <div className=\"col-12 col-md-6 col-lg-3\">\n                    <Form.Group>\n                      <Form.Label>Direct</Form.Label>\n                      <Form.Control\n                        name=\"direct\"\n                        data-index={5}\n                        type=\"text\"\n                        placeholder=\"Enter Direct\"\n                        value={formObj.schedule[5].event}\n                        onChange={handleArtist}\n                        onSubmit={() =>\n                          setFormObj({\n                            ...formObj,\n                            schedule: stageBlocks,\n                          })\n                        }\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* Second */}\n                  <div className=\"col-12 col-md-6 col-lg-3\">\n                    <Form.Group>\n                      <Form.Label>Second</Form.Label>\n                      <Form.Control\n                        name=\"second\"\n                        data-index={4}\n                        type=\"text\"\n                        placeholder=\"Enter Second\"\n                        value={formObj.schedule[4].event}\n                        onChange={handleArtist}\n                        onSubmit={() =>\n                          setFormObj({\n                            ...formObj,\n                            schedule: stageBlocks,\n                          })\n                        }\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* Opener */}\n                  <div className=\"col-12 col-md-6 col-lg-3\">\n                    <Form.Group>\n                      <Form.Label>Opener</Form.Label>\n                      <Form.Control\n                        name=\"opener\"\n                        data-index={3}\n                        type=\"text\"\n                        placeholder=\"Enter Opener\"\n                        value={formObj.schedule[3].event}\n                        onChange={handleArtist}\n                        onSubmit={() =>\n                          setFormObj({\n                            ...formObj,\n                            schedule: stageBlocks,\n                          })\n                        }\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* Stage schedule inputs */}\n                  <div className=\"col-12 pt-3\">\n                    <p className=\"small-heading mb-0\">Update Stage Schedule</p>\n                    <p>\n                      Add custom times or use default stage schedule. This can\n                      always be updated later.\n                    </p>\n                  </div>\n\n                  {/* Create inputs for adding times to stage schedule blocks */}\n                  {formObj.schedule.map((block, index) => {\n                    return (\n                      <div\n                        key={`block-${stageBlocks[index].event}`}\n                        className=\"col-6 col-md-3\"\n                      >\n                        <Form.Group>\n                          <Form.Label>{stageBlocks[index].event}</Form.Label>\n                          <Form.Control\n                            data-index={index}\n                            name={block.event}\n                            type=\"text\"\n                            placeholder={`Enter ${stageBlocks[index].event} start time`}\n                            value={block.timeString}\n                            onChange={handleSchedule}\n                            onSubmit={() =>\n                              setFormObj({\n                                ...formObj,\n                                schedule: stageBlocks,\n                              })\n                            }\n                          />\n                        </Form.Group>\n                      </div>\n                    );\n                  })}\n                </div>\n\n                {/* Submit Buttons */}\n                <div className=\"row pt-3\">\n                  <div className=\"col-12\">\n                    {/* Add gig */}\n                    {props.view === 'add' && (\n                      <Button\n                        type=\"submit\"\n                        variant=\"primary\"\n                        className=\"py-2 px-3 mr-2\"\n                        onClick={handleSubmit}\n                      >\n                        <i className=\"fas fa-plus mr-2\"></i>\n                        Add Gig\n                      </Button>\n                    )}\n\n                    {/* Update gig */}\n                    {props.view === 'edit' && (\n                      <div>\n                        <Button\n                          type=\"submit\"\n                          variant=\"primary\"\n                          className=\"py-2 px-3 mr-2\"\n                          onClick={handleSubmit}\n                        >\n                          <i className=\"fas fa-edit mr-2\"></i>\n                          Update Gig\n                        </Button>\n                        <Button\n                          variant=\"danger\"\n                          className=\"py-2 px-3 mr-2\"\n                          onClick={handleShow}\n                        >\n                          <i className=\"fas fa-trash-alt mr-2\"></i>\n                          Delete Gig\n                        </Button>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </Form>\n            </CardBody>\n          </div>\n\n          {/* Confirmation modal */}\n          <ConfirmModal\n            show={show}\n            message=\"Looks like you're deleting a gig. Are you sure you want to continue?\"\n            confirm={{ color: 'danger', message: 'Delete Gig' }}\n            cancel={{ color: 'dark', message: 'Keep Gig' }}\n            handleConfirm={deleteGig}\n            handleCancel={handleClose}\n          />\n        </div>\n      </section>\n    </motion.div>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport { toast } from 'react-toastify';\nimport Button from 'react-bootstrap/Button';\nimport CardBody from '../CardBody';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\n\n// Create and export Tour component\nexport default function Tour(props) {\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <div className=\"info-container\">\n        <div className=\"row\">\n          <div className=\"col-12 mb-4\">\n            <CardBody spacing={'p-4 p-md-4 m-2 m-md-0'}>\n              <div className=\"container-lg p-0\">\n                <h3 className=\"heading\">Full Tour Dates</h3>\n                <p>Click a date to view show details</p>\n\n                {/* If API has returned a full gigs array to the Dashboard component */}\n                {props.gigs.length ? (\n                  <ListGroup key=\"tour\">\n                    {/* Map over gigs array and create a new block for each gig */}\n                    {props.gigs.map((gig, index) => {\n                      const timeArr = gig.schedule[3].timeString.split(' ');\n                      const showtime = timeArr[0];\n\n                      return (\n                        <ListGroup.Item\n                          key={`${index}-${gig._id}`}\n                          className=\"tour-date row\"\n                        >\n                          <div className=\"row\">\n\n                            {/* Date */}\n                            <div className=\"col-12 col-md-8 mx-auto\">\n                              <p className=\"small-heading pt-2 mb-1\">\n                                <i className=\"fas fa-calendar mr-2\"></i>\n                                {props.handleDate(gig.date)}\n\n                                {/* If gig has closing numbers, display green check */}\n                                {gig.closed && (\n                                  <i className=\"fas fa-check text-success ml-2\"></i>\n                                )}\n                              </p>\n\n                              {/* Location */}\n                              <p className=\"list-item mb-1 d-lg-inline-block\">\n                                {`${gig.venue.city}, ${gig.venue.state}. `}\n                                <span className=\"d-block d-lg-inline-block\">{`@ ${gig.venue.name}`}</span>\n                              </p>\n                            </div>\n\n                            {/* Time */}\n                            <div className=\"col-12 col-md-8 mx-auto\">\n                              <p className=\"list-label mb-1\">\n                                {`Doors @ ${gig.schedule[2].timeString}`}\n                                <span className=\"d-none d-md-inline-block mx-2\">{`/`}</span>\n                                <span className=\"d-block d-md-inline-block\">{`Show @ ${showtime} PM`}</span>\n                              </p>\n                            </div>\n\n                            {/* Artists */}\n                            <div className=\"col-12 col-md-8 mx-auto\">\n                              <p className=\"list-label mb-1\">\n                                {`${gig.schedule[6].event} + ${gig.schedule[5].event} + ${gig.schedule[4].event} + ${gig.schedule[3].event}`}\n                              </p>\n                            </div>\n\n                            {/* View details button */}\n                            <div className=\"col-12 col-md-8 mx-auto\">\n                              <Button\n                                id={gig._id}\n                                variant=\"primary\"\n                                className=\"my-2 mr-2\"\n                                onClick={(event) => {\n                                  if (props.gigs.length) {\n                                    props.handleSelect(event);\n                                  } else {\n                                    toast.error(\n                                      'Oh no! Something went wrong. Try again!'\n                                    );\n                                  }\n                                }}\n                              >\n                                <i className=\"fas fa-info-circle mr-2\"></i>\n                                View Details\n                              </Button>\n                            </div>\n                          </div>\n                        </ListGroup.Item>\n                      );\n                    })}\n                  </ListGroup>\n                ) : (\n                  <p className=\"h2\">NO TOUR DATES TO DISPLAY</p>\n                )}\n              </div>\n            </CardBody>\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n","// Import dependencies\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport { toast } from 'react-toastify';\nimport API from '../../utils/API';\nimport Button from 'react-bootstrap/Button';\nimport ClosingForm from '../ClosingForm';\nimport DashboardNav from '../DashboardNav';\nimport dayjs from 'dayjs';\nimport Gig from '../Gig';\nimport GigForm from '../GigForm';\nimport Tour from '../Tour';\nimport './index.scss';\n\n// Create and export Dashboard component\nexport default function Dashboard() {\n  // Init state\n  const [gigs, setGigs] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [view, setView] = useState('tour');\n\n  // Fetch gigs from API when component mounts and whenever the view state changes\n  useEffect(() => {\n    fetchGigs();\n  }, []);\n\n  // Fetch gigs from DB\n  const fetchGigs = async () => {\n    console.log('Fetching gigs...');\n    try {\n      const res = await API.getGigs();\n      setGigs(res.data);\n    } catch (err) {\n      toast.error('Uh oh! Something went wrong. Try again! 🧐');\n      console.log(err);\n    }\n  };\n\n  // Handle formatting date for display\n  const handleDate = (date) => {\n    return dayjs(date).add(12, 'hour').format('ddd. MMMM D, YYYY');\n  };\n\n  // Handle finding and rendering matching show details from click event in tour view\n  const handleSelect = (event) => {\n    event.preventDefault();\n\n    // Figure out which gig the user wants to see\n    const { id } = event.target;\n    const index = gigs.findIndex((gig) => gig._id === id);\n\n    // If the specified gig can't be found, notify the user\n    // and log the error\n    if (index === -1) {\n      toast.error(`Uh oh! We can't find that gig. Try again! 🧐`);\n      console.log(event.target);\n      return;\n    } else {\n      console.log('Accessing gig...');\n\n      // Update index state to render selected show\n      setIndex(index);\n\n      // Update view state to switch back to gig view\n      setView('gig');\n      window.scrollTo(0, 0);\n    }\n  };\n\n  // Click handler for cycling to next gig\n  const handleNext = () => {\n    if (index === gigs.length - 1) {\n      setIndex(0);\n    } else {\n      console.log(gigs);\n      setIndex(index + 1);\n    }\n  };\n\n  // Click handler for cycling to previous gig\n  const handlePrev = () => {\n    if (index === 0) {\n      setIndex(gigs.length - 1);\n    } else {\n      setIndex(index - 1);\n    }\n  };\n\n  // Click handler for change dashboard's view state\n  const handleView = (view) => {\n    setView(view);\n  };\n\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <section className=\"p-2 px-md-4 px-lg-5\">\n        {gigs.length ? (\n          <div>\n            {/* Dashboard navigation controls */}\n            <DashboardNav\n              gig={gigs[index]}\n              prev={handlePrev}\n              next={handleNext}\n              view={view}\n              handleView={handleView}\n            />\n\n            {/* View gig details, day sheet, and stage schedule */}\n            {view === 'gig' && (\n              <Gig\n                gig={gigs[index]}\n                nextGig={gigs[index + 1] ? gigs[index + 1] : false}\n                handleDate={handleDate}\n                prev={handlePrev}\n                next={handleNext}\n              />\n            )}\n\n            {/* Tour view for displaying full tour routing */}\n            {view === 'tour' && (\n              <Tour\n                gigs={gigs}\n                handleDate={handleDate}\n                handleSelect={handleSelect}\n              />\n            )}\n\n            {/* Form view with state configured for adding new gigs */}\n            {view === 'add' && (\n              <GigForm\n                view={view}\n                handleView={handleView}\n                fetchGigs={fetchGigs}\n              />\n            )}\n\n            {/* Form view with state configured to edit/delete selected gig */}\n            {view === 'edit' && (\n              <GigForm\n                view={view}\n                handleView={handleView}\n                setIndex={setIndex}\n                selected={gigs[index]}\n                fetchGigs={fetchGigs}\n              />\n            )}\n\n            {/* Closing form view with state configured to add closing numbers to selected gig */}\n            {view === 'report' && (\n              <ClosingForm \n                view={view}\n                handleView={handleView}\n                setIndex={setIndex}\n                selected={gigs[index]}\n                fetchGigs={fetchGigs}\n              />\n            )}\n          </div>\n        ) : (\n          <p className=\"h2\">LOADING...</p>\n        )}\n      </section>\n    </motion.div>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport './index.scss';\n\n// Create and export Footer component\nexport default function Footer() {\n  return (\n    <footer>\n      <p>Powered by jxhnkndl</p>\n    </footer>\n  );\n}","// Import dependencies\nimport React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Button from 'react-bootstrap/Button';\nimport './index.scss';\n\n// Create and export LandingPage component\nexport default function LandingPage() {\n  // Extract login method to add to CTA button\n  const { loginWithRedirect } = useAuth0();\n\n  return (\n    <header className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12 col-md-10 mx-auto\">\n          <h1 className=\"headline\">Never miss a beat</h1>\n          <h3 className=\"sub-headline\">\n            <span className=\"d-block d-sm-inline-block mr-sm-2\">\n              You play the gigs.\n            </span>\n            <span className=\"d-block d-sm-inline-block\">\n              We'll handle the details.\n            </span>\n          </h3>\n          <hr />\n          <Button\n            variant=\"primary\"\n            className=\"mt-3 px-4 py-2 shadow\"\n            onClick={() => loginWithRedirect()}\n          >\n            Get Started\n            <i className=\"fas fa-play-circle ml-2\"></i>\n          </Button>\n        </div>\n      </div>\n    </header>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Button from 'react-bootstrap/Button';\n\n// Create and export LoginButton component\nexport default function LoginBtn() {\n  const { loginWithRedirect } = useAuth0();\n\n  return (\n    <Button\n      className=\"m-2 px-4 py-2\"\n      variant=\"primary\"\n      onClick={() => loginWithRedirect()}\n    >\n      <i className=\"fas fa-sign-in-alt mr-2\"></i>\n      Log In\n    </Button>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Button from 'react-bootstrap/Button';\n\n// Create and export LoginButton component\nexport default function LogoutBtn() {\n  const { logout, user } = useAuth0();\n\n  return (\n    <Button\n      className=\"m-2 px-4 py-2\"\n      variant=\"primary\"\n      onClick={() => logout({ returnTo: window.location.origin })}\n    >\n      Log Out\n      <i className=\"fas fa-sign-out-alt ml-2\"></i>\n    </Button>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport LoginBtn from '../LoginBtn';\nimport LogoutBtn from '../LogoutBtn';\nimport './index.scss';\n\n// Create and export MainNav component\nexport default function MainNav() {\n  const { isAuthenticated, user, logout } = useAuth0();\n\n  return (\n    <Navbar variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand href=\"/\">Bus Call</Navbar.Brand>\n\n      {/* Conditionally render navbar components based on user's login status */}\n      <Nav className=\"ml-auto\">\n        {isAuthenticated ? (\n          <div className=\"media\">\n            {user.picture && (\n              <img\n                src={user.picture}\n                className=\"avatar mr-3 rounded-circle d-none d-md-inline-block\"\n                alt=\"Profile image\"\n              />\n            )}\n            {user.given_name && (\n              <div className=\"media-body mr-3 d-none d-md-inline-block\">\n                <p className=\"h6 my-0\">{`Hi ${user.given_name}!`}</p>\n              </div>\n            )}\n            <LogoutBtn />\n          </div>\n        ) : (\n          <LoginBtn />\n        )}\n      </Nav>\n    </Navbar>\n  );\n}\n","// Import packages\nimport React from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Dashboard from '../Dashboard';\nimport LandingPage from '../LandingPage';\n\n// Create inline styles required to add hero image with gradient overlay\nconst bgImage = {\n  main: {\n    backgroundImage: `url(${process.env.PUBLIC_URL + '/imgs/stage.jpg'})`,\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    overflow: 'hidden',\n    position: 'relative'\n  },\n  overlay: {\n    background: 'linear-gradient(0deg, rgba(33,33,33,1) 20%, rgba(118,118,118,0.3883928571428571) 100%)',\n    position: 'absolute',\n    minHeight: '100%',\n    minWidth: '100vw',\n    display: 'flex',\n    alignItems: 'center'\n  }\n};\n\n// Create and export MainContent container component\nexport default function MainContent() {\n  const { isLoading, isAuthenticated } = useAuth0();\n\n  // If user isn't logging/logged in, render the landing page\n  if (!isAuthenticated && !isLoading) {\n    return (\n      <main style={bgImage.main}>\n        <div style={bgImage.overlay}>\n          <AnimatePresence exitBeforeEnter>\n            <LandingPage />\n          </AnimatePresence>\n        </div>\n      </main>\n    );\n  }\n\n  // If user is in the process of logging in, show loading message\n  if (isLoading) {\n    return (\n      <main style={{ overflow: 'hidden' }}>\n        <AnimatePresence exitBeforeEnter>\n          <h3 className=\"text-center\">Loading dashboard...</h3>\n        </AnimatePresence>\n      </main>\n    );\n  }\n\n  // If user is logged in, render the dashboard component\n  if (isAuthenticated) {\n    return (\n      <main style={{ overflow: 'hidden' }}>\n        <AnimatePresence exitBeforeEnter>\n          <Dashboard />\n        </AnimatePresence>\n      </main>\n    );\n  }\n}\n","// Import packages\nimport React from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { ToastContainer } from 'react-toastify';\nimport Dashboard from './components/Dashboard';\nimport Footer from './components/Footer';\nimport LandingPage from './components/LandingPage';\nimport MainNav from './components/MainNav';\nimport MainContent from './components/MainContent';\nimport './App.scss';\n\n// Overwrite some default styles in React Toastify library\nimport 'react-toastify/dist/ReactToastify.css';\n\n// Create and export App component\nexport default function App() {\n  return (\n    <div className=\"app-container\">\n      <MainNav />\n      <MainContent />\n      <Footer />\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressionBar={false}\n        newestOnTop\n        draggablePercent={60}\n        closeOnClick\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport App from './App';\nimport './index.scss';\n\n// Config Auth0\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n\n// Render the React app\nReactDOM.render(\n  <Auth0Provider\n    domain={domain}\n    clientId={clientId}\n    redirectUri={window.location.origin}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["utils/transitions.js","utils/API.js","components/CardBody/index.js","components/ConfirmModal/index.js","components/DashboardNav/index.js","components/Daysheet/index.js","components/StageSchedule/index.js","components/Gig/index.js","utils/emptyFormObj.js","components/GigForm/index.js","utils/formatObj.js","components/Tour/index.js","components/Dashboard/index.js","components/Footer/index.js","components/LandingPage/index.js","components/LoginBtn/index.js","components/LogoutBtn/index.js","components/MainNav/index.js","components/MainContent/index.js","App.js","index.js"],"names":["pageVariants","initial","opacity","scale","in","out","pageTransitions","type","ease","duration","axios","get","gigData","post","id","delete","put","CardBody","props","className","spacing","flex","children","ConfirmModal","Modal","show","onHide","handleCancel","Header","closeButton","Title","Body","message","Footer","Button","variant","confirm","color","onClick","handleConfirm","cancel","DashboardNav","useState","setShow","handleClose","Dropdown","Toggle","Menu","Item","onSelect","e","handleView","view","prev","next","Daysheet","amenities","name","icon","value","lounge","catering","internet","parking","showers","rider","hasNoAmenities","every","amenity","mapQuery","street","city","state","zip","date","venue","loading","src","process","REACT_APP_GOOGLE_API_KEY","presale","capacity","ListGroup","map","index","nextVenue","nextDate","nextCity","nextState","StageSchedule","schedule","length","block","timeString","event","_id","Gig","motion","div","animate","exit","variants","transition","distance","emptyFormObj","GigForm","formObj","setFormObj","useEffect","selected","gigObj","obj","dayjs","format","stageBlocks","addGig","a","API","res","toast","success","console","log","error","updateGig","deleteGig","setTimeout","fetchGigs","setIndex","handleInputChange","target","handleCheck","checked","handleSchedule","dataset","currentBlock","splice","handleArtist","handleSubmit","preventDefault","Array","from","document","querySelectorAll","forEach","input","Form","Group","controlId","Label","Control","placeholder","onChange","Check","label","slice","toUpperCase","data-index","onSubmit","Tour","gigs","gig","showtime","split","handleDate","handleSelect","Dashboard","setGigs","setView","data","add","handleNext","handlePrev","findIndex","window","scrollTo","LandingPage","loginWithRedirect","useAuth0","LoginBtn","LogoutBtn","logout","user","returnTo","location","origin","MainNav","isAuthenticated","Navbar","expand","Brand","href","Nav","picture","alt","given_name","bgImage","main","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","overflow","position","overlay","background","minHeight","minWidth","display","alignItems","MainContent","isLoading","style","AnimatePresence","exitBeforeEnter","App","autoClose","hideProgressionBar","newestOnTop","draggablePercent","closeOnClick","domain","REACT_APP_AUTH0_DOMAIN","clientId","REACT_APP_AUTH0_CLIENT_ID","ReactDOM","render","redirectUri","getElementById"],"mappings":"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","file":"static/js/main.48e4d69c.chunk.js","sourcesContent":["// Stages of page transition animation\nexport const pageVariants = {\n  initial: {\n    opacity: 0,\n    scale: 0.8\n  },\n  in: {\n    opacity: 1,\n    scale: 1\n  },\n  out: {\n    opacity: 0,\n    scale: 1.2\n  }\n}\n\n// General page transition animation properties\nexport const pageTransitions = {\n  type: 'tween',\n  ease: 'anticipate',\n  duration: .3\n}","// Import Axios\nimport axios from 'axios';\n\n// Create and export API request methods\nexport default {\n  getGigs: function() {\n    return axios.get(\"/api/gigs\");\n  },\n  addGig: function(gigData) {\n    return axios.post(\"/api/gigs\", gigData);\n  },\n  deleteGig: function(id) {\n    return axios.delete(\"/api/gigs/\" + id);\n  },\n  updateGig: function(id, gigData) {\n    return axios.put(\"/api/gigs/\" + id, gigData);\n  }\n}","// Import dependencies\nimport React from 'react';\nimport './index.scss';\n\n// Create and export CardBody component\nexport default function CardBody(props) {\n  return (\n    <div className={`dash-card ${props.spacing} ${props.flex}`}>\n      {props.children}\n    </div>\n  );\n}","// Import dependencies\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\n// Create and export ConfirmModal component\nexport default function ConfirmModal(props) {\n  return (\n    <Modal show={props.show} onHide={props.handleCancel}>\n      <Modal.Header closeButton>\n        <Modal.Title>Hey! Virtual tour manager here! 🤖</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {props.message}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant={props.confirm.color} onClick={props.handleConfirm}>\n          {props.confirm.message}\n        </Button>\n        <Button variant={props.cancel.color} onClick={props.handleCancel}>\n          {props.cancel.message}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","// Import dependencies\nimport React, { useState } from 'react';\nimport CardBody from '../CardBody';\nimport ConfirmModal from '../ConfirmModal';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport './index.scss';\n\n// Overwrite CardBody component styles for this component only\nconst styles = {\n  cardBody: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n};\n\n// Create and export DashboardNav component\nexport default function DashboardNav(props) {\n  // Modal visibility state\n  const [show, setShow] = useState(false);\n\n  // Handle toggling confirmation modal's visibility\n  const handleShow = () => setShow(true);\n  const handleClose = () => setShow(false);\n\n  return (\n    <div className=\"row mb-2 dashboard-nav\">\n      <div className=\"col-12\">\n        <CardBody\n          flex={'d-flex align-items-center justify-content-between'}\n          spacing={'px-4 py-3 m-2 m-md-0'}\n        >\n\n          {/* Dropdown view options */}\n          <Dropdown className=\"d-inline-block\">\n            <Dropdown.Toggle id=\"dropdown-basic\">Options</Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item onSelect={(e) => props.handleView('gig')}>\n                View Gigs\n              </Dropdown.Item>\n              <Dropdown.Item onSelect={(e) => props.handleView('tour')}>\n                View Tour\n              </Dropdown.Item>\n              {(props.view === 'tour' || props.view === 'gig') && (\n                <Dropdown.Item onSelect={(e) => props.handleView('add')}>\n                  Add Gig\n                </Dropdown.Item>\n              )}\n              {props.view === 'gig' && (\n                <Dropdown.Item onSelect={(e) => props.handleView('edit')}>\n                  Edit Gig\n                </Dropdown.Item>\n              )}\n            </Dropdown.Menu>\n          </Dropdown>\n\n          {/* Show cycle and edit buttons when in gig view */}\n          {props.view === 'gig' && (\n            <div>\n              <p className=\"nav-icon mb-0 mr-3\" onClick={props.prev}>\n                <i className=\"fas fa-arrow-circle-left\"></i>\n              </p>\n              <p className=\"nav-icon mb-0 mr-3\" onClick={props.next}>\n                <i className=\"fas fa-arrow-circle-right\"></i>\n              </p>\n              <p\n                className=\"nav-icon mb-0\"\n                onClick={(e) => props.handleView('edit')}\n              >\n                <i className=\"fas fa-edit\"></i>\n              </p>\n            </div>\n          )}\n\n          {/* Show add new gig button when in tour view */}\n          {props.view === 'tour' && (\n            <div>\n              <p\n                className=\"nav-icon mb-0\"\n                onClick={(e) => props.handleView('add')}\n              >\n                <i className=\"fas fa-plus\"></i>\n              </p>\n            </div>\n          )}\n\n          {/* Show close icon when in either add or edit view */}\n          {(props.view === 'add' || props.view === 'edit') && (\n            <div>\n              <p\n                className=\"nav-icon mb-0\"\n                onClick={handleShow}\n              >\n                <i className=\"far fa-window-close\"></i>\n              </p>\n            </div>\n          )}\n        </CardBody>\n      </div>\n\n      {/* Confirmation modal */}\n      <ConfirmModal\n        show={show}\n        message=\"Are you sure you want to discard your changes?\"\n        confirm={{ color: 'danger', message: 'Discard' }}\n        cancel={{ color: 'dark', message: 'Cancel' }}\n        handleConfirm={(e) => {\n          handleClose();\n          props.handleView('tour');\n        }}\n        handleCancel={handleClose}\n      />\n    </div>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport dayjs from 'dayjs';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport './index.scss';\n\n// Create and export Daysheet component\nexport default function Daysheet(props) {\n  // Create amenities array from props for rendering\n  const amenities = [\n    { name: 'Lounge', icon: 'fas fa-couch', value: props.lounge },\n    { name: 'Catering', icon: 'fas fa-pizza-slice', value: props.catering },\n    { name: 'Internet', icon: 'fas fa-wifi', value: props.internet },\n    { name: 'Parking', icon: 'fas fa-parking', value: props.parking },\n    { name: 'Showers', icon: 'fas fa-shower', value: props.showers },\n    { name: 'Full Rider', icon: 'fas fa-cocktail', value: props.rider },\n  ];\n\n  // Determine whether to render amenities or not\n  const hasNoAmenities = amenities.every((amenity) => !amenity.value);\n\n  // Create query string for making request to Google Maps API\n  const mapQuery = `${props.street} ${props.city}, ${props.state} ${props.zip}`;\n\n  return (\n    <div className=\"info-container\">\n      {/* Date */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1 small-heading\">\n          <i className=\"far fa-calendar mr-2\"></i>\n          Today is\n        </p>\n        <p className=\"h2\">{props.date}</p>\n      </div>\n\n      {/* Location */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1 small-heading\">\n          <i className=\"fas fa-map-marker-alt mr-2\"></i>\n          You are in\n        </p>\n        <p className=\"h2\">{`${props.city}, ${props.state}.`}</p>\n      </div>\n\n      {/* Tonight's show and location */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1 small-heading\">\n          <i className=\"fas fa-headphones-alt mr-2\"></i>\n          Tonight's show\n        </p>\n        <p className=\"h2\">{props.venue}</p>\n        <p className=\"h5 mb-1\">{props.street}</p>\n        <p className=\"h5 mb-1\">{`${props.city}, ${props.state}. ${props.zip}`}</p>\n        <iframe\n          className=\"map rounded mt-3\"\n          loading=\"lazy\"\n          src={`https://www.google.com/maps/embed/v1/place?key=${process.env.REACT_APP_GOOGLE_API_KEY}\n        &q=${mapQuery}`}\n        ></iframe>\n      </div>\n\n      {/* Tickets */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1 small-heading\">\n          <i className=\"fas fa-ticket-alt mr-2\"></i>\n          Presale / Capacity\n        </p>\n        <p className=\"h2\">\n          {props.presale} / {props.capacity}\n        </p>\n      </div>\n\n      {/* Amenity badges */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-3 small-heading\">Amenities</p>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <ListGroup key=\"amenities\" variant=\"flush\">\n\n              {/* If venue provides no amenities, notify user */}\n              {/* Otherwise, map over amenities and render only those that evaluate to true */}\n              {hasNoAmenities ? (\n                <p className=\"h2 mb-1\">No Amenities Guaranteed</p>\n              ) : (\n                <div>\n                  {amenities.map((amenity, index) => {\n                    if (amenity.value) {\n                      return (\n                        <ListGroup.Item\n                          key={`${index}-${amenity.name}`}\n                          className=\"daysheet-item\"\n                        >\n                          <div className=\"row\">\n                            <div className=\"col-3 col-md-2\">\n                              <p className=\"list-item text-center mb-1\">\n                                <i\n                                  className={`amenity-icon mr-2 ${amenity.icon}`}\n                                ></i>\n                              </p>\n                            </div>\n                            <div className=\"col-9 col-md-10 daysheet-item\">\n                              <p className=\"list-item mb-1\">{amenity.name}</p>\n                            </div>\n                          </div>\n                        </ListGroup.Item>\n                      );\n                    }\n                  })}\n                </div>\n              )}\n            </ListGroup>\n          </div>\n        </div>\n      </div>\n\n      {/* Next Up */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1 small-heading\">\n          <i className=\"fas fa-road mr-2\"></i>\n          Next up\n        </p>\n        {props.nextVenue ? (\n          <div>\n            <p className=\"h2 mb-1\">{props.nextVenue}</p>\n            <p className=\"h5 mb-1\">{props.nextDate}</p>\n            <p className=\"h5 mb-1\">{`${props.nextCity}, ${props.nextState}.`}</p>\n          </div>\n        ) : (\n          <p className=\"h2 mb-1\">Nothing Scheduled</p>\n        )}\n      </div>\n    </div>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\n\n// Create and export StageSchedule component\nexport default function StageSchedule(props) {\n  return (\n    <div className=\"info-container\">\n      <p className=\"dashboard-heading small-heading h5 mb-2\">Day Schedule</p>\n\n      {/* If the gig contains a schedule, map over it and render each block */}\n      {props.schedule.length ? (\n        <ListGroup key=\"schedule\" variant=\"flush\">\n          {props.schedule.map((block, index) => {\n            return (\n              <ListGroup.Item\n                key={`${index}-${block._id}`}\n                className=\"daysheet-item\"\n              >\n                <div className=\"row\">\n                  <div className=\"col-12 col-lg-12\">\n                    <p className=\"list-label pt-2 mb-1\">{block.timeString}</p>\n                  </div>\n                  <div className=\"col-12 col-lg-12\">\n                    <p className=\"list-item mb-1\">{block.event}</p>\n                  </div>\n                </div>\n              </ListGroup.Item>\n            );\n          })}\n        </ListGroup>\n      ) : (\n        <p className=\"h2\">NOTHING SCHEDULED</p>\n      )}\n    </div>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport CardBody from '../CardBody';\nimport Daysheet from '../Daysheet';\nimport StageSchedule from '../StageSchedule';\n\n// Create and export Gig component\nexport default function Gig(props) {\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <div>\n        <div className=\"row\">\n\n          {/* Daysheet container (pass props from Dashboard through) */}\n          <div className=\"col-12 col-md-6 mb-4\">\n            <CardBody spacing={'p-4 p-md-4 m-2 m-md-0'}>\n              <Daysheet\n                date={props.date}\n                city={props.city}\n                state={props.state}\n                venue={props.venue}\n                street={props.street}\n                zip={props.zip}\n                capacity={props.capacity}\n                presale={props.presale}\n                lounge={props.lounge}\n                catering={props.catering}\n                showers={props.showers}\n                internet={props.internet}\n                parking={props.parking}\n                rider={props.rider}\n                nextDate={props.nextDate}\n                nextCity={props.nextCity}\n                nextState={props.nextState}\n                nextVenue={props.nextVenue}\n                distance={props.distance}\n              />\n            </CardBody>\n          </div>\n\n          {/* Stage schedule container (pass props from Dashboard through) */}\n          <div className=\"col-12 col-md-6 mb-4\">\n            <CardBody spacing={'p-4 p-md-4 m-2 m-md-0'}>\n              <StageSchedule schedule={props.schedule} />\n            </CardBody>\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n","// Create and export empty form object for initializing state\nexport const emptyFormObj = {\n  date: '',\n  venue: {\n    name: '',\n    street: '',\n    city: '',\n    state: '',\n    zip: '',\n    capacity: '0',\n    presale: '0',\n  },\n  catering: false,\n  internet: false,\n  showers: false,\n  lounge: false,\n  parking: false,\n  rider: false,\n  distance: 'N/A',\n  schedule: [\n    { timeString: '12:00 PM', event: 'Load In' },\n    { timeString: '3:00 PM', event: 'Soundcheck' },\n    { timeString: '6:00 PM', event: 'Doors' },\n    { timeString: '7:00 - 7:30 PM', event: 'Opener' },\n    { timeString: '7:45 - 8:15 PM', event: 'Second' },\n    { timeString: '8:30 - 9:15 PM', event: 'Direct' },\n    { timeString: '9:30 - 10:50 PM', event: 'Headliner' },\n    { timeString: '2:00 AM', event: 'Bus Call' },\n  ]\n}","// Import dependencies\nimport React, { useState, useEffect } from 'react';\nimport { emptyFormObj } from '../../utils/emptyFormObj';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions'\nimport { toast } from 'react-toastify';\nimport API from '../../utils/API';\nimport Button from 'react-bootstrap/Button';\nimport CardBody from '../CardBody';\nimport ConfirmModal from '../ConfirmModal';\nimport Form from 'react-bootstrap/Form';\nimport formatObj from '../../utils/formatObj';\nimport './index.scss';\n\n// Create and export Dashboard component\nexport default function GigForm(props) {\n  // Init state\n  const [formObj, setFormObj] = useState(emptyFormObj);\n  const [show, setShow] = useState(false);\n\n  // If in edit mode, configure the form for updating values\n  // on an existing gig rather than creating a new one\n  useEffect(() => {\n    if (props.selected) {\n      const gigObj = formatObj(props.selected);\n      setFormObj(gigObj);\n    }\n  }, []);\n\n  // Amenities array used to create check boxes inputs\n  const amenities = [\n    'catering',\n    'internet',\n    'showers',\n    'lounge',\n    'parking',\n    'rider',\n  ];\n\n  // Clean stage blocks to use when user adds or updates\n  // an artist name or event time string\n  const stageBlocks = [\n    { timeString: '', event: 'Load In' },\n    { timeString: '', event: 'Soundcheck' },\n    { timeString: '', event: 'Doors' },\n    { timeString: '', event: 'Opener' },\n    { timeString: '', event: 'Second' },\n    { timeString: '', event: 'Direct' },\n    { timeString: '', event: 'Headliner' },\n    { timeString: '', event: 'Bus Call' },\n  ];\n\n  // Add new gig to database\n  const addGig = async () => {\n    try {\n      const res = await API.addGig(formObj);\n      toast.success('And the crowd goes wild! 🤘🏼');\n      console.log(res);\n    } catch (err) {\n      toast.error('Uh oh! Something went wrong. Try again! 🧐');\n      console.log(err);\n    }\n  };\n\n  // Update existing gig in database\n  const updateGig = async () => {\n    console.log('Updating gig...');\n    const id = props.selected._id;\n    try {\n      const res = await API.updateGig(id, formObj);\n      toast.success(`Gig updated! Don't forget extra strings... 🎸`);\n      console.log(res);\n    } catch (err) {\n      toast.error('Uh oh! Something went wrong. Try again! 🧐');\n      console.log(err);\n    }\n  };\n\n  // Delete gig from database and fetch updated gigs data from API\n  const deleteGig = async () => {\n    console.log('Deleting gig...');\n    const id = props.selected._id;\n    try {\n      const res = await API.deleteGig(id);\n      handleClose();\n      toast.success(`Too bad! You'll be back before you know it! 🚀`);\n\n      // Fetch updated list of gigs, reset gigs index at 0 to prevent\n      // app from trying to load the deleted gig, and switch back to\n      // tour view\n      setTimeout(() => {\n        props.fetchGigs();\n        props.setIndex(0);\n        props.handleView('tour');\n      }, 250);\n    } catch (err) {\n      toast.error('Uh oh! Something went wrong. Try again! 🧐');\n      console.log(err);\n    }\n  };\n\n  // Handle input changes\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    const venue = formObj.venue;\n\n    // If input is date, set field directly\n    if (name === 'date') {\n      setFormObj({\n        ...formObj,\n        [name]: value,\n      });\n\n      return;\n    }\n\n    // Otherwise, set field inside venue object\n    setFormObj({\n      ...formObj,\n      venue: {\n        ...venue,\n        [name]: value,\n      },\n    });\n  };\n\n  // Handle updating state from checkboxes\n  const handleCheck = (event) => {\n    const { name, checked } = event.target;\n    setFormObj({\n      ...formObj,\n      [name]: checked,\n    });\n  };\n\n  // Handle updating state's nested schedule array\n  const handleSchedule = (event) => {\n    // Capture event parameters\n    const { name, value } = event.target;\n    const { index } = event.target.dataset;\n\n    // Extract matching object from schedule in state\n    const schedule = [...formObj.schedule];\n    const currentBlock = schedule[index];\n\n    // Update the block's time string and put it back in the schedule\n    currentBlock.timeString = value;\n    schedule.splice(index, 1, currentBlock);\n\n    // Reset state\n    setFormObj({\n      ...formObj,\n      schedule: schedule,\n    });\n  };\n\n  // Handle updating artists assigned to stage schedule blocks 3-6\n  const handleArtist = (event) => {\n    // Capture event parameters\n    const { name, value } = event.target;\n    const { index } = event.target.dataset;\n\n    // Extract matching object from schedule in state\n    const schedule = [...formObj.schedule];\n    const currentBlock = schedule[index];\n\n    // Update the block's event title and put it back in the schedule\n    currentBlock.event = value;\n    schedule.splice(index, 1, currentBlock);\n\n    // Reset state\n    setFormObj({\n      ...formObj,\n      schedule: schedule,\n    });\n  };\n\n  // Handle resetting all input fields in UI on submit\n  const handleReset = () => {\n    Array.from(document.querySelectorAll('input')).forEach(\n      (input) => (input.value = '')\n    );\n\n    // Reset form object state back to the empty gig object structure\n    setFormObj(emptyFormObj);\n  };\n\n  // Create a formatted input label from its name\n  const createLabel = (name) => {\n    return name.slice(0, 1).toUpperCase() + name.slice(1);\n  };\n\n  // Post form data to API\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Check that user provided a venue name\n    if (!formObj.venue.name) {\n      toast.error(`Uh oh! Wrong chord! Check the venue name and try again. 🧐`);\n      return;\n    }\n\n    // Check that user provided a city\n    if (!formObj.venue.city) {\n      toast.error(`Uh oh! Wrong chord! Check the city and try again. 🧐`);\n      return;\n    }\n\n    // Check that user provided a state\n    if (!formObj.venue.state) {\n      toast.error(`Uh oh! Wrong chord! Check the state and try again. 🧐`);\n      return;\n    }\n\n    // Check that user provided a date\n    if (!formObj.date) {\n      toast.error(`Uh oh! Wrong chord! Check the date and try again. 🧐`);\n      return;\n    }\n\n    // Determine whether to send PUT or POST request to API\n    props.view === 'edit' ? updateGig() : addGig();\n\n    // Reset fields\n    handleReset();\n\n    // Delay fetching gigs from API for long enough to ensure\n    // that the newly added gig has been created and can be\n    // returned to the client and reset the view\n    setTimeout(() => {\n      props.fetchGigs();\n      props.handleView('tour');\n    }, 250);\n  };\n\n  // Handle toggling confirmation modal's visibility\n  const handleShow = () => setShow(true);\n  const handleClose = () => setShow(false);\n\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <section>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <CardBody spacing={'p-4 p-md-4 m-2 m-md-0'}>\n              <p className=\"h2 heading\">\n                {props.view === 'add' ? 'Add Gig' : 'Edit Gig'}\n              </p>\n\n              <Form>\n                <div className=\"row\">\n\n                  {/* Venue Name */}\n                  <div className=\"col-12 col-md-6\">\n                    <Form.Group controlId=\"venueInputGroup\">\n                      <Form.Label>Venue Name *</Form.Label>\n                      <Form.Control\n                        name=\"name\"\n                        type=\"text\"\n                        placeholder=\"Enter Venue Name\"\n                        value={formObj.venue.name}\n                        onChange={handleInputChange}\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* Address */}\n                  <div className=\"col-12 col-md-6\">\n                    <Form.Group controlId=\"streetInputGroup\">\n                      <Form.Label>Street Address</Form.Label>\n                      <Form.Control\n                        name=\"street\"\n                        type=\"text\"\n                        placeholder=\"Enter Street Address\"\n                        value={formObj.venue.street}\n                        onChange={handleInputChange}\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* City */}\n                  <div className=\"col-6\">\n                    <Form.Group controlId=\"cityInputGroup\">\n                      <Form.Label>City *</Form.Label>\n                      <Form.Control\n                        name=\"city\"\n                        type=\"text\"\n                        placeholder=\"Enter City\"\n                        value={formObj.venue.city}\n                        onChange={handleInputChange}\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* State */}\n                  <div className=\"col-6\">\n                    <Form.Group controlId=\"stateInputGroup\">\n                      <Form.Label>State *</Form.Label>\n                      <Form.Control\n                        name=\"state\"\n                        type=\"text\"\n                        placeholder=\"Enter State\"\n                        value={formObj.venue.state}\n                        onChange={handleInputChange}\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* Zip */}\n                  <div className=\"col-6 col-md-3\">\n                    <Form.Group controlId=\"zipInputGroup\">\n                      <Form.Label>Zip</Form.Label>\n                      <Form.Control\n                        name=\"zip\"\n                        type=\"text\"\n                        placeholder=\"Enter Zip\"\n                        value={formObj.venue.zip}\n                        onChange={handleInputChange}\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* Date */}\n                  <div className=\"col-6 col-md-3\">\n                    <Form.Group controlId=\"dateInputGroup\">\n                      <Form.Label>Date *</Form.Label>\n                      <Form.Control\n                        name=\"date\"\n                        type=\"date\"\n                        placeholder=\"Enter Date\"\n                        value={formObj.date}\n                        onChange={handleInputChange}\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* Capacity */}\n                  <div className=\"col-6 col-md-3\">\n                    <Form.Group controlId=\"capacityInputGroup\">\n                      <Form.Label>Capacity</Form.Label>\n                      <Form.Control\n                        name=\"capacity\"\n                        type=\"text\"\n                        placeholder=\"Enter Capacity\"\n                        value={formObj.venue.capacity}\n                        onChange={handleInputChange}\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* Presale */}\n                  <div className=\"col-6 col-md-3\">\n                    <Form.Group controlId=\"presaleInputGroup\">\n                      <Form.Label>Presale</Form.Label>\n                      <Form.Control\n                        name=\"presale\"\n                        type=\"text\"\n                        placeholder=\"Enter Presale\"\n                        value={formObj.venue.presale}\n                        onChange={handleInputChange}\n                      />\n                    </Form.Group>\n                  </div>\n\n                  <div className=\"col-12\">\n                    <p className=\"small-heading\">\n                      Amenities (Select all that apply):\n                    </p>\n                  </div>\n\n                  {/* Creates checkboxes for each element in the amenities array */}\n                  {amenities.map((amenity, index) => {\n                    return (\n                      <div key={`checkbox-${index}`} className=\"col-6 col-md-4\">\n                        <Form.Check\n                          type=\"checkbox\"\n                          name={amenity}\n                          label={`${createLabel(amenity)}`}\n                          checked={formObj[amenity]}\n                          onChange={handleCheck}\n                        />\n                      </div>\n                    );\n                  })}\n\n                  {/* Artist inputs tied to stage schedule bocks 3, 4, 5, and 6 */}\n                  <div className=\"col-12 pt-3\">\n                    <p className=\"small-heading mb-0\">Artists</p>\n                    <p>\n                      Add artists or use default slot titles. You can always\n                      come back and update these later!\n                    </p>\n                  </div>\n\n                  {/* Opener */}\n                  <div className=\"col-6 col-md-3\">\n                    <Form.Group>\n                      <Form.Label>Opener</Form.Label>\n                      <Form.Control\n                        name=\"opener\"\n                        data-index={3}\n                        type=\"text\"\n                        placeholder=\"Enter Opener\"\n                        value={formObj.schedule[3].event}\n                        onChange={handleArtist}\n                        onSubmit={() =>\n                          setFormObj({\n                            ...formObj,\n                            schedule: stageBlocks,\n                          })\n                        }\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* Second */}\n                  <div className=\"col-6 col-md-3\">\n                    <Form.Group>\n                      <Form.Label>Second</Form.Label>\n                      <Form.Control\n                        name=\"second\"\n                        data-index={4}\n                        type=\"text\"\n                        placeholder=\"Enter Second\"\n                        value={formObj.schedule[4].event}\n                        onChange={handleArtist}\n                        onSubmit={() =>\n                          setFormObj({\n                            ...formObj,\n                            schedule: stageBlocks,\n                          })\n                        }\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* Direct */}\n                  <div className=\"col-6 col-md-3\">\n                    <Form.Group>\n                      <Form.Label>Direct</Form.Label>\n                      <Form.Control\n                        name=\"direct\"\n                        data-index={5}\n                        type=\"text\"\n                        placeholder=\"Enter Direct\"\n                        value={formObj.schedule[5].event}\n                        onChange={handleArtist}\n                        onSubmit={() =>\n                          setFormObj({\n                            ...formObj,\n                            schedule: stageBlocks,\n                          })\n                        }\n                      />\n                    </Form.Group>\n                  </div>\n\n                  {/* Headliner */}\n                  <div className=\"col-6 col-md-3\">\n                    <Form.Group>\n                      <Form.Label>Headliner</Form.Label>\n                      <Form.Control\n                        name=\"opener\"\n                        data-index={6}\n                        type=\"text\"\n                        placeholder=\"Enter Opener\"\n                        value={formObj.schedule[6].event}\n                        onChange={handleArtist}\n                        onSubmit={() =>\n                          setFormObj({\n                            ...formObj,\n                            schedule: stageBlocks,\n                          })\n                        }\n                      />\n                    </Form.Group>\n                  </div>\n\n                  <div className=\"col-12 pt-3\">\n                    <p className=\"small-heading mb-0\">Update Stage Schedule</p>\n                    <p>\n                      Add custom times or use default stage schedule. This can\n                      always be updated later!\n                    </p>\n                  </div>\n\n                  {/* Create inputs for adding times to stage schedule blocks */}\n                  {formObj.schedule.map((block, index) => {\n                    return (\n                      <div\n                        key={`block-${stageBlocks[index].event}`}\n                        className=\"col-6 col-md-3\"\n                      >\n                        <Form.Group>\n                          <Form.Label>{stageBlocks[index].event}</Form.Label>\n                          <Form.Control\n                            data-index={index}\n                            name={block.event}\n                            type=\"text\"\n                            placeholder={`Enter ${stageBlocks[index].event} start time`}\n                            value={block.timeString}\n                            onChange={handleSchedule}\n                            onSubmit={() =>\n                              setFormObj({\n                                ...formObj,\n                                schedule: stageBlocks,\n                              })\n                            }\n                          />\n                        </Form.Group>\n                      </div>\n                    );\n                  })}\n                </div>\n\n                {/* Submit */}\n                <div className=\"row pt-3\">\n                  <div className=\"col-12\">\n                    {/* Add gig */}\n                    {props.view === 'add' && (\n                      <Button\n                        type=\"submit\"\n                        variant=\"primary\"\n                        className=\"py-2 px-3 mr-2\"\n                        onClick={handleSubmit}\n                      >\n                        <i className=\"fas fa-plus mr-2\"></i>\n                        Add Gig\n                      </Button>\n                    )}\n\n                    {/* Update gig */}\n                    {props.view === 'edit' && (\n                      <div>\n                        <Button\n                          type=\"submit\"\n                          variant=\"primary\"\n                          className=\"py-2 px-3 mr-2\"\n                          onClick={handleSubmit}\n                        >\n                          <i className=\"fas fa-edit mr-2\"></i>\n                          Update Gig\n                        </Button>\n                        <Button\n                          variant=\"danger\"\n                          className=\"py-2 px-3 mr-2\"\n                          onClick={handleShow}\n                        >\n                          <i className=\"fas fa-trash-alt mr-2\"></i>\n                          Delete Gig\n                        </Button>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </Form>\n            </CardBody>\n          </div>\n\n          {/* Confirmation modal */}\n          <ConfirmModal \n            show={show}\n            message=\"Looks like you're deleting a gig. Are you sure you want to continue?\"\n            confirm={{ color: 'danger', message: 'Delete Gig' }}\n            cancel={{ color: 'dark', message: 'Keep Gig' }}\n            handleConfirm={deleteGig}\n            handleCancel={handleClose}\n          />\n\n        </div>\n      </section>\n    </motion.div>\n  );\n}\n","// Import dependencies\nimport dayjs from 'dayjs';\nimport { emptyFormObj } from './emptyFormObj';\n\n// Create and export formatting function so that the same form used to add\n// new gigs can be auto-populated with the details of an existing gig returned\n// by the API allowing a user to easily update it\nexport default function formatObj(obj) {\n  return {\n    date: dayjs(obj.date).format('YYYY-MM-DD'),\n    venue: {\n      name: obj.venue.name,\n      street: obj.venue.street,\n      city: obj.venue.city,\n      state: obj.venue.state,\n      zip: obj.venue.zip,\n      capacity: obj.venue.capacity,\n      presale: obj.venue.presale\n    },\n    catering: obj.catering,\n    lounge: obj.lounge,\n    internet: obj.internet,\n    parking: obj.parking,\n    showers: obj.showers,\n    rider: obj.rider,\n    schedule: [\n      { timeString: obj.schedule[0].timeString, event: \"Load In\" },\n      { timeString: obj.schedule[1].timeString, event: \"Sound Check\" },\n      { timeString: obj.schedule[2].timeString, event: \"Doors\" },\n      { timeString: obj.schedule[3].timeString, event: obj.schedule[3].event },\n      { timeString: obj.schedule[4].timeString, event: obj.schedule[4].event },\n      { timeString: obj.schedule[5].timeString, event: obj.schedule[5].event },\n      { timeString: obj.schedule[6].timeString, event: obj.schedule[6].event },\n      { timeString: obj.schedule[7].timeString, event: \"Bus Call\" },\n    ]\n  }\n}","// Import dependencies\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport { toast } from 'react-toastify';\nimport Button from 'react-bootstrap/Button';\nimport CardBody from '../CardBody';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\n\n// Create and export Tour component\nexport default function Tour(props) {\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <div className=\"info-container\">\n        <div className=\"row\">\n          <div className=\"col-12 mb-4\">\n            <CardBody spacing={'p-4 p-md-4 m-2 m-md-0'}>\n              <div className=\"container-lg p-0\">\n                <h3 className=\"heading\">Full Tour Dates</h3>\n                <p>Click a date to view show details</p>\n\n                {/* If API has returned a full gigs array to the Dashboard component */}\n                {props.gigs.length ? (\n                  <ListGroup key=\"tour\">\n\n                    {/* Map over gigs array and create a new block for each gig */}\n                    {props.gigs.map((gig, index) => {\n                      const timeArr = gig.schedule[3].timeString.split(' ');\n                      const showtime = timeArr[0];\n\n                      return (\n                        <ListGroup.Item\n                          key={`${index}-${gig._id}`}\n                          className=\"tour-date row\"\n                        >\n                          <div className=\"row\">\n\n                            {/* Date + Location */}\n                            <div className=\"col-12 col-md-8 mx-auto\">\n                              <p className=\"small-heading pt-2 mb-1\">\n                                <i className=\"fas fa-calendar mr-2\"></i>\n                                {props.handleDate(gig.date)}\n                              </p>\n                              <p className=\"list-item mb-1 d-lg-inline-block\">\n                                {`${gig.venue.city}, ${gig.venue.state}. `}\n                                <span className=\"d-block d-lg-inline-block\">{`@ ${gig.venue.name}`}</span>\n                              </p>\n                            </div>\n\n                            {/* Time */}\n                            <div className=\"col-12 col-md-8 mx-auto\">\n                              <p className=\"list-label mb-1\">\n                                {`Doors @ ${gig.schedule[2].timeString}`}\n                                <span className=\"d-none d-md-inline-block mx-2\">{`/`}</span>\n                                <span className=\"d-block d-md-inline-block\">{`Show @ ${showtime} PM`}</span>\n                              </p>\n                            </div>\n\n                            {/* Artists */}\n                            <div className=\"col-12 col-md-8 mx-auto\">\n                              <p className=\"list-label mb-1\">\n                                {`${gig.schedule[6].event} + ${gig.schedule[5].event} + ${gig.schedule[4].event} + ${gig.schedule[3].event}`}\n                              </p>\n                            </div>\n\n                            {/* View details button */}\n                            <div className=\"col-12 col-md-8 mx-auto\">\n                              <Button\n                                id={gig._id}\n                                variant=\"primary\"\n                                className=\"my-2 mr-2\"\n                                onClick={(event) => {\n                                  if (props.gigs.length) {\n                                    props.handleSelect(event);\n\n                                  } else {\n                                    toast.error('Oh no! Something went wrong. Try again!');\n                                  }\n                                }}\n                              >\n                                <i className=\"fas fa-info-circle mr-2\"></i>\n                                View Details\n                              </Button>\n                            </div>\n                          </div>\n                        </ListGroup.Item>\n                      );\n                    })}\n                  </ListGroup>\n                ) : (\n                  <p className=\"h2\">NO TOUR DATES TO DISPLAY</p>\n                )}\n              </div>\n            </CardBody>\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n","// Import dependencies\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport { toast } from 'react-toastify';\nimport API from '../../utils/API';\nimport Button from 'react-bootstrap/Button';\nimport DashboardNav from '../DashboardNav';\nimport dayjs from 'dayjs';\nimport Gig from '../Gig';\nimport GigForm from '../GigForm';\nimport Tour from '../Tour';\nimport './index.scss';\n\n// Create and export Dashboard component\nexport default function Dashboard() {\n  // Init state\n  const [gigs, setGigs] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [view, setView] = useState('tour');\n\n  // Fetch gigs from API when component mounts and whenever the view state changes\n  useEffect(() => {\n    fetchGigs();\n  }, []);\n\n  // Fetch gigs from DB\n  const fetchGigs = async () => {\n    console.log('Fetching gigs...');\n    try {\n      const res = await API.getGigs();\n      setGigs(res.data);\n    } catch (err) {\n      toast.error('Uh oh! Something went wrong. Try again! 🧐');\n      console.log(err);\n    }\n  };\n\n  // Handle formatting date for display\n  const handleDate = (date) => {\n    return dayjs(date).add(1, 'day').format('ddd. MMMM D, YYYY');\n  };\n\n  // Handle finding and rendering matching show details from click event in tour view\n  const handleSelect = (event) => {\n    event.preventDefault();\n\n    // Figure out which gig the user wants to see\n    const { id } = event.target;\n    const index = gigs.findIndex((gig) => gig._id === id);\n\n    // If the specified gig can't be found, notify the user\n    // and log the error\n    if (index === -1) {\n      toast.error(`Uh oh! We can't find that gig. Try again! 🧐`);\n      console.log(event.target);\n      return;\n    } else {\n      console.log('Accessing gig...');\n\n      // Update index state to render selected show\n      setIndex(index);\n\n      // Update view state to switch back to gig view\n      setView('gig');\n      window.scrollTo(0, 0);\n    }\n  };\n\n  // Click handler for cycling to next gig\n  const handleNext = () => {\n    if (index === gigs.length - 1) {\n      setIndex(0);\n    } else {\n      console.log(gigs);\n      setIndex(index + 1);\n    }\n  };\n\n  // Click handler for cycling to previous gig\n  const handlePrev = () => {\n    if (index === 0) {\n      setIndex(gigs.length - 1);\n    } else {\n      setIndex(index - 1);\n    }\n  };\n\n  // Click handler for change dashboard's view state\n  const handleView = (view) => {\n    setView(view);\n  };\n\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <section className=\"p-2 px-md-4 px-lg-5\">\n        {gigs.length ? (\n          <div>\n            {/* Dashboard navigation controls */}\n            <DashboardNav\n              prev={handlePrev}\n              next={handleNext}\n              gigs={gigs}\n              view={view}\n              handleView={handleView}\n            />\n\n            {/* View gig details, day sheet, and stage schedule */}\n            {view === 'gig' && (\n              <Gig\n                date={handleDate(gigs[index].date)}\n                city={gigs[index].venue.city}\n                state={gigs[index].venue.state}\n                venue={gigs[index].venue.name}\n                street={gigs[index].venue.street}\n                zip={gigs[index].venue.zip}\n                capacity={gigs[index].venue.capacity}\n                presale={gigs[index].venue.presale}\n                lounge={gigs[index].lounge}\n                catering={gigs[index].catering}\n                showers={gigs[index].showers}\n                internet={gigs[index].internet}\n                parking={gigs[index].parking}\n                rider={gigs[index].rider}\n                nextDate={\n                  gigs[index + 1] ? handleDate(gigs[index + 1].date) : false\n                }\n                nextCity={gigs[index + 1] ? gigs[index + 1].venue.city : false}\n                nextState={\n                  gigs[index + 1] ? gigs[index + 1].venue.state : false\n                }\n                nextVenue={gigs[index + 1] ? gigs[index + 1].venue.name : false}\n                distance={'315 miles'}\n                schedule={gigs[index].schedule}\n                prev={handlePrev}\n                next={handleNext}\n              />\n            )}\n\n            {/* Tour view for displaying full tour routing */}\n            {view === 'tour' && (\n              <Tour\n                gigs={gigs}\n                handleDate={handleDate}\n                handleSelect={handleSelect}\n              />\n            )}\n\n            {/* Form view with state configured for adding new gigs */}\n            {view === 'add' && (\n              <GigForm\n                view={view}\n                handleView={handleView}\n                fetchGigs={fetchGigs}\n              />\n            )}\n\n            {/* Form view with state configured to edit/delete an existing gig */}\n            {view === 'edit' && (\n              <GigForm\n                view={view}\n                handleView={handleView}\n                setIndex={setIndex}\n                selected={gigs[index]}\n                fetchGigs={fetchGigs}\n              />\n            )}\n          </div>\n        ) : (\n          <p className=\"h2\">LOADING...</p>\n        )}\n      </section>\n    </motion.div>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport './index.scss';\n\n// Create and export Footer component\nexport default function Footer() {\n  return (\n    <footer>\n      <p>Powered by jxhnkndl</p>\n    </footer>\n  );\n}","// Import dependencies\nimport React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Button from 'react-bootstrap/Button';\nimport './index.scss';\n\n// Create and export LandingPage component\nexport default function LandingPage() {\n  // Extract login method to add to CTA button\n  const { loginWithRedirect } = useAuth0();\n\n  return (\n    <header className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12 col-md-10 mx-auto\">\n          <h1 className=\"headline\">Never miss a beat</h1>\n          <h3 className=\"sub-headline\">\n            <span className=\"d-block d-sm-inline-block mr-sm-2\">\n              You play the gigs.\n            </span>\n            <span className=\"d-block d-sm-inline-block\">\n              We'll handle the details.\n            </span>\n          </h3>\n          <hr />\n          <Button\n            variant=\"primary\"\n            className=\"mt-3 px-4 py-2 shadow\"\n            onClick={() => loginWithRedirect()}\n          >\n            Get Started\n            <i className=\"fas fa-play-circle ml-2\"></i>\n          </Button>\n        </div>\n      </div>\n    </header>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Button from 'react-bootstrap/Button';\n\n// Create and export LoginButton component\nexport default function LoginBtn() {\n  const { loginWithRedirect } = useAuth0();\n\n  return (\n    <Button\n      className=\"m-2 px-4 py-2\"\n      variant=\"primary\"\n      onClick={() => loginWithRedirect()}\n    >\n      <i className=\"fas fa-sign-in-alt mr-2\"></i>\n      Log In\n    </Button>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Button from 'react-bootstrap/Button';\n\n// Create and export LoginButton component\nexport default function LogoutBtn() {\n  const { logout, user } = useAuth0();\n\n  return (\n    <Button\n      className=\"m-2 px-4 py-2\"\n      variant=\"primary\"\n      onClick={() => logout({ returnTo: window.location.origin })}\n    >\n      Log Out\n      <i className=\"fas fa-sign-out-alt ml-2\"></i>\n    </Button>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport LoginBtn from '../LoginBtn';\nimport LogoutBtn from '../LogoutBtn';\nimport './index.scss';\n\n// Create and export MainNav component\nexport default function MainNav() {\n  const { isAuthenticated, user, logout } = useAuth0();\n\n  return (\n    <Navbar variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand href=\"/\">Bus Call</Navbar.Brand>\n\n      {/* Conditionally render navbar components based on user's login status */}\n      <Nav className=\"ml-auto\">\n        {isAuthenticated ? (\n          <div className=\"media\">\n            {user.picture && (\n              <img\n                src={user.picture}\n                className=\"avatar mr-3 rounded-circle d-none d-md-inline-block\"\n                alt=\"Profile image\"\n              />\n            )}\n            {user.given_name && (\n              <div className=\"media-body mr-3 d-none d-md-inline-block\">\n                <p className=\"h6 my-0\">{`Hi ${user.given_name}!`}</p>\n              </div>\n            )}\n            <LogoutBtn />\n          </div>\n        ) : (\n          <LoginBtn />\n        )}\n      </Nav>\n    </Navbar>\n  );\n}\n","// Import packages\nimport React from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Dashboard from '../Dashboard';\nimport LandingPage from '../LandingPage';\n\n// Create inline styles required to add hero image with gradient overlay\nconst bgImage = {\n  main: {\n    backgroundImage: `url(${process.env.PUBLIC_URL + '/imgs/stage.jpg'})`,\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    overflow: 'hidden',\n    position: 'relative'\n  },\n  overlay: {\n    background: 'linear-gradient(0deg, rgba(33,33,33,1) 20%, rgba(118,118,118,0.3883928571428571) 100%)',\n    position: 'absolute',\n    minHeight: '100%',\n    minWidth: '100vw',\n    display: 'flex',\n    alignItems: 'center'\n  }\n};\n\n// Create and export MainContent container component\nexport default function MainContent() {\n  const { isLoading, isAuthenticated } = useAuth0();\n\n  // If user isn't logging/logged in, render the landing page\n  if (!isAuthenticated && !isLoading) {\n    return (\n      <main style={bgImage.main}>\n        <div style={bgImage.overlay}>\n          <AnimatePresence exitBeforeEnter>\n            <LandingPage />\n          </AnimatePresence>\n        </div>\n      </main>\n    );\n  }\n\n  // If user is in the process of logging in, show loading message\n  if (isLoading) {\n    return (\n      <main style={{ overflow: 'hidden' }}>\n        <AnimatePresence exitBeforeEnter>\n          <h3 className=\"text-center\">Loading dashboard...</h3>\n        </AnimatePresence>\n      </main>\n    );\n  }\n\n  // If user is logged in, render the dashboard component\n  if (isAuthenticated) {\n    return (\n      <main style={{ overflow: 'hidden' }}>\n        <AnimatePresence exitBeforeEnter>\n          <Dashboard />\n        </AnimatePresence>\n      </main>\n    );\n  }\n}\n","// Import packages\nimport React from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { ToastContainer } from 'react-toastify';\nimport Dashboard from './components/Dashboard';\nimport Footer from './components/Footer';\nimport LandingPage from './components/LandingPage';\nimport MainNav from './components/MainNav';\nimport MainContent from './components/MainContent';\nimport './App.scss';\n\n// Overwrite some default styles in React Toastify library\nimport 'react-toastify/dist/ReactToastify.css';\n\n// Create and export App component\nexport default function App() {\n  return (\n    <div className=\"app-container\">\n      <MainNav />\n      <MainContent />\n      <Footer />\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressionBar={false}\n        newestOnTop\n        draggablePercent={60}\n        closeOnClick\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport App from './App';\nimport './index.scss';\n\n// Config Auth0\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n\n// Render the React app\nReactDOM.render(\n  <Auth0Provider\n    domain={domain}\n    clientId={clientId}\n    redirectUri={window.location.origin}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
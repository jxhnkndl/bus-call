{"version":3,"sources":["utils/API.js","components/MainNav/index.js","utils/transitions.js","components/CardBody/index.js","components/CycleControl/index.js","components/Daysheet/index.js","components/StageSchedule/index.js","components/Dashboard/index.js","utils/emptyFormObj.js","components/GigForm/index.js","components/Footer/index.js","App.js","index.js"],"names":["axios","get","gigData","post","MainNav","Navbar","variant","className","Brand","href","Nav","exact","to","pageVariants","initial","opacity","scale","in","out","pageTransitions","type","ease","duration","CardBody","props","children","CycleControl","onClick","prev","next","Daysheet","date","city","state","venue","street","zip","capacity","presale","greenrooms","catering","internet","nextVenue","nextCity","nextState","StageSchedule","schedule","length","ListGroup","map","block","index","Item","timeString","event","_id","Dashboard","useState","gigs","setGigs","setIndex","useEffect","fetchGigs","a","API","res","data","console","log","motion","div","animate","exit","variants","transition","dayjs","format","name","showers","nextDate","emptyFormObj","parking","rider","GigForm","formObj","setFormObj","stageBlocks","addGig","handleInputChange","target","value","handleCheck","checked","handleSchedule","dataset","currentBlock","splice","createLabel","slice","toUpperCase","Form","col","field","Group","controlId","Label","Control","placeholder","onChange","amenity","Check","label","data-index","onSubmit","Button","preventDefault","Array","from","document","querySelectorAll","forEach","input","Footer","App","style","overflowX","AnimatePresence","exitBeforeEnter","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.59629f37.chunk.js","sourcesContent":["// Import Axios\nimport axios from 'axios';\n\n// Create and export request methods\nexport default {\n  getGigs: function() {\n    return axios.get(\"/api/gigs\");\n  },\n  addGig: function(gigData) {\n    return axios.post(\"/api/gigs\", gigData);\n  }\n}","// Import dependencies\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport './index.scss';\n\n// Create and export MainNav component\nexport default function MainNav() {\n  return (\n    <Navbar variant=\"dark\" className=\"mb-4\">\n      <Navbar.Brand href=\"/\">Bus Call</Navbar.Brand>\n      <Nav className=\"mr-auto\">\n        <NavLink className=\"nav-link\" exact to=\"/\">Dashboard</NavLink>\n        <NavLink className=\"nav-link\" to=\"/create-gig\">Add Gig</NavLink>\n      </Nav>\n    </Navbar>\n  );\n}","// Stages of page transition animation\nexport const pageVariants = {\n  initial: {\n    opacity: 0,\n    scale: 0.8\n  },\n  in: {\n    opacity: 1,\n    scale: 1\n  },\n  out: {\n    opacity: 0,\n    scale: 1.2\n  }\n}\n\n// General page transition animation properties\nexport const pageTransitions = {\n  type: 'tween',\n  ease: 'anticipate',\n  duration: .3\n}","// Import dependencies\nimport React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport './index.scss';\n\n// Create and export reusable card component\nexport default function CardBody(props) {\n  return (\n    <div className=\"dash-card p-3 p-md-4 m-2 m-md-0\">\n      {props.children}\n    </div>\n  );\n}","// Import dependencies\nimport React from 'react';\nimport CardBody from '../CardBody';\n\n// Create and export cycle control component\nexport default function CycleControl(props) {\n  return (\n    <div className=\"row\">\n      <div className=\"col-12 mb-4\">\n        <CardBody>\n          <div className=\"row\">\n            <div className=\"col-2 d-flex justify-content-start align-items-center\">\n              <a href=\"#\" onClick={props.prev}>\n                <span className=\"material-icons md-48 material-icons-outlined\">\n                  arrow_back_ios\n                </span>\n              </a>\n            </div>\n            <div className=\"col-8\">\n              \n            </div>\n            <div className=\"col-2 d-flex justify-content-end align-items-center\">\n              <a href=\"#\" onClick={props.next}>\n                <span className=\"material-icons md-48 material-icons-outlined\">\n                  arrow_forward_ios\n                </span>\n              </a>\n            </div>\n          </div>\n        </CardBody>\n      </div>\n    </div>\n  );\n}\n","// Import dependencies\nimport React, { useContext } from 'react';\nimport dayjs from 'dayjs';\nimport './index.scss';\n\n// Create and export reusable card component\nexport default function Daysheet(props) {\n  return (\n    <div className=\"info-container\">\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1\">Today is:</p>\n        <p className=\"h2\">{props.date}</p>\n      </div>\n\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1\">You are in:</p>\n        <p className=\"h2\">{`${props.city}, ${props.state}.`}</p>\n      </div>\n\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1\">Tonight:</p>\n        <p className=\"h2\">{props.venue}</p>\n      </div>\n\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1\">Address:</p>\n        <p className=\"h5 mb-1\">{props.street}</p>\n        <p className=\"h5 mb-1\">{`${props.city}, ${props.state}. ${props.zip}`}</p>\n      </div>\n\n      <div className=\"card-item row text-center text-lg-left\">\n        <div className=\"col-6 col-lg-4 my-2 my-lg-0 order-1\">\n          <p className=\"h6 mb-1\">Capacity:</p>\n          <p className=\"h2\">{props.capacity}</p>\n        </div>\n\n        <div className=\"col-6 col-lg-4 my-2 my-lg-0 order-2 order-lg-4\">\n          <p className=\"h6 mb-1\">Presale:</p>\n          <p className=\"h2\">{props.presale}</p>\n        </div>\n\n        <div className=\"col-6 col-lg-4 my-2 my-lg-0 order-3 order-lg-5\">\n          <p className=\"h6 mb-1\">Rooms:</p>\n          <p className=\"h2\">{props.greenrooms ? 'Yes' : 'No'}</p>\n        </div>\n\n        <div className=\"col-6 col-lg-4 my-2 my-lg-0 order-4 order-lg-2\">\n          <p className=\"h6 mb-1\">Catering:</p>\n          <p className=\"h2\">{props.catering ? 'Yes' : 'No'}</p>\n        </div>\n\n        <div className=\"col-6 col-lg-4 my-2 my-lg-0 order-5 order-lg-3\">\n          <p className=\"h6 mb-1\">Internet:</p>\n          <p className=\"h2\">{props.internet ? 'Yes' : 'No'}</p>\n        </div>\n\n        <div className=\"col-6 col-lg-4 my-2 my-lg-0 order-6 order-lg-6 \">\n          <p className=\"h6 mb-1\">Showers:</p>\n          <p className=\"h2\">{props.presale ? 'Yes' : 'No'}</p>\n        </div>\n      </div>\n\n      <div className=\"card-item\">\n        <p className=\"h6 mb-1\">Tomorrow:</p>\n        <p className=\"h3 mb-1\">{props.nextVenue}</p>\n        <p className=\"h5 mb-1\">{`${props.nextCity}, ${props.nextState}.`}</p>\n        <p className=\"h5\">{`Distance: 315 miles`}</p>\n      </div>\n\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1\">{`${props.nextCity}, ${props.nextState}.`}</p>\n        <p className=\"h6\">{`Distance: 315 miles`}</p>\n      </div>\n    </div>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport './index.scss';\n\n// Create and export reusable card component\nexport default function StageSchedule(props) {\n  return (\n    <div className=\"info-container\">\n      <p className=\"dashboard-heading h5 mb-1\">Daysheet</p>\n\n      {props.schedule.length ? (\n        <ListGroup key=\"schedule\" variant=\"flush\">\n          {props.schedule.map((block, index) => {\n            return (\n              <ListGroup.Item\n                key={`${index}-${block._id}`}\n                className=\"daysheet-item\"\n              >\n                <div className=\"row\">\n                  <div className=\"col-12 col-lg-5 daysheet-time\">\n                    {block.timeString}\n                  </div>\n                  <div className=\"col-12 col-lg-7 daysheet-item\">\n                    {block.event}\n                  </div>\n                </div>\n              </ListGroup.Item>\n            );\n          })}\n        </ListGroup>\n      ) : (\n        <p className=\"h2\">NOTHING SCHEDULED</p>\n      )}\n    </div>\n  );\n}\n","// Import dependencies\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport CardBody from '../CardBody';\nimport CycleControl from '../CycleControl';\nimport Daysheet from '../Daysheet';\nimport StageSchedule from '../StageSchedule';\nimport API from '../../utils/API';\nimport './index.scss';\nimport dayjs from 'dayjs';\n\n// Create and export dashboard page component\nexport default function Dashboard() {\n  const [gigs, setGigs] = useState([]);\n  let [index, setIndex] = useState(0);\n\n  // On load\n  useEffect(() => {\n    fetchGigs();\n  }, []);\n\n  // Fetch gigs from DB\n  const fetchGigs = async () => {\n    try {\n      const res = await API.getGigs();\n      setGigs(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Handle formatting date for display\n  const handleDate = (date) => {\n    return dayjs(date).format('dddd MMM. D, YYYY');\n  };\n\n  // Click handler for cycling to next gig\n  const handleNext = () => {\n    if (index === gigs.length - 1) {\n      setIndex(0);\n    } else {\n      console.log(gigs);\n      setIndex(index + 1);\n    }\n  };\n\n  // Click handler for cycling to previous gig\n  const handlePrev = () => {\n    if (index === 0) {\n      setIndex(gigs.length - 1);\n    } else {\n      setIndex(index - 1);\n    }\n  };\n\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <section>\n        \n        {gigs.length ? (\n          <div>\n            <div className=\"row\">\n              <div className=\"col-12 col-md-6 mb-4\">\n                <CardBody>\n                  <Daysheet\n                    date={handleDate(gigs[index].date)}\n                    city={gigs[index].venue.city}\n                    state={gigs[index].venue.state}\n                    venue={gigs[index].venue.name}\n                    street={gigs[index].venue.street}\n                    zip={gigs[index].venue.zip}\n                    capacity={gigs[index].venue.capacity}\n                    presale={gigs[index].venue.presale}\n                    greenrooms={gigs[index].greenrooms}\n                    catering={gigs[index].catering}\n                    showers={gigs[index].showers}\n                    internet={gigs[index].internet}\n                    nextDate={gigs[index + 1] ? gigs[index + 1].date : 'N/A'}\n                    nextCity={gigs[index + 1] ? gigs[index + 1].venue.city : 'N/A'}\n                    nextState={gigs[index + 1] ? gigs[index + 1].venue.state : 'N/A'}\n                    nextVenue={gigs[index + 1] ? gigs[index + 1].venue.name : 'N/A'}\n                  />\n                </CardBody>\n              </div>\n              <div className=\"col-12 col-md-6 mb-4\">\n                <CardBody>\n                  <StageSchedule schedule={gigs[index].schedule} />\n                </CardBody>\n              </div>\n            </div>\n            <CycleControl prev={handlePrev} next={handleNext} />\n          </div>\n        ) : (\n          <p className=\"h4\">NOTHING SCHEDULED</p>\n        )}\n      </section>\n    </motion.div>\n  );\n}\n","// Create and export empty form object\nexport const emptyFormObj = {\n  date: '',\n  venue: {\n    name: '',\n    street: '',\n    city: '',\n    state: '',\n    zip: '',\n    capacity: '0',\n    presale: '0',\n  },\n  catering: false,\n  internet: false,\n  showers: false,\n  greenrooms: false,\n  parking: false,\n  rider: false,\n  schedule: [\n    { timeString: '', event: 'Load In' },\n    { timeString: '', event: 'Soundcheck' },\n    { timeString: '', event: 'Doors' },\n    { timeString: '', event: 'Opener' },\n    { timeString: '', event: 'Second' },\n    { timeString: '', event: 'Direct' },\n    { timeString: '', event: 'Headliner' },\n    { timeString: '', event: 'Curfew' },\n    { timeString: '', event: 'Bus Call' },\n  ]\n}\n\n","// Import dependencies\nimport React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport { emptyFormObj } from '../../utils/emptyFormObj';\nimport API from '../../utils/API';\nimport CardBody from '../CardBody';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './index.scss';\n\n// Create and export dashboard page component\nexport default function GigForm() {\n  // Init state\n  const [formObj, setFormObj] = useState(emptyFormObj);\n\n  // Amenities array\n  const amenities = [\n    'catering',\n    'internet',\n    'showers',\n    'greenrooms',\n    'parking',\n    'rider',\n  ];\n\n  const venueFields = [\n    { name: 'name', col: 12 },\n    { name: 'street', col: 12 },\n    { name: 'city', col: 6 },\n    { name: 'state', col: 6 },\n    { name: 'zip', col: 6 },\n    { name: 'date', col: 6 },\n    { name: 'capacity', col: 6 },\n    { name: 'presale', col: 6 },\n  ];\n\n  const stageBlocks = [\n    { timeString: '', event: 'Load In' },\n    { timeString: '', event: 'Soundcheck' },\n    { timeString: '', event: 'Doors' },\n    { timeString: '', event: 'Opener' },\n    { timeString: '', event: 'Second' },\n    { timeString: '', event: 'Direct' },\n    { timeString: '', event: 'Headliner' },\n    { timeString: '', event: 'Curfew' },\n    { timeString: '', event: 'Bus Call' },\n  ];\n\n  const addGig = async () => {\n    try {\n      const res = await API.addGig(formObj);\n      console.log(res);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Handle input changes\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    const venue = formObj.venue;\n\n    // If input field is in a nested object inside of state\n    if (\n      name === 'name' ||\n      name === 'street' ||\n      name === 'city' ||\n      name === 'state' ||\n      name === 'zip' ||\n      name === 'capacity' ||\n      name === 'presale'\n    ) {\n      // Update the nested venue object in the form state object\n      setFormObj({\n        ...formObj,\n        venue: {\n          ...venue,\n          [name]: value,\n        },\n      });\n    }\n\n    // If input field is a direct property of state\n    else {\n      setFormObj({\n        ...formObj,\n        [name]: value,\n      });\n    }\n  };\n\n  // Handle updating state from checkboxes\n  const handleCheck = (event) => {\n    const { name, checked } = event.target;\n    setFormObj({\n      ...formObj,\n      [name]: checked,\n    });\n  };\n\n  // Handle updating state's nested schedule array\n  const handleSchedule = (event) => {\n    // Capture event parameters\n    const { name, value } = event.target;\n    const { index } = event.target.dataset;\n\n    // Extract matching object from schedule in state\n    const schedule = [...formObj.schedule];\n    const currentBlock = schedule[index];\n\n    // Update the block's and put it back in the schedule\n    currentBlock.timeString = value;\n    schedule.splice(index, 1, currentBlock);\n\n    // Reset state\n    setFormObj({\n      ...formObj,\n      schedule: schedule,\n    });\n  };\n\n  // Handle resetting all input fields in UI on submit\n  const handleReset = () => {\n    Array.from(document.querySelectorAll('input')).forEach(\n      (input) => (input.value = '')\n    );\n\n    setFormObj(emptyFormObj);\n  };\n\n  // Create a formatted input label from its name\n  const createLabel = (name) => {\n    return name.slice(0, 1).toUpperCase() + name.slice(1);\n  };\n\n  // Post form data to API\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (formObj.date) {\n      console.log(formObj);\n      addGig();\n      handleReset();\n    }\n  };\n\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <section>\n        <div className=\"row\">\n          <div className=\"col-12 col-md-10 col-lg-8 mx-auto\">\n            <CardBody>\n              <Form>\n                <div className=\"row\">\n                  {/* Creates all fields for adding venue data to form object */}\n                  {venueFields.map((field, index) => {\n                    return (\n                      <div\n                        key={`inputField-${index}`}\n                        className={`col-${field.col}`}\n                      >\n                        <Form.Group controlId={`${field.name}InputGroup`}>\n                          <Form.Label>\n                            {index === 0\n                              ? `Venue Name:`\n                              : `${createLabel(field.name)}`}\n                          </Form.Label>\n                          <Form.Control\n                            name={field.name}\n                            type={field.name === 'date' ? 'date' : 'text'}\n                            placeholder={`Enter ${createLabel(field.name)}`}\n                            value={formObj[field.name]}\n                            onChange={handleInputChange}\n                          />\n                        </Form.Group>\n                      </div>\n                    );\n                  })}\n\n                  <div className=\"col-12\">\n                    <p>Amenities (Select all that apply):</p>\n                  </div>\n\n                  {/* Creates checkboxes for each element in the amenities array */}\n                  {amenities.map((amenity, index) => {\n                    return (\n                      <div key={`checkbox-${index}`} className=\"col-6 col-md-4\">\n                        <Form.Check\n                          type=\"checkbox\"\n                          name={amenity}\n                          label={`${createLabel(amenity)}:`}\n                          checked={formObj[amenity]}\n                          onChange={handleCheck}\n                        />\n                      </div>\n                    );\n                  })}\n\n                  <div className=\"col-12 pt-3\">\n                    <p>Insert time strings for each block:</p>\n                  </div>\n\n                  {/* Create inputs for adding times to stage schedule events */}\n                  {stageBlocks.map((block, index) => {\n                    return (\n                      <div key={`block-${block.event}`} className=\"col-12\">\n                        <Form.Group>\n                          <Form.Label>{block.event}</Form.Label>\n                          <Form.Control\n                            data-index={index}\n                            name={block.event}\n                            type=\"text\"\n                            placeholder={`Enter ${block.event} start time`}\n                            value={formObj.schedule.timeString}\n                            onChange={handleSchedule}\n                            onSubmit={() =>\n                              setFormObj({\n                                ...formObj,\n                                schedule: stageBlocks,\n                              })\n                            }\n                          />\n                        </Form.Group>\n                      </div>\n                    );\n                  })}\n                </div>\n\n                {/* Submit */}\n                <div className=\"row pt-3\">\n                  <div className=\"col-12\">\n                    <Button\n                      type=\"submit\"\n                      variant=\"primary\"\n                      className=\"py-2 px-3\"\n                      onClick={handleSubmit}\n                    >\n                      Add Gig\n                    </Button>\n                  </div>\n                </div>\n              </Form>\n            </CardBody>\n          </div>\n        </div>\n      </section>\n    </motion.div>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport './index.scss';\n\n// Create and export Footer component\nexport default function Footer() {\n  return (\n    <footer>\n      <p>Powered by jxhnkndl</p>\n    </footer>\n  );\n}","// Import packages\nimport React, { useState, useEffect } from 'react';\nimport { Switch, Route, NavLink, useLocation } from 'react-router-dom';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport API from '../src/utils/API';\nimport MainNav from './components/MainNav';\nimport Dashboard from './components/Dashboard';\nimport GigForm from './components/GigForm';\nimport Footer from './components/Footer';\nimport './App.scss';\n\n// Create and export App component\nexport default function App() {\n  return (\n    <div className=\"app-container\">\n      <MainNav />\n      <main style={{ overflowX: 'hidden' }} className=\"container p-3 p-md-5\">\n        <AnimatePresence exitBeforeEnter>\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n            <Route exact path=\"/create-gig\" component={GigForm} />\n          </Switch>\n        </AnimatePresence>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport \"./index.scss\";\nimport App from \"./App\";\n\n// Importing the Bootstrap CSS\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// Render the React app\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>, \n  document.getElementById(\"root\")\n);"],"sourceRoot":""}
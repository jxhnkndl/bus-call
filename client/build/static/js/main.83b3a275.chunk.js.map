{"version":3,"sources":["utils/API.js","components/ProtectedRoute/index.js","components/LoginBtn/index.js","components/LogoutBtn/index.js","components/MainNav/index.js","utils/transitions.js","components/CardBody/index.js","components/LandingPage/index.js","components/DashboardNav/index.js","components/Daysheet/index.js","components/StageSchedule/index.js","components/Gig/index.js","components/Tour/index.js","utils/emptyFormObj.js","components/GigForm/index.js","components/Dashboard/index.js","components/Footer/index.js","App.js","index.js"],"names":["axios","get","gigData","post","ProtectedRoute","Component","component","props","isAuthenticated","useAuth0","render","to","pathname","state","from","location","LoginBtn","loginWithRedirect","Button","className","variant","onClick","LogoutBtn","logout","MainNav","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","exact","pageVariants","initial","opacity","scale","in","out","pageTransitions","type","ease","duration","CardBody","spacing","flex","children","LandingPage","DashboardNav","console","log","Dropdown","Menu","Item","onSelect","e","handleView","view","prev","next","Daysheet","amenities","name","icon","value","greenrooms","catering","internet","parking","showers","rider","date","city","venue","street","zip","presale","capacity","ListGroup","map","amenity","index","nextVenue","nextDate","nextCity","nextState","distance","StageSchedule","schedule","length","block","timeString","event","_id","Gig","motion","div","animate","exit","variants","transition","Tour","gigs","gig","showtime","split","handleSelect","handleDate","emptyFormObj","GigForm","useState","formObj","setFormObj","stageBlocks","addGig","a","API","res","handleInputChange","target","handleCheck","checked","handleSchedule","dataset","currentBlock","splice","createLabel","slice","toUpperCase","Form","col","required","field","Group","controlId","Label","Control","placeholder","onChange","Check","label","data-index","onSubmit","preventDefault","fetchGigs","toast","Array","document","querySelectorAll","forEach","input","Dashboard","setGigs","setIndex","setView","useEffect","data","dayjs","format","handleNext","handlePrev","findIndex","window","scrollTo","Footer","App","style","overflow","AnimatePresence","exitBeforeEnter","path","position","autoClose","hideProgressionBar","newestOnTop","closeOnClick","domain","process","REACT_APP_AUTH0_DOMAIN","clientId","REACT_APP_AUTH0_CLIENT_ID","ReactDOM","redirectUri","origin","getElementById"],"mappings":"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","file":"static/js/main.83b3a275.chunk.js","sourcesContent":["// Import Axios\nimport axios from 'axios';\n\n// Create and export request methods\nexport default {\n  getGigs: function() {\n    return axios.get(\"/api/gigs\");\n  },\n  addGig: function(gigData) {\n    return axios.post(\"/api/gigs\", gigData);\n  }\n}","// Import dependencies\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useAuth0 } from '@auth0/auth0-react';\n\n// Create and export Protected Route component\nexport default function ProtectedRoute({ component: Component, ...props }) {\n  const { isAuthenticated } = useAuth0();\n\n  return (\n    <Route\n      {...props}\n      render={(props) => {\n        if (isAuthenticated) {\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect to={{ pathname: '/', state: { from: props.location } }} />\n          );\n        }\n      }}\n    />\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { useAuth0 } from '@auth0/auth0-react';\n\n// Create and export LoginButton component\nexport default function LoginBtn() {\n  const { loginWithRedirect } = useAuth0();\n\n  return (\n    <Button className=\"m-2 px-4 py-2\" variant=\"primary\" onClick={() => loginWithRedirect()}>\n      Log In\n    </Button>\n  );\n}","// Import dependencies\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { useAuth0 } from '@auth0/auth0-react';\n\n// Create and export LoginButton component\nexport default function LogoutBtn() {\n  const { logout } = useAuth0();\n\n  return (\n    <Button className=\"m-2 px-4 py-2\" variant=\"primary\" onClick={() => logout()}>\n      Log Out\n      <i className=\"fas fa-sign-out-alt ml-2\"></i>\n    </Button>\n  );\n}","// Import dependencies\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport LoginBtn from '../LoginBtn';\nimport LogoutBtn from '../LogoutBtn';\nimport './index.scss';\n\n// Create and export MainNav component\nexport default function MainNav() {\n  const { isAuthenticated } = useAuth0();\n\n  return (\n    <Navbar variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand href=\"/\">Bus Call</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"nav-drawer\" />\n      <Navbar.Collapse id=\"nav-drawer\">\n        <Nav className=\"mr-auto\">\n          <NavLink className=\"nav-link\" exact to=\"/dashboard\">\n            Dashboard\n          </NavLink>\n        </Nav>\n        <Nav>{isAuthenticated ? <LogoutBtn /> : <LoginBtn />}</Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n","// Stages of page transition animation\nexport const pageVariants = {\n  initial: {\n    opacity: 0,\n    scale: 0.8\n  },\n  in: {\n    opacity: 1,\n    scale: 1\n  },\n  out: {\n    opacity: 0,\n    scale: 1.2\n  }\n}\n\n// General page transition animation properties\nexport const pageTransitions = {\n  type: 'tween',\n  ease: 'anticipate',\n  duration: .3\n}","// Import dependencies\nimport React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport './index.scss';\n\n// Create and export reusable card component\nexport default function CardBody(props) {\n  return (\n    <div className={`dash-card ${props.spacing} ${props.flex}`}>\n      {props.children}\n    </div>\n  );\n}","// Import dependencies\nimport React from 'react';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport CardBody from '../CardBody';\nimport './index.scss';\n\n// Create and export LandingPage component\nexport default function LandingPage() {\n  return (\n    <header>\n      <h1 className=\"display-1 heading text-center mt-5\">Touring made simple.</h1>\n    </header>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport CardBody from '../CardBody';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport './index.scss';\n\n// Overwrite CardBody component styles for this component only\nconst styles = {\n  cardBody: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n};\n\n// Create and export cycle control component\nexport default function DashboardNav(props) {\n  console.log(props);\n\n  return (\n    <div className=\"row mb-2 dashboard-nav\">\n      <div className=\"col-12\">\n        <CardBody\n          flex={'d-flex align-items-center justify-content-between'}\n          spacing={'px-4 py-2 m-2 m-md-0'}\n        >\n          <Dropdown className=\"d-inline-block\">\n            <Dropdown.Toggle id=\"dropdown-basic\">Options</Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item onSelect={(e) => props.handleView('gig')}>\n                View Gigs\n              </Dropdown.Item>\n              <Dropdown.Item onSelect={(e) => props.handleView('tour')}>\n                View Tour\n              </Dropdown.Item>\n              <Dropdown.Item onSelect={(e) => props.handleView('form')}>\n                Add/Edit Gig\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n          {props.view === 'gig' && (\n            <div>\n              <p className=\"nav-icon mb-0 mr-2\" onClick={props.prev}>\n                <i className=\"fas fa-arrow-circle-left\"></i>\n              </p>\n              <p className=\"nav-icon mb-0 ml-2\" onClick={props.next}>\n                <i className=\"fas fa-arrow-circle-right\"></i>\n              </p>\n            </div>\n          )}\n        </CardBody>\n      </div>\n    </div>\n  );\n}\n","// Import dependencies\nimport React, { useContext } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport dayjs from 'dayjs';\nimport './index.scss';\n\n// Create and export reusable card component\nexport default function Daysheet(props) {\n  // Create amenities array from props for rendering\n  const amenities = [\n    { name: 'Lounge', icon: 'fas fa-couch', value: props.greenrooms },\n    { name: 'Catering', icon: 'fas fa-pizza-slice', value: props.catering },\n    { name: 'Internet', icon: 'fas fa-wifi', value: props.internet },\n    { name: 'Parking', icon: 'fas fa-parking', value: props.parking },\n    { name: 'Showers', icon: 'fas fa-shower', value: props.showers },\n    { name: 'Full Rider', icon: 'fas fa-cocktail', value: props.rider },\n  ];\n\n  return (\n    <div className=\"info-container\">\n      {/* Date */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1 small-heading\">\n          <i className=\"far fa-calendar mr-2\"></i>\n          Today is\n        </p>\n        <p className=\"h2\">{props.date}</p>\n      </div>\n\n      {/* Location */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1 small-heading\">\n          <i className=\"fas fa-map-marker-alt mr-2\"></i>\n          You are in\n        </p>\n        <p className=\"h2\">{`${props.city}, ${props.state}.`}</p>\n      </div>\n\n      {/* Tonight's show */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1 small-heading\">\n          <i className=\"fas fa-headphones-alt mr-2\"></i>\n          Tonight's show\n        </p>\n        <p className=\"h2\">{props.venue}</p>\n        <p className=\"h5 mb-1\">{props.street}</p>\n        <p className=\"h5 mb-1\">{`${props.city}, ${props.state}. ${props.zip}`}</p>\n      </div>\n\n      {/* Tickets */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1 small-heading\">\n          <i className=\"fas fa-ticket-alt mr-2\"></i>\n          Presale / Capacity\n        </p>\n        <p className=\"h2\">\n          {props.presale} / {props.capacity}\n        </p>\n      </div>\n\n      {/* Amenities badges */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-3 small-heading\">Amenities</p>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <ListGroup key=\"amenities\" variant=\"flush\">\n              {/* Map over amenities and render only those that evaluate to true */}\n              {amenities.map((amenity, index) => {\n                if (amenity.value) {\n                  return (\n                    <ListGroup.Item\n                      key={`${index}-${amenity.name}`}\n                      className=\"daysheet-item\"\n                    >\n                      <div className=\"row\">\n                        <div className=\"col-3 col-md-2\">\n                          <p className=\"list-item text-center mb-1\">\n                            <i\n                              className={`amenity-icon mr-2 ${amenity.icon}`}\n                            ></i>\n                          </p>\n                        </div>\n                        <div className=\"col-9 col-md-10 daysheet-item\">\n                          <p className=\"list-item mb-1\">{amenity.name}</p>\n                        </div>\n                      </div>\n                    </ListGroup.Item>\n                  );\n                }\n              })}\n            </ListGroup>\n          </div>\n        </div>\n      </div>\n\n      {/* Next Up */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1 small-heading\">\n          <i className=\"fas fa-road mr-2\"></i>\n          Next up\n        </p>\n        <p className=\"h2 mb-1\">{props.nextVenue}</p>\n        <p className=\"h5 mb-1\">{props.nextDate}</p>\n        <p className=\"h5 mb-1\">{`${props.nextCity}, ${props.nextState}.`}</p>\n        <p className=\"h4 mb-1\">{props.distance}</p>\n      </div>\n    </div>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport './index.scss';\n\n// Create and export reusable card component\nexport default function StageSchedule(props) {\n  return (\n    <div className=\"info-container\">\n      <p className=\"dashboard-heading small-heading h5 mb-2\">Day Schedule</p>\n\n      {props.schedule.length ? (\n        <ListGroup key=\"schedule\" variant=\"flush\">\n          {props.schedule.map((block, index) => {\n            return (\n              <ListGroup.Item\n                key={`${index}-${block._id}`}\n                className=\"daysheet-item\"\n              >\n                <div className=\"row\">\n                  <div className=\"col-12 col-lg-12\">\n                    <p className=\"list-label pt-2 mb-1\">{block.timeString}</p>\n                  </div>\n                  <div className=\"col-12 col-lg-12\">\n                    <p className=\"list-item mb-1\">{block.event}</p>\n                  </div>\n                </div>\n              </ListGroup.Item>\n            );\n          })}\n        </ListGroup>\n      ) : (\n        <p className=\"h2\">NOTHING SCHEDULED</p>\n      )}\n    </div>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport CardBody from '../CardBody';\nimport Daysheet from '../Daysheet';\nimport StageSchedule from '../StageSchedule';\nimport './index.scss';\n\n// Create and export dashboard page component\nexport default function Gig(props) {\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <div>\n        <div className=\"row\">\n          <div className=\"col-12 col-md-6 mb-4\">\n            <CardBody spacing={'p-4 p-md-4 m-2 m-md-0'}>\n              <Daysheet\n                date={props.date}\n                city={props.city}\n                state={props.state}\n                venue={props.venue}\n                street={props.street}\n                zip={props.zip}\n                capacity={props.capacity}\n                presale={props.presale}\n                greenrooms={props.greenrooms}\n                catering={props.catering}\n                showers={props.showers}\n                internet={props.internet}\n                nextDate={props.nextDate}\n                nextCity={props.nextCity}\n                nextState={props.nextState}\n                nextVenue={props.nextVenue}\n                distance={props.distance}\n              />\n            </CardBody>\n          </div>\n          <div className=\"col-12 col-md-6 mb-4\">\n            <CardBody spacing={'p-4 p-md-4 m-2 m-md-0'}>\n              <StageSchedule schedule={props.schedule} />\n            </CardBody>\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport CardBody from '../CardBody';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport './index.scss';\n\n// Create and export dashboard page component\nexport default function Tour(props) {\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <div className=\"info-container\">\n        <div className=\"row\">\n          <div className=\"col-12 mb-4\">\n            <CardBody spacing={'p-4 p-md-4 m-2 m-md-0'}>\n              <div className=\"container-lg p-0\">\n                <h3 className=\"heading\">Full Tour Dates</h3>\n                <p>Click a date to view show details</p>\n\n                {props.gigs.length ? (\n                  <ListGroup key=\"tour\" variant=\"\">\n                    {/* Map over gigs array and create tour routing table */}\n                    {props.gigs.map((gig, index) => {\n                      const timeArr = gig.schedule[3].timeString.split(' ');\n                      const showtime = timeArr[0];\n\n                      return (\n                        <ListGroup.Item\n                          key={`${index}-${gig._id}`}\n                          className=\"tour-date\"\n                          onClick={props.handleSelect}\n                        >\n                          <div id={gig._id} className=\"row\">\n                            <div className=\"col-12 col-md-8 mx-auto\">\n                              <p className=\"small-heading pt-2 mb-1\">\n                                <i className=\"fas fa-calendar mr-2\"></i>\n                                {props.handleDate(gig.date)}\n                              </p>\n                              <p className=\"list-item mb-1 d-lg-inline-block\">\n                                {`${gig.venue.city}, ${gig.venue.state}. `}\n                                <span className=\"d-block d-lg-inline-block\">{`@ ${gig.venue.name}`}</span>\n                              </p>\n                            </div>\n                            <div className=\"col-12 col-md-8 mx-auto\">\n                              <p className=\"list-label mb-1\">\n                                {`Doors @ ${gig.schedule[2].timeString}`}\n                                <span className=\"d-none d-md-inline-block mx-2\">{`/`}</span>\n                                <span className=\"d-block d-md-inline-block\">{`Show @ ${showtime} PM`}</span>\n                              </p>\n                            </div>\n                            <div className=\"col-12 col-md-8 mx-auto\">\n                              <p className=\"list-label mb-1\">\n                                {`w/ Cartel, This Providence, Anarbor`}\n                              </p>\n                            </div>\n                          </div>\n                        </ListGroup.Item>\n                      );\n                    })}\n                  </ListGroup>\n                ) : (\n                  <p className=\"h2\">NO TOUR DATES TO DISPLAY</p>\n                )}\n              </div>\n            </CardBody>\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n","// Create and export empty form object\nexport const emptyFormObj = {\n  date: '',\n  venue: {\n    name: '',\n    street: '',\n    city: '',\n    state: '',\n    zip: '',\n    capacity: '0',\n    presale: '0',\n  },\n  catering: false,\n  internet: false,\n  showers: false,\n  greenrooms: false,\n  parking: false,\n  rider: false,\n  distance: 'N/A',\n  schedule: [\n    { timeString: '', event: 'Load In' },\n    { timeString: '', event: 'Soundcheck' },\n    { timeString: '', event: 'Doors' },\n    { timeString: '', event: 'Opener' },\n    { timeString: '', event: 'Second' },\n    { timeString: '', event: 'Direct' },\n    { timeString: '', event: 'Headliner' },\n    { timeString: '', event: 'Curfew' },\n    { timeString: '', event: 'Bus Call' },\n  ]\n}\n\n","// Import dependencies\nimport React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport { emptyFormObj } from '../../utils/emptyFormObj';\nimport { toast } from 'react-toastify';\nimport API from '../../utils/API';\nimport CardBody from '../CardBody';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './index.scss';\n\n// Create and export dashboard page component\nexport default function GigForm(props) {\n  // Init state\n  const [formObj, setFormObj] = useState(emptyFormObj);\n\n  // Amenities array\n  const amenities = [\n    'catering',\n    'internet',\n    'showers',\n    'greenrooms',\n    'parking',\n    'rider',\n  ];\n\n  const venueFields = [\n    { name: 'name', col: 12, required: true },\n    { name: 'street', col: 12, required: false },\n    { name: 'city', col: 6, required: true },\n    { name: 'state', col: 6, required: true },\n    { name: 'zip', col: 6, required: false },\n    { name: 'date', col: 6, required: true },\n    { name: 'capacity', col: 6, required: false },\n    { name: 'presale', col: 6, required: false },\n  ];\n\n  const stageBlocks = [\n    { timeString: '', event: 'Load In' },\n    { timeString: '', event: 'Soundcheck' },\n    { timeString: '', event: 'Doors' },\n    { timeString: '', event: 'Opener' },\n    { timeString: '', event: 'Second' },\n    { timeString: '', event: 'Direct' },\n    { timeString: '', event: 'Headliner' },\n    { timeString: '', event: 'Curfew' },\n    { timeString: '', event: 'Bus Call' },\n  ];\n\n  const addGig = async () => {\n    try {\n      const res = await API.addGig(formObj);\n      console.log(res);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Handle input changes\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    const venue = formObj.venue;\n\n    // If input is date, set field directly\n    if (name === 'date') {\n      setFormObj({\n        ...formObj,\n        [name]: value,\n      });\n\n      return;\n    }\n\n    // Otherwise, set field inside venue object\n    setFormObj({\n      ...formObj,\n      venue: {\n        ...venue,\n        [name]: value,\n      },\n    });\n  };\n\n  // Handle updating state from checkboxes\n  const handleCheck = (event) => {\n    const { name, checked } = event.target;\n    setFormObj({\n      ...formObj,\n      [name]: checked,\n    });\n  };\n\n  // Handle updating state's nested schedule array\n  const handleSchedule = (event) => {\n    // Capture event parameters\n    const { name, value } = event.target;\n    const { index } = event.target.dataset;\n\n    // Extract matching object from schedule in state\n    const schedule = [...formObj.schedule];\n    const currentBlock = schedule[index];\n\n    // Update the block's and put it back in the schedule\n    currentBlock.timeString = value;\n    schedule.splice(index, 1, currentBlock);\n\n    // Reset state\n    setFormObj({\n      ...formObj,\n      schedule: schedule,\n    });\n  };\n\n  // Handle resetting all input fields in UI on submit\n  const handleReset = () => {\n    Array.from(document.querySelectorAll('input')).forEach(\n      (input) => (input.value = '')\n    );\n\n    setFormObj(emptyFormObj);\n  };\n\n  // Create a formatted input label from its name\n  const createLabel = (name) => {\n    return name.slice(0, 1).toUpperCase() + name.slice(1);\n  };\n\n  // Post form data to API\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (formObj.date) {\n      console.log(formObj);\n      props.fetchGigs();\n      addGig();\n      toast('Gig created!');\n      handleReset();\n    }\n  };\n\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <section>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <CardBody spacing={'p-4 p-md-4 m-2 m-md-0'}>\n\n              <p className=\"h2 heading\">Add/Edit Gig</p>\n              <Form>\n                <div className=\"row\">\n\n                  {/* Creates all fields for adding venue data to form object */}\n                  {venueFields.map((field, index) => {\n                    return (\n                      <div\n                        key={`inputField-${index}`}\n                        className={`col-${field.col}`}\n                      >\n                        <Form.Group controlId={`${field.name}InputGroup`}>\n                          <Form.Label>\n                            {index === 0\n                              ? `Venue Name`\n                              : `${createLabel(field.name)}`}\n                          </Form.Label>\n                          <Form.Control\n                            name={field.name}\n                            type={field.name === 'date' ? 'date' : 'text'}\n                            placeholder={\n                              field.name === 'date'\n                                ? 'mm/dd/yyyy'\n                                : `Enter ${createLabel(field.name)}`\n                            }\n                            value={formObj[field.name]}\n                            onChange={handleInputChange}\n                          />\n                        </Form.Group>\n                      </div>\n                    );\n                  })}\n\n                  <div className=\"col-12\">\n                    <p className=\"small-heading\">Amenities (Select all that apply):</p>\n                  </div>\n\n                  {/* Creates checkboxes for each element in the amenities array */}\n                  {amenities.map((amenity, index) => {\n                    return (\n                      <div key={`checkbox-${index}`} className=\"col-6 col-md-4\">\n                        <Form.Check\n                          type=\"checkbox\"\n                          name={amenity}\n                          label={`${createLabel(amenity)}`}\n                          checked={formObj[amenity]}\n                          onChange={handleCheck}\n                        />\n                      </div>\n                    );\n                  })}\n\n                  <div className=\"col-12 pt-3\">\n                    <p className=\"small-heading\">Insert time strings for each block:</p>\n                  </div>\n\n                  {/* Create inputs for adding times to stage schedule events */}\n                  {stageBlocks.map((block, index) => {\n                    return (\n                      <div key={`block-${block.event}`} className=\"col-12\">\n                        <Form.Group>\n                          <Form.Label>{block.event}</Form.Label>\n                          <Form.Control\n                            data-index={index}\n                            name={block.event}\n                            type=\"text\"\n                            placeholder={`Enter ${block.event} start time`}\n                            value={formObj.schedule.timeString}\n                            onChange={handleSchedule}\n                            onSubmit={() =>\n                              setFormObj({\n                                ...formObj,\n                                schedule: stageBlocks,\n                              })\n                            }\n                          />\n                        </Form.Group>\n                      </div>\n                    );\n                  })}\n                </div>\n\n                {/* Submit */}\n                <div className=\"row pt-3\">\n                  <div className=\"col-12\">\n                    <Button\n                      type=\"submit\"\n                      variant=\"primary\"\n                      className=\"py-2 px-3\"\n                      onClick={handleSubmit}\n                    >\n                      Add Gig\n                    </Button>\n                  </div>\n                </div>\n              </Form>\n            </CardBody>\n          </div>\n        </div>\n      </section>\n    </motion.div>\n  );\n}\n","// Import dependencies\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport Button from 'react-bootstrap/Button';\nimport CardBody from '../CardBody';\nimport DashboardNav from '../DashboardNav';\nimport Gig from '../Gig';\nimport Tour from '../Tour';\nimport GigForm from '../GigForm';\nimport API from '../../utils/API';\nimport dayjs from 'dayjs';\nimport './index.scss';\n\n// Create and export dashboard page component\nexport default function Dashboard() {\n  // Set initial state\n  const [gigs, setGigs] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [view, setView] = useState('gig');\n\n  // Fetch gigs from API when component mounts and whenever the view state changes\n  useEffect(() => {\n    fetchGigs();\n  }, [view]);\n\n  // Fetch gigs from DB\n  const fetchGigs = async () => {\n    console.log('fetching gigs...');\n    try {\n      const res = await API.getGigs();\n      setGigs(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Handle formatting date for display\n  const handleDate = (date) => {\n    return dayjs(date).format('ddd. MMMM D, YYYY');\n  };\n\n  // Handle finding and rendering matching show details from click event in tour view\n  const handleSelect = (event) => {\n    // Figure out which show was clicked\n    const { id } = event.target;\n    const index = gigs.findIndex((gig) => gig._id === id);\n\n    console.log(id);\n    console.log(index);\n    console.log(gigs[index]);\n\n    // Update index state to render selected show\n    setIndex(index);\n\n    // Update view state to transition back to gig view\n    setView('gig');\n\n    // Reset window position to ensure most important details are inside the viewport\n    window.scrollTo(0, 0);\n  };\n\n  // Click handler for cycling to next gig\n  const handleNext = () => {\n    if (index === gigs.length - 1) {\n      setIndex(0);\n    } else {\n      console.log(gigs);\n      setIndex(index + 1);\n    }\n  };\n\n  // Click handler for cycling to previous gig\n  const handlePrev = () => {\n    if (index === 0) {\n      setIndex(gigs.length - 1);\n    } else {\n      setIndex(index - 1);\n    }\n  };\n\n  // Click handler for change dashboard's view state\n  const handleView = (view) => {\n    setView(view);\n  };\n\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <section className=\"p-2 px-md-4 px-lg-5\">\n        {gigs.length ? (\n          <div>\n            {/* Dashboard navigation controls */}\n            <DashboardNav\n              prev={handlePrev}\n              next={handleNext}\n              view={view}\n              handleView={handleView}\n            />\n\n            {/* Daysheet and stage schedule view */}\n            {view === 'gig' && (\n              <Gig\n                date={handleDate(gigs[index].date)}\n                city={gigs[index].venue.city}\n                state={gigs[index].venue.state}\n                venue={gigs[index].venue.name}\n                street={gigs[index].venue.street}\n                zip={gigs[index].venue.zip}\n                capacity={gigs[index].venue.capacity}\n                presale={gigs[index].venue.presale}\n                greenrooms={gigs[index].greenrooms}\n                catering={gigs[index].catering}\n                showers={gigs[index].showers}\n                internet={gigs[index].internet}\n                nextDate={\n                  gigs[index + 1] ? handleDate(gigs[index + 1].date) : 'N/A'\n                }\n                nextCity={gigs[index + 1] ? gigs[index + 1].venue.city : 'N/A'}\n                nextState={\n                  gigs[index + 1] ? gigs[index + 1].venue.state : 'N/A'\n                }\n                nextVenue={gigs[index + 1] ? gigs[index + 1].venue.name : 'N/A'}\n                distance={'315 miles'}\n                schedule={gigs[index].schedule}\n                prev={handlePrev}\n                next={handleNext}\n              />\n            )}\n\n            {/* Tour view for viewing full tour routing */}\n            {view === 'tour' && (\n              <Tour\n                gigs={gigs}\n                handleDate={handleDate}\n                handleSelect={handleSelect}\n              />\n            )}\n\n            {/* Form view for adding and editing gigs */}\n            {view === 'form' && <GigForm fetchGigs={fetchGigs} gigs={gigs} />}\n          </div>\n        ) : (\n          <p className=\"h2\">LOADING</p>\n        )}\n      </section>\n    </motion.div>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport './index.scss';\n\n// Create and export Footer component\nexport default function Footer() {\n  return (\n    <footer>\n      <p>Powered by jxhnkndl</p>\n    </footer>\n  );\n}","// Import packages\nimport React, { useState, useEffect } from 'react';\nimport { Switch, Route, NavLink } from 'react-router-dom';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { ToastContainer } from 'react-toastify';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport API from '../src/utils/API';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport MainNav from './components/MainNav';\nimport LandingPage from './components/LandingPage';\nimport Dashboard from './components/Dashboard';\nimport Footer from './components/Footer';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.scss';\n\n// Create and export App component\nexport default function App() {\n  // Log authentication status during development\n  const { isAuthenticated } = useAuth0();\n  console.log(isAuthenticated);\n\n  return (\n    <div className=\"app-container\">\n      <MainNav />\n      <main style={{ overflow: 'hidden' }} className=\"\">\n        <AnimatePresence exitBeforeEnter>\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            {/* <Route exact path=\"/dashboard\" component={Dashboard} /> */}\n            <ProtectedRoute exact path=\"/dashboard\" component={Dashboard} />\n          </Switch>\n        </AnimatePresence>\n      </main>\n      <Footer />\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressionBar={false}\n        newestOnTop\n        closeOnClick\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, useLocation } from 'react-router-dom';\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport './index.scss';\nimport App from './App';\n\n// Config Auth0\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n\n// Render the React app\nReactDOM.render(\n  <Auth0Provider\n    domain={domain}\n    clientId={clientId}\n    redirectUri={window.location.origin}\n  >\n    <Router>\n      <App />\n    </Router>\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
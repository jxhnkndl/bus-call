{"version":3,"sources":["utils/API.js","components/LoginBtn/index.js","components/LogoutBtn/index.js","components/MainNav/index.js","utils/transitions.js","components/CardBody/index.js","components/LandingPage/index.js","components/DashboardNav/index.js","components/Daysheet/index.js","components/StageSchedule/index.js","components/Gig/index.js","components/Tour/index.js","utils/emptyFormObj.js","components/GigForm/index.js","components/Dashboard/index.js","components/MainContent/index.js","components/Footer/index.js","App.js","index.js"],"names":["axios","get","gigData","post","LoginBtn","loginWithRedirect","useAuth0","Button","className","variant","onClick","LogoutBtn","logout","MainNav","isAuthenticated","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","exact","to","pageVariants","initial","opacity","scale","in","out","pageTransitions","type","ease","duration","CardBody","props","spacing","flex","children","LandingPage","DashboardNav","Dropdown","Menu","Item","onSelect","e","handleView","view","prev","next","Daysheet","amenities","name","icon","value","greenrooms","catering","internet","parking","showers","rider","date","city","state","venue","street","zip","presale","capacity","ListGroup","map","amenity","index","nextVenue","nextDate","nextCity","nextState","distance","StageSchedule","schedule","length","block","timeString","event","_id","Gig","motion","div","animate","exit","variants","transition","Tour","gigs","gig","showtime","split","handleDate","handleSelect","toast","error","emptyFormObj","GigForm","useState","formObj","setFormObj","stageBlocks","addGig","a","API","res","console","log","handleInputChange","target","handleCheck","checked","handleSchedule","dataset","currentBlock","splice","createLabel","slice","toUpperCase","Form","col","required","field","Group","controlId","Label","Control","placeholder","onChange","Check","label","data-index","onSubmit","preventDefault","Array","from","document","querySelectorAll","forEach","input","setTimeout","fetchGigs","Dashboard","setGigs","setIndex","setView","useEffect","data","dayjs","format","handleNext","handlePrev","findIndex","window","scrollTo","MainContent","isLoading","style","overflow","AnimatePresence","exitBeforeEnter","Footer","App","position","autoClose","hideProgressionBar","newestOnTop","closeOnClick","domain","process","REACT_APP_AUTH0_DOMAIN","clientId","REACT_APP_AUTH0_CLIENT_ID","ReactDOM","render","redirectUri","location","origin","getElementById"],"mappings":"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","file":"static/js/main.e6e4abc3.chunk.js","sourcesContent":["// Import Axios\nimport axios from 'axios';\n\n// Create and export request methods\nexport default {\n  getGigs: function() {\n    return axios.get(\"/api/gigs\");\n  },\n  addGig: function(gigData) {\n    return axios.post(\"/api/gigs\", gigData);\n  }\n}","// Import dependencies\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { useAuth0 } from '@auth0/auth0-react';\n\n// Create and export LoginButton component\nexport default function LoginBtn() {\n  const { loginWithRedirect } = useAuth0();\n\n  return (\n    <Button className=\"m-2 px-4 py-2\" variant=\"primary\" onClick={() => loginWithRedirect()}>\n      Log In\n    </Button>\n  );\n}","// Import dependencies\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { useAuth0 } from '@auth0/auth0-react';\n\n// Create and export LoginButton component\nexport default function LogoutBtn() {\n  const { logout } = useAuth0();\n\n  return (\n    <Button className=\"m-2 px-4 py-2\" variant=\"primary\" onClick={() => logout()}>\n      Log Out\n      <i className=\"fas fa-sign-out-alt ml-2\"></i>\n    </Button>\n  );\n}","// Import dependencies\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport LoginBtn from '../LoginBtn';\nimport LogoutBtn from '../LogoutBtn';\nimport './index.scss';\n\n// Create and export MainNav component\nexport default function MainNav() {\n  const { isAuthenticated } = useAuth0();\n\n  return (\n    <Navbar variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand href=\"/\">Bus Call</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"nav-drawer\" />\n      <Navbar.Collapse id=\"nav-drawer\">\n        <Nav className=\"mr-auto\">\n          <NavLink className=\"nav-link\" exact to=\"/dashboard\">\n            Dashboard\n          </NavLink>\n        </Nav>\n        <Nav>{isAuthenticated ? <LogoutBtn /> : <LoginBtn />}</Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n","// Stages of page transition animation\nexport const pageVariants = {\n  initial: {\n    opacity: 0,\n    scale: 0.8\n  },\n  in: {\n    opacity: 1,\n    scale: 1\n  },\n  out: {\n    opacity: 0,\n    scale: 1.2\n  }\n}\n\n// General page transition animation properties\nexport const pageTransitions = {\n  type: 'tween',\n  ease: 'anticipate',\n  duration: .3\n}","// Import dependencies\nimport React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport './index.scss';\n\n// Create and export reusable card component\nexport default function CardBody(props) {\n  return (\n    <div className={`dash-card ${props.spacing} ${props.flex}`}>\n      {props.children}\n    </div>\n  );\n}","// Import dependencies\nimport React from 'react';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport CardBody from '../CardBody';\nimport './index.scss';\n\n// Create and export LandingPage component\nexport default function LandingPage() {\n  return (\n    <header>\n      <h1 className=\"display-1 heading text-center mt-5\">Touring made simple.</h1>\n    </header>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport CardBody from '../CardBody';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport './index.scss';\n\n// Overwrite CardBody component styles for this component only\nconst styles = {\n  cardBody: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n};\n\n// Create and export cycle control component\nexport default function DashboardNav(props) {\n\n  return (\n    <div className=\"row mb-2 dashboard-nav\">\n      <div className=\"col-12\">\n        <CardBody\n          flex={'d-flex align-items-center justify-content-between'}\n          spacing={'px-4 py-2 m-2 m-md-0'}\n        >\n          <Dropdown className=\"d-inline-block\">\n            <Dropdown.Toggle id=\"dropdown-basic\">Options</Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item onSelect={(e) => props.handleView('gig')}>\n                View Gigs\n              </Dropdown.Item>\n              <Dropdown.Item onSelect={(e) => props.handleView('tour')}>\n                View Tour\n              </Dropdown.Item>\n              <Dropdown.Item onSelect={(e) => props.handleView('form')}>\n                Add/Edit Gig\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n          {props.view === 'gig' && (\n            <div>\n              <p className=\"nav-icon mb-0 mr-2\" onClick={props.prev}>\n                <i className=\"fas fa-arrow-circle-left\"></i>\n              </p>\n              <p className=\"nav-icon mb-0 ml-2\" onClick={props.next}>\n                <i className=\"fas fa-arrow-circle-right\"></i>\n              </p>\n            </div>\n          )}\n        </CardBody>\n      </div>\n    </div>\n  );\n}\n","// Import dependencies\nimport React, { useContext } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport dayjs from 'dayjs';\nimport './index.scss';\n\n// Create and export reusable card component\nexport default function Daysheet(props) {\n  // Create amenities array from props for rendering\n  const amenities = [\n    { name: 'Lounge', icon: 'fas fa-couch', value: props.greenrooms },\n    { name: 'Catering', icon: 'fas fa-pizza-slice', value: props.catering },\n    { name: 'Internet', icon: 'fas fa-wifi', value: props.internet },\n    { name: 'Parking', icon: 'fas fa-parking', value: props.parking },\n    { name: 'Showers', icon: 'fas fa-shower', value: props.showers },\n    { name: 'Full Rider', icon: 'fas fa-cocktail', value: props.rider },\n  ];\n\n  return (\n    <div className=\"info-container\">\n      {/* Date */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1 small-heading\">\n          <i className=\"far fa-calendar mr-2\"></i>\n          Today is\n        </p>\n        <p className=\"h2\">{props.date}</p>\n      </div>\n\n      {/* Location */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1 small-heading\">\n          <i className=\"fas fa-map-marker-alt mr-2\"></i>\n          You are in\n        </p>\n        <p className=\"h2\">{`${props.city}, ${props.state}.`}</p>\n      </div>\n\n      {/* Tonight's show */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1 small-heading\">\n          <i className=\"fas fa-headphones-alt mr-2\"></i>\n          Tonight's show\n        </p>\n        <p className=\"h2\">{props.venue}</p>\n        <p className=\"h5 mb-1\">{props.street}</p>\n        <p className=\"h5 mb-1\">{`${props.city}, ${props.state}. ${props.zip}`}</p>\n      </div>\n\n      {/* Tickets */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1 small-heading\">\n          <i className=\"fas fa-ticket-alt mr-2\"></i>\n          Presale / Capacity\n        </p>\n        <p className=\"h2\">\n          {props.presale} / {props.capacity}\n        </p>\n      </div>\n\n      {/* Amenities badges */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-3 small-heading\">Amenities</p>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <ListGroup key=\"amenities\" variant=\"flush\">\n              {/* Map over amenities and render only those that evaluate to true */}\n              {amenities.map((amenity, index) => {\n                if (amenity.value) {\n                  return (\n                    <ListGroup.Item\n                      key={`${index}-${amenity.name}`}\n                      className=\"daysheet-item\"\n                    >\n                      <div className=\"row\">\n                        <div className=\"col-3 col-md-2\">\n                          <p className=\"list-item text-center mb-1\">\n                            <i\n                              className={`amenity-icon mr-2 ${amenity.icon}`}\n                            ></i>\n                          </p>\n                        </div>\n                        <div className=\"col-9 col-md-10 daysheet-item\">\n                          <p className=\"list-item mb-1\">{amenity.name}</p>\n                        </div>\n                      </div>\n                    </ListGroup.Item>\n                  );\n                }\n              })}\n            </ListGroup>\n          </div>\n        </div>\n      </div>\n\n      {/* Next Up */}\n      <div className=\"card-item\">\n        <p className=\"h5 mb-1 small-heading\">\n          <i className=\"fas fa-road mr-2\"></i>\n          Next up\n        </p>\n        <p className=\"h2 mb-1\">{props.nextVenue}</p>\n        <p className=\"h5 mb-1\">{props.nextDate}</p>\n        <p className=\"h5 mb-1\">{`${props.nextCity}, ${props.nextState}.`}</p>\n        <p className=\"h4 mb-1\">{props.distance}</p>\n      </div>\n    </div>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport './index.scss';\n\n// Create and export reusable card component\nexport default function StageSchedule(props) {\n  return (\n    <div className=\"info-container\">\n      <p className=\"dashboard-heading small-heading h5 mb-2\">Day Schedule</p>\n\n      {props.schedule.length ? (\n        <ListGroup key=\"schedule\" variant=\"flush\">\n          {props.schedule.map((block, index) => {\n            return (\n              <ListGroup.Item\n                key={`${index}-${block._id}`}\n                className=\"daysheet-item\"\n              >\n                <div className=\"row\">\n                  <div className=\"col-12 col-lg-12\">\n                    <p className=\"list-label pt-2 mb-1\">{block.timeString}</p>\n                  </div>\n                  <div className=\"col-12 col-lg-12\">\n                    <p className=\"list-item mb-1\">{block.event}</p>\n                  </div>\n                </div>\n              </ListGroup.Item>\n            );\n          })}\n        </ListGroup>\n      ) : (\n        <p className=\"h2\">NOTHING SCHEDULED</p>\n      )}\n    </div>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport CardBody from '../CardBody';\nimport Daysheet from '../Daysheet';\nimport StageSchedule from '../StageSchedule';\nimport './index.scss';\n\n// Create and export dashboard page component\nexport default function Gig(props) {\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <div>\n        <div className=\"row\">\n          <div className=\"col-12 col-md-6 mb-4\">\n            <CardBody spacing={'p-4 p-md-4 m-2 m-md-0'}>\n              <Daysheet\n                date={props.date}\n                city={props.city}\n                state={props.state}\n                venue={props.venue}\n                street={props.street}\n                zip={props.zip}\n                capacity={props.capacity}\n                presale={props.presale}\n                greenrooms={props.greenrooms}\n                catering={props.catering}\n                showers={props.showers}\n                internet={props.internet}\n                nextDate={props.nextDate}\n                nextCity={props.nextCity}\n                nextState={props.nextState}\n                nextVenue={props.nextVenue}\n                distance={props.distance}\n              />\n            </CardBody>\n          </div>\n          <div className=\"col-12 col-md-6 mb-4\">\n            <CardBody spacing={'p-4 p-md-4 m-2 m-md-0'}>\n              <StageSchedule schedule={props.schedule} />\n            </CardBody>\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport { toast } from 'react-toastify';\nimport Button from 'react-bootstrap/Button';\nimport CardBody from '../CardBody';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport './index.scss';\n\n// Create and export dashboard page component\nexport default function Tour(props) {\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <div className=\"info-container\">\n        <div className=\"row\">\n          <div className=\"col-12 mb-4\">\n            <CardBody spacing={'p-4 p-md-4 m-2 m-md-0'}>\n              <div className=\"container-lg p-0\">\n                <h3 className=\"heading\">Full Tour Dates</h3>\n                <p>Click a date to view show details</p>\n\n                {props.gigs.length ? (\n                  <ListGroup key=\"tour\" variant=\"\">\n                    {/* Map over gigs array and create tour routing table */}\n                    {props.gigs.map((gig, index) => {\n                      const timeArr = gig.schedule[3].timeString.split(' ');\n                      const showtime = timeArr[0];\n\n                      return (\n                        <ListGroup.Item\n                          key={`${index}-${gig._id}`}\n                          className=\"tour-date row\"\n                        >\n                          <div className=\"row\">\n                            <div className=\"col-12 col-md-8 mx-auto\">\n                              <p className=\"small-heading pt-2 mb-1\">\n                                <i className=\"fas fa-calendar mr-2\"></i>\n                                {props.handleDate(gig.date)}\n                              </p>\n                              <p className=\"list-item mb-1 d-lg-inline-block\">\n                                {`${gig.venue.city}, ${gig.venue.state}. `}\n                                <span className=\"d-block d-lg-inline-block\">{`@ ${gig.venue.name}`}</span>\n                              </p>\n                            </div>\n                            <div className=\"col-12 col-md-8 mx-auto\">\n                              <p className=\"list-label mb-1\">\n                                {`Doors @ ${gig.schedule[2].timeString}`}\n                                <span className=\"d-none d-md-inline-block mx-2\">{`/`}</span>\n                                <span className=\"d-block d-md-inline-block\">{`Show @ ${showtime} PM`}</span>\n                              </p>\n                            </div>\n                            <div className=\"col-12 col-md-8 mx-auto\">\n                              <p className=\"list-label mb-1\">\n                                {`w/ Cartel, This Providence, Anarbor`}\n                              </p>\n                            </div>\n                            <div className=\"col-12 col-md-8 mx-auto\">\n                              <Button\n                                id={gig._id}\n                                variant=\"primary\"\n                                className=\"my-2\"\n                                onClick={(event) => {\n                                  if (props.gigs.length) {\n                                    props.handleSelect(event);\n\n                                  } else {\n                                    toast.error('Oh no! Something went wrong. Try again!');\n                                  }\n                                }}\n                              >\n                                View Details\n                              </Button>\n                            </div>\n                          </div>\n                        </ListGroup.Item>\n                      );\n                    })}\n                  </ListGroup>\n                ) : (\n                  <p className=\"h2\">NO TOUR DATES TO DISPLAY</p>\n                )}\n              </div>\n            </CardBody>\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n","// Create and export empty form object\nexport const emptyFormObj = {\n  date: '',\n  venue: {\n    name: '',\n    street: '',\n    city: '',\n    state: '',\n    zip: '',\n    capacity: '0',\n    presale: '0',\n  },\n  catering: false,\n  internet: false,\n  showers: false,\n  greenrooms: false,\n  parking: false,\n  rider: false,\n  distance: 'N/A',\n  schedule: [\n    { timeString: '', event: 'Load In' },\n    { timeString: '', event: 'Soundcheck' },\n    { timeString: '', event: 'Doors' },\n    { timeString: '', event: 'Opener' },\n    { timeString: '', event: 'Second' },\n    { timeString: '', event: 'Direct' },\n    { timeString: '', event: 'Headliner' },\n    { timeString: '', event: 'Curfew' },\n    { timeString: '', event: 'Bus Call' },\n  ]\n}\n\n","// Import dependencies\nimport React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport { emptyFormObj } from '../../utils/emptyFormObj';\nimport { toast } from 'react-toastify';\nimport API from '../../utils/API';\nimport CardBody from '../CardBody';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './index.scss';\n\n// Create and export dashboard page component\nexport default function GigForm(props) {\n  // Init state\n  const [formObj, setFormObj] = useState(emptyFormObj);\n\n  // Amenities array\n  const amenities = [\n    'catering',\n    'internet',\n    'showers',\n    'greenrooms',\n    'parking',\n    'rider',\n  ];\n\n  const venueFields = [\n    { name: 'name', col: 12, required: true },\n    { name: 'street', col: 12, required: false },\n    { name: 'city', col: 6, required: true },\n    { name: 'state', col: 6, required: true },\n    { name: 'zip', col: 6, required: false },\n    { name: 'date', col: 6, required: true },\n    { name: 'capacity', col: 6, required: false },\n    { name: 'presale', col: 6, required: false },\n  ];\n\n  const stageBlocks = [\n    { timeString: '', event: 'Load In' },\n    { timeString: '', event: 'Soundcheck' },\n    { timeString: '', event: 'Doors' },\n    { timeString: '', event: 'Opener' },\n    { timeString: '', event: 'Second' },\n    { timeString: '', event: 'Direct' },\n    { timeString: '', event: 'Headliner' },\n    { timeString: '', event: 'Curfew' },\n    { timeString: '', event: 'Bus Call' },\n  ];\n\n  const addGig = async () => {\n    try {\n      const res = await API.addGig(formObj);\n      console.log(res);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Handle input changes\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    const venue = formObj.venue;\n\n    // If input is date, set field directly\n    if (name === 'date') {\n      setFormObj({\n        ...formObj,\n        [name]: value,\n      });\n\n      return;\n    }\n\n    // Otherwise, set field inside venue object\n    setFormObj({\n      ...formObj,\n      venue: {\n        ...venue,\n        [name]: value,\n      },\n    });\n  };\n\n  // Handle updating state from checkboxes\n  const handleCheck = (event) => {\n    const { name, checked } = event.target;\n    setFormObj({\n      ...formObj,\n      [name]: checked,\n    });\n  };\n\n  // Handle updating state's nested schedule array\n  const handleSchedule = (event) => {\n    // Capture event parameters\n    const { name, value } = event.target;\n    const { index } = event.target.dataset;\n\n    // Extract matching object from schedule in state\n    const schedule = [...formObj.schedule];\n    const currentBlock = schedule[index];\n\n    // Update the block's and put it back in the schedule\n    currentBlock.timeString = value;\n    schedule.splice(index, 1, currentBlock);\n\n    // Reset state\n    setFormObj({\n      ...formObj,\n      schedule: schedule,\n    });\n  };\n\n  // Handle resetting all input fields in UI on submit\n  const handleReset = () => {\n    Array.from(document.querySelectorAll('input')).forEach(\n      (input) => (input.value = '')\n    );\n\n    setFormObj(emptyFormObj);\n  };\n\n  // Create a formatted input label from its name\n  const createLabel = (name) => {\n    return name.slice(0, 1).toUpperCase() + name.slice(1);\n  };\n\n  // Post form data to API\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Only submit these properties have values\n    if (formObj.date) {\n      console.log(formObj);\n      addGig();\n      toast('Gig created!');\n      handleReset();\n\n      // Delay fetching gigs from API for long enough to ensure\n      // that the newly added gig has been created and can be\n      // returned to the client\n      setTimeout(() => {\n        props.fetchGigs();\n      }, 250);\n    }\n  };\n\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <section>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <CardBody spacing={'p-4 p-md-4 m-2 m-md-0'}>\n\n              <p className=\"h2 heading\">Add/Edit Gig</p>\n              <Form>\n                <div className=\"row\">\n\n                  {/* Creates all fields for adding venue data to form object */}\n                  {venueFields.map((field, index) => {\n                    return (\n                      <div\n                        key={`inputField-${index}`}\n                        className={`col-${field.col}`}\n                      >\n                        <Form.Group controlId={`${field.name}InputGroup`}>\n                          <Form.Label>\n                            {index === 0\n                              ? `Venue Name`\n                              : `${createLabel(field.name)}`}\n                          </Form.Label>\n                          <Form.Control\n                            name={field.name}\n                            type={field.name === 'date' ? 'date' : 'text'}\n                            placeholder={\n                              field.name === 'date'\n                                ? 'mm/dd/yyyy'\n                                : `Enter ${createLabel(field.name)}`\n                            }\n                            value={formObj[field.name]}\n                            onChange={handleInputChange}\n                          />\n                        </Form.Group>\n                      </div>\n                    );\n                  })}\n\n                  <div className=\"col-12\">\n                    <p className=\"small-heading\">Amenities (Select all that apply):</p>\n                  </div>\n\n                  {/* Creates checkboxes for each element in the amenities array */}\n                  {amenities.map((amenity, index) => {\n                    return (\n                      <div key={`checkbox-${index}`} className=\"col-6 col-md-4\">\n                        <Form.Check\n                          type=\"checkbox\"\n                          name={amenity}\n                          label={`${createLabel(amenity)}`}\n                          checked={formObj[amenity]}\n                          onChange={handleCheck}\n                        />\n                      </div>\n                    );\n                  })}\n\n                  <div className=\"col-12 pt-3\">\n                    <p className=\"small-heading\">Insert time strings for each block:</p>\n                  </div>\n\n                  {/* Create inputs for adding times to stage schedule events */}\n                  {stageBlocks.map((block, index) => {\n                    return (\n                      <div key={`block-${block.event}`} className=\"col-12\">\n                        <Form.Group>\n                          <Form.Label>{block.event}</Form.Label>\n                          <Form.Control\n                            data-index={index}\n                            name={block.event}\n                            type=\"text\"\n                            placeholder={`Enter ${block.event} start time`}\n                            value={formObj.schedule.timeString}\n                            onChange={handleSchedule}\n                            onSubmit={() =>\n                              setFormObj({\n                                ...formObj,\n                                schedule: stageBlocks,\n                              })\n                            }\n                          />\n                        </Form.Group>\n                      </div>\n                    );\n                  })}\n                </div>\n\n                {/* Submit */}\n                <div className=\"row pt-3\">\n                  <div className=\"col-12\">\n                    <Button\n                      type=\"submit\"\n                      variant=\"primary\"\n                      className=\"py-2 px-3\"\n                      onClick={handleSubmit}\n                    >\n                      Add Gig\n                    </Button>\n                  </div>\n                </div>\n              </Form>\n            </CardBody>\n          </div>\n        </div>\n      </section>\n    </motion.div>\n  );\n}\n","// Import dependencies\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { pageVariants, pageTransitions } from '../../utils/transitions';\nimport { toast } from 'react-toastify';\nimport Button from 'react-bootstrap/Button';\nimport CardBody from '../CardBody';\nimport DashboardNav from '../DashboardNav';\nimport Gig from '../Gig';\nimport Tour from '../Tour';\nimport GigForm from '../GigForm';\nimport API from '../../utils/API';\nimport dayjs from 'dayjs';\nimport './index.scss';\n\n// Create and export dashboard page component\nexport default function Dashboard() {\n  // Set initial state\n  const [gigs, setGigs] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [view, setView] = useState('gig');\n\n  // Fetch gigs from API when component mounts and whenever the view state changes\n  useEffect(() => {\n    fetchGigs();\n  }, []);\n\n  // Fetch gigs from DB\n  const fetchGigs = async () => {\n    console.log('Fetching gigs...');\n    try {\n      const res = await API.getGigs();\n      setGigs(res.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Handle formatting date for display\n  const handleDate = (date) => {\n    return dayjs(date).format('ddd. MMMM D, YYYY');\n  };\n\n  // Handle finding and rendering matching show details from click event in tour view\n  const handleSelect = (event) => {\n    event.preventDefault();\n\n    const { id } = event.target;\n    const index = gigs.findIndex((gig) => gig._id === id);\n\n    if (index === -1) {\n      toast.error('Something went wrong! Please try again.');\n      console.log(event.target);\n      return;\n\n    } else {\n      console.log('Accessing gig...');\n  \n      // Update index state to render selected show\n      setIndex(index);\n  \n      // Update view state to switch back to gig view\n      setView('gig');\n      window.scrollTo(0, 0);\n    }\n  };\n\n  // Click handler for cycling to next gig\n  const handleNext = () => {\n    if (index === gigs.length - 1) {\n      setIndex(0);\n    } else {\n      console.log(gigs);\n      setIndex(index + 1);\n    }\n  };\n\n  // Click handler for cycling to previous gig\n  const handlePrev = () => {\n    if (index === 0) {\n      setIndex(gigs.length - 1);\n    } else {\n      setIndex(index - 1);\n    }\n  };\n\n  // Click handler for change dashboard's view state\n  const handleView = (view) => {\n    setView(view);\n  };\n\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"in\"\n      exit=\"out\"\n      variants={pageVariants}\n      transition={pageTransitions}\n    >\n      <section className=\"p-2 px-md-4 px-lg-5\">\n        {gigs.length ? (\n          <div>\n            {/* Dashboard navigation controls */}\n            <DashboardNav\n              prev={handlePrev}\n              next={handleNext}\n              gigs={gigs}\n              view={view}\n              handleView={handleView}\n            />\n\n            {/* Daysheet and stage schedule view */}\n            {view === 'gig' && (\n              <Gig\n                date={handleDate(gigs[index].date)}\n                city={gigs[index].venue.city}\n                state={gigs[index].venue.state}\n                venue={gigs[index].venue.name}\n                street={gigs[index].venue.street}\n                zip={gigs[index].venue.zip}\n                capacity={gigs[index].venue.capacity}\n                presale={gigs[index].venue.presale}\n                greenrooms={gigs[index].greenrooms}\n                catering={gigs[index].catering}\n                showers={gigs[index].showers}\n                internet={gigs[index].internet}\n                nextDate={\n                  gigs[index + 1] ? handleDate(gigs[index + 1].date) : 'N/A'\n                }\n                nextCity={gigs[index + 1] ? gigs[index + 1].venue.city : 'N/A'}\n                nextState={\n                  gigs[index + 1] ? gigs[index + 1].venue.state : 'N/A'\n                }\n                nextVenue={gigs[index + 1] ? gigs[index + 1].venue.name : 'N/A'}\n                distance={'315 miles'}\n                schedule={gigs[index].schedule}\n                prev={handlePrev}\n                next={handleNext}\n              />\n            )}\n\n            {/* Tour view for viewing full tour routing */}\n            {view === 'tour' && (\n              <Tour\n                gigs={gigs}\n                handleDate={handleDate}\n                handleSelect={handleSelect}\n              />\n            )}\n\n            {/* Form view for adding and editing gigs */}\n            {view === 'form' && <GigForm fetchGigs={fetchGigs} gigs={gigs} />}\n          </div>\n        ) : (\n          <p className=\"h2\">LOADING</p>\n        )}\n      </section>\n    </motion.div>\n  );\n}\n","// Import packages\nimport React from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport LandingPage from '../LandingPage';\nimport Dashboard from '../Dashboard';\n\nexport default function MainContent() {\n  const { isLoading, isAuthenticated } = useAuth0();\n\n  if (isLoading) {\n    return (\n      <main style={{ overflow: 'hidden' }}>\n        <AnimatePresence exitBeforeEnter>\n          <h3 className=\"text-center\">Loading dashboard...</h3>\n        </AnimatePresence>\n      </main>\n    );\n  }\n\n  return (\n    <main style={{ overflow: 'hidden' }} className=\"\">\n      <AnimatePresence exitBeforeEnter>\n        {isAuthenticated ? <Dashboard /> : <LandingPage />}\n      </AnimatePresence>\n    </main>\n  );\n}\n","// Import dependencies\nimport React from 'react';\nimport './index.scss';\n\n// Create and export Footer component\nexport default function Footer() {\n  return (\n    <footer>\n      <p>Powered by jxhnkndl</p>\n    </footer>\n  );\n}","// Import packages\nimport React, { useState, useEffect } from 'react';\nimport { Switch, Route, NavLink } from 'react-router-dom';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { ToastContainer } from 'react-toastify';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport API from '../src/utils/API';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport MainNav from './components/MainNav';\nimport MainContent from './components/MainContent';\nimport LandingPage from './components/LandingPage';\nimport Dashboard from './components/Dashboard';\nimport Footer from './components/Footer';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.scss';\n\n// Create and export App component\nexport default function App() {\n  // Log authentication status during development\n  const { isAuthenticated, isLoading } = useAuth0();\n  console.log(isAuthenticated);\n\n  return (\n    <div className=\"app-container\">\n      <MainNav />\n      <MainContent />\n      <Footer />\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressionBar={false}\n        newestOnTop\n        closeOnClick\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, useLocation } from 'react-router-dom';\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport './index.scss';\nimport App from './App';\n\n// Config Auth0\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n\n// Render the React app\nReactDOM.render(\n  <Auth0Provider\n    domain={domain}\n    clientId={clientId}\n    redirectUri={window.location.origin}\n  >\n    <Router>\n      <App />\n    </Router>\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}